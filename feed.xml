<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Particle Blog</title>
    <link>http://spark.github.io/staging-blog</link>
    <atom:link href="http://spark.github.io/staging-blog/feed.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-us</language>
    <pubDate>Fri, 16 Sep 2016 00:41:38 +0000</pubDate>
    <lastBuildDate>Fri, 16 Sep 2016 00:41:38 +0000</lastBuildDate>

    
    
    <item>
      <title>Particle App v2.0 for iOS</title>
      <link>http://spark.github.io/staging-blog/2016/09/15/tinker2/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2016/09/15/tinker2</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img width=&quot;700&quot; style=&quot;border: 2px solid #c7c7c7&quot; src=&quot;http://spark.github.io/staging-blog/images/20160915-tinker2/titlephoto.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;We&amp;#39;re proud to announce a major update to the Particle App for iOS! In v2.0 of the Particle App, we&amp;#39;ve introduced &lt;strong&gt;Device Inspector&lt;/strong&gt;, a new view for the Particle iOS app which lets you visualize key device information at a glance, call and read custom functions and variables remotely, and view/sort events published from your device. We&amp;#39;ve also overhauled the look and feel of the Particle App, squashed a bunch of nasty bugs, and improved setup reliability, making v2.0 the most useful and beautiful release of the Particle App yet.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Device Inspector&lt;/h2&gt;

&lt;p&gt;Device Inspector adds a whole new set of functionality to the Particle App and works with all Particle devices. Best of all, it works with devices running custom firmware applications, which means you can make use of the Particle App as a prototyping tool for more advanced projects even after you&amp;#39;ve progressed beyond the stock &amp;quot;Tinker&amp;quot; firmware.&lt;/p&gt;

&lt;p&gt;Device Inspector has three primary visual panes: &lt;strong&gt;Info&lt;/strong&gt;, &lt;strong&gt;Data&lt;/strong&gt;, and &lt;strong&gt;Events&lt;/strong&gt;.  Each of these three views provide you with different information about the status of your Photon or Electron.&lt;/p&gt;

&lt;p&gt;&lt;br&gt; &lt;/br&gt;&lt;/p&gt;

&lt;h3&gt;Info View&lt;/h3&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img width=&quot;400&quot; style=&quot;border: 1px solid #c7c7c7&quot; src=&quot;http://spark.github.io/staging-blog/images/20160915-tinker2/info.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Info view provides you with all the information you need about your Particle devices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Device ID.&lt;/strong&gt; Your device ID is the unique hardware identifier for your Particle device. The new Particle App makes it easy to find and copy your device&amp;#39;s ID to your phone&amp;#39;s clipboard in case you need to send or paste it somewhere else.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Last Heard&lt;/strong&gt; The last time we&amp;#39;ve seen your device connected to the Particle Cloud.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP Address&lt;/strong&gt; Your device&amp;#39;s IP address. Useful for identification on a crowded Wi-Fi network.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ICCID (Electron only)&lt;/strong&gt; The unique identifier for your Particle SIM Card.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IMEI (Electron only)&lt;/strong&gt; The IMEI for your Electron&amp;#39;s GSM radio.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Usage (Electron only)&lt;/strong&gt; We&amp;#39;ve put your Electron&amp;#39;s data consumption right in the mobile app to make it easier to keep an eye on.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt; &lt;/br&gt;&lt;/p&gt;

&lt;h3&gt;Data View&lt;/h3&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img width=&quot;400&quot; style=&quot;border: 1px solid #c7c7c7&quot; src=&quot;http://spark.github.io/staging-blog/images/20160915-tinker2/data.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Data view provides you with a list of the exposed &lt;code&gt;Particle.function&lt;/code&gt;&amp;#39;s and &lt;code&gt;Particle.variable&lt;/code&gt;&amp;#39;s on your device. By clicking on the dropdown arrow next to each &lt;code&gt;Particle.function&lt;/code&gt;, you&amp;#39;re presented with an text box to send function arguments to your Photon or Electron. Clicking on each &lt;code&gt;Particle.variable&lt;/code&gt; reads and updates the value of the corresponding function on your device and displays it in real time in the application.&lt;/p&gt;

&lt;p&gt;The Data view provides a beautiful and easy-to-use interface for interacting and controlling your Photons and Electrons without needing to build an entire web or mobile interface from scratch. It&amp;#39;s also great for remote debugging and diagnostics to ensure that your Particle projects and products are working as expected.&lt;/p&gt;

&lt;p&gt;This was one of our most highly requested mobile features, and we&amp;#39;re really happy to bring it to the Particle App in v2.0.&lt;/p&gt;

&lt;p&gt;&lt;br&gt; &lt;/br&gt;&lt;/p&gt;

&lt;h3&gt;Events View&lt;/h3&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img width=&quot;400&quot; style=&quot;border: 1px solid #c7c7c7&quot; src=&quot;http://spark.github.io/staging-blog/images/20160915-tinker2/events.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Events view displays the list of &lt;code&gt;Particle.publish&lt;/code&gt; events from all the devices registered to your Particle account. Each event includes the name of the device it was published from, the value of the data that was published, and a timestamp of the event.&lt;/p&gt;

&lt;p&gt;You can filter the event stream by any of the data fields (device name, data type, or timestamp), and can pause or clear the event stream at any time to take a closer look at a particular event. Like the &lt;strong&gt;Info&lt;/strong&gt; view, we&amp;#39;ve also made it easy to copy event data to your clipboard so it can be shared or copied to another application or interface.&lt;/p&gt;

&lt;p&gt;The Events view makes it easy to administer and monitor an entire fleet of connected sensors or actuators in real time. Want to check in on the ambient temperature in each of the 6 rooms of your home from work? The Events view is the place to be.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Other Features and Improvements&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve made a bunch of other improvements in v2.0 of the Particle App which aren&amp;#39;t mentioned in this post, but are listed below (because they&amp;#39;re awesome!):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Overhauled UI&lt;/strong&gt;. The entire user interface has been updated with a clean UI and color palette that emphasizes ease of use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auto-updating device lists.&lt;/strong&gt; Your Particle device lists now automatically update if you claim or remove a Particle device from your account.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Signal a device.&lt;/strong&gt; You can &amp;quot;signal&amp;quot; a device from any view in the Device Inspector to make it&amp;#39;s LED shout rainbows for 10 seconds. This feature is great for identifying a particular device among a larger group of Photons and Electrons.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improved reliability.&lt;/strong&gt; We&amp;#39;ve squashed a lot of annoying bugs that interrupted and complicated device setup. The setup experience is now smoother and easier than ever before.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;The Particle App v2.0 is a free update for all iOS devices, and is available now in the App Store. Particle App v2.0 will be coming to Android and Windows shortly--stay tuned!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Particle Pomodoro: An Internet-connected Pomodoro Timer</title>
      <link>http://spark.github.io/staging-blog/2016/06/29/neopixels/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2016/06/29/neopixels</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/pomodoro2.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;We&amp;#39;re a big fan of productivity tools here at Particle--at any given moment, our collective backlog is stored between Asana, JIRA, Excel spreadsheets, Wunderlist, gantt charts, and good old fashioned sticky notes.&lt;/p&gt;

&lt;p&gt;Unfortunately, none of those tools actually &lt;em&gt;do&lt;/em&gt; the work for you--for getting stuff done, we love the Pomodoro technique. Sure, there are plenty of free Pomodoro timers that you can download for your phone and computer, but everyone knows the best cure for a boatload of work is a good side-project, so we decided to build one ourselves (accelerated video below).&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe src=&quot;https://vine.co/v/5aDK7KQuMwX/embed/simple&quot; width=&quot;400&quot; height=&quot;400&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;In this blog post, we&amp;#39;re going to show you how to assemble a NeoPixel-powered, IoT Pomodoro Timer based on the &lt;a href=&quot;https://store.particle.io/collections/shields-and-kits/#internet-button&quot;&gt;Particle Internet Button&lt;/a&gt; that logs your Pomodoro cycles to Google Sheets for later analysis.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a class=&quot;btn&quot; style=&quot;margin-left:auto;margin-right:auto;&quot; href=&quot;https://store.particle.io/collections/shields-and-kits/#internet-button&quot;&gt;Get an Internet Button&lt;/a&gt;
&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;How it Works&lt;/h2&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/cycle.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Pomodoro Technique is simple--to keep yourself alert and productive, work in 25 minute intervals then give yourself a 5 minute break. A 25 minute work period and 5 minute rest period constitutes one &amp;quot;pomodoro&amp;quot;. After four cycles, you should give yourself a longer break of 15-30 minutes. Four cycles of work and rest is called a &amp;quot;cycle&amp;quot; or &amp;quot;set&amp;quot;.&lt;/p&gt;

&lt;p&gt;There are both software and hardware timers that you can buy to keep yourself in rhythm, such as Amazon&amp;#39;s &amp;quot;&lt;a href=&quot;https://www.amazon.com/HomeFlav-Adorables-Kitchen-Timer-Tomato/dp/B00FEC2IRM/ref=sr_1_4?ie=UTF8&amp;amp;qid=1467237578&amp;amp;sr=8-4&amp;amp;keywords=pomodoro+timer&quot;&gt;HomeFlav Kitchen Timer Tomato&lt;/a&gt;&amp;quot;, or the &lt;a href=&quot;https://itunes.apple.com/us/app/pomodoro-time-focus-timer/id973134470?mt=12&quot;&gt;Pomodoro Time&lt;/a&gt; app for Mac.&lt;/p&gt;

&lt;p&gt;Neither of these options, though, boast the best of both worlds--the satisfaction of mashing a physical button with the convenience and intelligence of the Cloud. Presenting &lt;strong&gt;Particle Pomodoro&lt;/strong&gt;, a physical Pomodoro timer based on the &lt;a href=&quot;https://store.particle.io/collections/shields-and-kits/#internet-button&quot;&gt;Particle Internet Button&lt;/a&gt; that displays your progress through working sets with pretty NeoPixel LEDs and logs your progress to Google sheets for later self-optimization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instructions&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Press button 2, 3, or 4 to start the Pomodoro timer.&lt;/strong&gt; For 25 minutes, the LEDs along the outside edge will glow green. For the 5 minute rest period, they will glow purple.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Press button 1 to reset the timer&lt;/strong&gt; at any time. It will beep to let you know it worked.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A pleasant melody will play&lt;/strong&gt; at the end of the work period and at the end of the rest period&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Hardware&lt;/h2&gt;

&lt;p&gt;To get started, you&amp;#39;ll need just &lt;strong&gt;two things&lt;/strong&gt;:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/collections/shields-and-kits/#internet-button&quot;&gt;Particle Internet Button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;15-20 minutes you&amp;#39;d rather not spend on all the actual work you have to do&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any NeoPixel ring or strip is an acceptable stand-in for the Internet Button, but note that you&amp;#39;ll have to substitute the &lt;code&gt;NEOPIXEL&lt;/code&gt; library for the &lt;code&gt;INTERNETBUTTON&lt;/code&gt; library in the &lt;code&gt;Firmware&lt;/code&gt; section of the tutorial below. You may have to make other tweaks to the firmware depending on the geometry and number of pixels in your chain/ring. You&amp;#39;ll also need some sort of button or actuator to trigger the start of the Pomodoro cycle, and a magnetic buzzer if you want to hear pleasant 8-bit tones at the beginning and end of your work and rest cycles.&lt;/p&gt;

&lt;p&gt;None of these modifications should be too complicated, though, and we&amp;#39;ve created a &lt;a href=&quot;https://community.particle.io/t/particle-pomodoro-a-data-logging-pomodoro-timer/24158&quot;&gt;thread in our forums&lt;/a&gt; to discuss and troubleshoot the Pomodoro example that we&amp;#39;ve built in this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alternate Materials List&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Particle Photon&lt;/li&gt;
&lt;li&gt;Neopixel Ring or strip (at least 11 LEDs)&lt;/li&gt;
&lt;li&gt;USB-Micro cable and 5V power source&lt;/li&gt;
&lt;li&gt;Two buttons (one for start, one for reset)&lt;/li&gt;
&lt;li&gt;[Optional] Magnetic buzzer&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Firmware&lt;/h2&gt;

&lt;p&gt;If you haven&amp;#39;t already, you&amp;#39;ll need to setup and claim your Particle device. A full set of instructions for completing setup can be found in the video below, or at &lt;a href=&quot;https://docs.particle.io/guide/getting-started/intro/photon/&quot;&gt;http://particle.io/start&lt;/a&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/VFU8eMY0u1I&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;To check that you&amp;#39;ve successfully claimed the Photon to your account, head over to our &lt;a href=&quot;https://build.particle.io&quot;&gt;Web IDE&lt;/a&gt; to create and account or login.&lt;/p&gt;

&lt;div width=&quot;560&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/login.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Click on the &amp;quot;Devices&amp;quot; button on the left-hand side of the navigation bar--you should see your Photon in the device list on the left. I see my Photon, &lt;code&gt;Pomodoro&lt;/code&gt;, so I&amp;#39;m good to go!&lt;/p&gt;

&lt;div width=&quot;560&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/devices.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Click the star icon on the left of your Pomodoro device in order to target it. Next, copy and paste the firmware below into the application window, give your firmware file a name (&lt;code&gt;Pomodoro-Timer&lt;/code&gt; is what we called ours), and click &amp;quot;Save&amp;quot;. Great! You&amp;#39;ve now got the Pomodoro app loaded into the Web IDE, and are almost ready to flash it to your device.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/mohitbhoite/ba78e27338865288d28504cd2ead3813.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Next, we need to add the &lt;code&gt;INTERNETBUTTON&lt;/code&gt; library to our application (or &lt;code&gt;NEOPIXEL&lt;/code&gt; library, if you&amp;#39;re using another LED strip). To do that, click on the &amp;quot;Libraries&amp;quot; icon on the left-hand navigation bar, then click on the &lt;code&gt;INTERNETBUTTON&lt;/code&gt; library under the &amp;quot;Official Libraries&amp;quot; section. Click the &amp;quot;Include in App&amp;quot; button to add it to your Pomodoro application.&lt;/p&gt;

&lt;div width=&quot;560&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/include.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Select the name of your Pomodoro firmware, and click the &lt;code&gt;Add to This App&lt;/code&gt; button. You&amp;#39;ll know that the library was added successfully if you see the following code snippet at the top of your Pomodoro application.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/statement.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The final step is to flash the firmware to your device. Simply press the &amp;quot;Flash&amp;quot; icon at the top left-hand side of the navigation bar. You&amp;#39;ll see your device flash magenta quickly, then flash green and cyan as it reconnects to your network.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Voila!&lt;/strong&gt; Your Pomodoro Timer is officially online and activated! Press down on any of buttons 2, 3, or 4 to make sure it&amp;#39;s working correctly--you should see the green dots illuminate on the outside edge during the 25 minute work period, followed by three purple dots during your 5 minute rest period.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re using an &lt;a href=&quot;https://store.particle.io/collections/shields-and-kits/#internet-button&quot;&gt;Internet Button&lt;/a&gt;, you&amp;#39;ll hear a pleasant alarm sound at the end of your work and rest periods. Your full Pomodoro should look like the (accelerated) video below.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe src=&quot;https://vine.co/v/5aDK7KQuMwX/embed/simple&quot; width=&quot;400&quot; height=&quot;400&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Integrating with Google Sheets&lt;/h2&gt;

&lt;p&gt;The last step of the project is to log your productivity to Google Sheets for future analysis and self-optimization. This integration works via &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT.com&lt;/a&gt;, so you&amp;#39;ll want to start by heading there.&lt;/p&gt;

&lt;p&gt;Sign into your IFTTT account or sign up for a new one if you don&amp;#39;t already have an account.&lt;/p&gt;

&lt;div width=&quot;560&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/ifttt-login.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Click on &amp;quot;My Recipes&amp;quot; at the top of the page to start the creation of your Pomodoro logging recipe. Select the following parameters in each of the Recipe steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Select &amp;quot;Particle&amp;quot; from the integrations list&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Select &amp;quot;New event published&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Enter &amp;quot;Pomo&amp;quot; in the &lt;code&gt;If (Event Name)&lt;/code&gt; field, and select your device in the &lt;code&gt;Device Name or ID&lt;/code&gt; field.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Select &amp;quot;Google Drive&amp;quot; from the integrations list. You may have to connect your Google Drive account to IFTTT if you have not done so already.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Select &amp;quot;Add row to spreadsheet&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Feel free to leave all the default contents here--we deleted the &amp;quot;Device Name&amp;quot; field in the &lt;code&gt;Formatted row&lt;/code&gt; section since we only have one device running the firmware.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Create the recipe!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you did everything right, your configuration settings should look like this:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/config.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;That&amp;#39;s it! If everything is working correctly, a new Google Sheet will be created in your Drive that logs the start and stop times of your work and rest periods. After starting a new sequence, you should see a new Google Sheet in your Drive titled &lt;code&gt;Pomo&lt;/code&gt; that has entries that look something like this:&lt;/p&gt;

&lt;div width=&quot;560&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20166029-neopixels/logging.png&quot;&gt;&lt;/div&gt;

&lt;h3&gt;Enjoy! Best wishes from Particle for a productive week :-)&lt;/h3&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Awesome Projects Built with the Electron</title>
      <link>http://spark.github.io/staging-blog/2016/04/05/electron/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2016/04/05/electron</guid>
      <description>&lt;p&gt;Four weeks ago, we sent out an &lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-electron-cellular-dev-kit-with-a-simple-data&quot;&gt;update&lt;/a&gt; to the Kickstarter backers of the Particle Electron to let them know that we’d completed shipping nearly 10,000 Electrons to over 80 countries around the world.&lt;/p&gt;

&lt;p&gt;In the 27 days since then, we’ve been totally blown away by the number and quality of projects that have been created with the Electron, and wanted to take the opportunity to share some of our favorites with you all. For a full list of Electron projects, visit our &lt;a href=&quot;https://www.hackster.io/particle/products/electron&quot;&gt;project page&lt;/a&gt; at Hackster.io.&lt;/p&gt;

&lt;p&gt;Not familiar with the &lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;Electron&lt;/a&gt;? It’s our latest project-- a nifty IoT development kit with 2G/3G connectivity, SIM card, low-cost data plan, and some really great software for building cellular-connected products. It&amp;#39;s now available in our &lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;online store&lt;/a&gt;, and each Electron comes with 3 free months of our cellular data plan!&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;1. Track things with GPS + Cellular&lt;/h2&gt;

&lt;p&gt;If you’re a space cadet whose keys (or kids?) are constantly going missing, these projects are for you. One of the most exciting applications of cellular connectivity is location tracking with GSM + GPS, which allows you to know the precise location of your project within just a few feet at all times.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;Electron&lt;/a&gt; (along with the &lt;a href=&quot;https://store.particle.io/?utm_source=particleblog&amp;amp;utm_medium=assettracker&amp;amp;utm_campaign=megalaunch#asset-tracker-kit&quot;&gt;Asset Tracker&lt;/a&gt;) makes DIY asset tracking a breeze, and the following projects are a couple of the best GPS projects we’ve seen so far.&lt;/p&gt;

&lt;h4&gt;My Kids&amp;#39; Driving Habits&lt;/h4&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20160405-megalaunch/driving-habits.png&quot; width=&quot;750&quot;&gt;&lt;/div&gt;

&lt;p&gt;Intermediate Project - &lt;a href=&quot;https://www.hackster.io/mohit/my-kids-driving-habits-6f966a&quot;&gt;View it on Hackster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is it?&lt;/strong&gt;&lt;br&gt;
A couple of years ago, insurance companies started handing out connected sensors to their customers that evaluate your driving habits and award you with discounts for safe behavior. This project shows you how to build your own connected car sensor with location tracking as a cherry on top, combining a Particle Electron with GPS, an accelerometer, and distance sensor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do I need?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;Electron 2G or 3G Kit&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/?utm_source=particleblog&amp;amp;utm_medium=assettracker&amp;amp;utm_campaign=megalaunch#asset-tracker-kit&quot;&gt;Asset Tracker Kit&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Sharp IR distance sensor&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;DroneHome&lt;/h4&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20160405-megalaunch/drone-home.png&quot; width=&quot;750&quot;&gt;&lt;/div&gt;

&lt;p&gt;Intermediate Project - &lt;a href=&quot;https://www.hackster.io/reanimationxp/dronehome-a-triggerable-sos-beacon-gps-tracker-9bc772?ref=part&amp;amp;ref_id=19589&amp;amp;offset=12&quot;&gt;View it on Hackster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is it?&lt;/strong&gt;&lt;br&gt;
DroneHome is an Internet-connected life jacket for drones that have gone missing. It provides you with updated real time location of your drone, and the ability to remotely trigger a high-volume buzzer to help you locate your missing friend. In addition to location, it can also be customized to provide you with some neat information about your drone, including position, angle, altitude, power level, directional heading, and more!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do I need?&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;Electron 2G or 3G Kit&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/?utm_source=particleblog&amp;amp;utm_medium=assettracker&amp;amp;utm_campaign=megalaunch#asset-tracker-kit&quot;&gt;Asset Tracker Kit&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sparkfun.com/products/7950&quot;&gt;High volume buzzer&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Some other cool GPS + Cellular projects&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hackster.io/Richa1/kid-tracker-1b58c9?ref=part&amp;amp;ref_id=19589&amp;amp;offset=7&quot;&gt;A mobile, wearable Kid Tracker&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hackster.io/brianmoreau/cheap-and-simple-gps-tracking-b76d63?ref=part&amp;amp;ref_id=19589&amp;amp;offset=12&quot;&gt;Asset tracking for your valuables&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;2. Monitor remote sensors&lt;/h2&gt;

&lt;p&gt;One of the most common inspirations for connected devices is to bring sensor data online. Whether you’re monitoring the temperature of your meat smoker or the acidity of your fishtank, it’s extremely convenient to keep tabs on the things in your life without needing to stand right next to them. The Electron, because it’s cellular-connected, makes it possible to bring sensors online even if they’re miles away from home (and Wi-Fi). We’ve seen some really cool remote sensor projects in the last month--here are a couple of our favorites:&lt;/p&gt;

&lt;h4&gt;Remote Motion Detection&lt;/h4&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20160405-megalaunch/remote-sensor.png&quot; width=&quot;750&quot;&gt;&lt;/div&gt;

&lt;p&gt;Beginner Project - &lt;a href=&quot;https://www.hackster.io/mohit/remote-motion-detection-using-the-particle-electron-47d186?ref=part&amp;amp;ref_id=19589&amp;amp;offset=10&quot;&gt;View it on Hackster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is it?&lt;/strong&gt;&lt;br&gt;
A super simple circuit--this project will tell you when it detects motion using the connected PIR (motion sensor), an Electron, and Particle’s &lt;a href=&quot;https://ifttt.com/particle&quot;&gt;IFTTT integration&lt;/a&gt;. We love this project because it requires about 15 lines of code, and shows how easy it is to build useful things on the Particle platform. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do I need?&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;Electron 2G or 3G Kit&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.adafruit.com/products/189&quot;&gt;PIR sensor&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;High Current Alarm&lt;/h4&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20160405-megalaunch/current-alarm.png&quot; width=&quot;750&quot;&gt;&lt;/div&gt;

&lt;p&gt;Intermediate Project - &lt;a href=&quot;https://www.hackster.io/ControlEverything/high-current-alarm-f21a29?ref=part&amp;amp;ref_id=19589&amp;amp;offset=6&quot;&gt;View it on Hackster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is it?&lt;/strong&gt;&lt;br&gt;
This connected current sensor will keep track of how much electricity your AC device is using, and also let you know if it’s pulling too much current (i.e. it has a shorted circuit). This project is perfect for industrial or agricultural applications like dehumidifiers, remote lighting, and aquaponics equipment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do I need?&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;Electron 2G or 3G Kit&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.controleverything.com/content/Current?sku=PECMAC120A_DLCT03C20&quot;&gt;Current Monitoring Controller 1-Channel 20-Amp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Some other cool remote sensor projects&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hackster.io/mohit/plant-health-monitor-using-the-particle-electron-3c696a&quot;&gt;Plant health monitor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hackster.io/monkbroc/from-0-to-iot-in-15-minutes-3e2607?ref=part&amp;amp;ref_id=19589&amp;amp;offset=4&quot;&gt;ThingSpeak connected temperature sensor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;3. Interact with mobile objects&lt;/h2&gt;

&lt;p&gt;Remote sensors are fun, but things get even more interesting when you add remote control. We’ve seen a bunch of cool projects built with the Electron designed to allow people and things separated across huge distances to interact in the physical world. Here’s one of our favorites:&lt;/p&gt;

&lt;h4&gt;Buzz Wolf&lt;/h4&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20160405-megalaunch/buzz-wolf.png&quot; width=&quot;750&quot;&gt;&lt;/div&gt;

&lt;p&gt;Beginner Project - &lt;a href=&quot;https://www.hackster.io/nyl/buzz-wolf-837db0?ref=part&amp;amp;ref_id=19589&amp;amp;offset=0&quot;&gt;View it on Hackster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is it?&lt;/strong&gt;
A remote-activated set of gentle vibration buzzers that remind your dog to check in with you. In the words of the project creator, Nancy, “it’s kind of like having somebody tap you on the shoulders. It’s a painless way to get his attention when he’s off leash and out of earshot.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do I need?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://store.particle.io/collections/electron?utm_source=particle&amp;amp;utm_medium=blog&amp;amp;utm_campaign=megalaunch&quot;&gt;Electron 2G or 3G Kit&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.adafruit.com/products/1201&quot;&gt;Adafruit Vibrating Mini Motor Disc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dog Collar&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Some other cool remote control projects&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hackster.io/hypnopompia/lock-and-unlock-your-car-via-the-internet-2c3a00?ref=part&amp;amp;ref_id=19589&amp;amp;offset=7&quot;&gt;Lock and unlock your car over the web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hackster.io/krvarma/particle-electron-at-commands-4b1a5a?ref=part&amp;amp;ref_id=19589&amp;amp;offset=2&quot;&gt;Remote control over SMS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Cation: The Future of Cellular is Cats</title>
      <link>http://spark.github.io/staging-blog/2016/04/01/cation/</link>
      <pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2016/04/01/cation</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/cation-main.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Particle Cation: GPS + Solar + Cellular Internet&lt;/p&gt;

&lt;p&gt;When we first started talking about cellular, we knew asset tracking was a game changer. We were going to be able to keep track of all kinds of things we used to lose track of! Bikes, luggage, we even misplaced our container ship once!&lt;/p&gt;

&lt;p&gt;But our primary motivation in creating the Electron, Asset Tracker, and Solar Kit was to bring you&lt;/p&gt;

&lt;p&gt;THE PARTICLE CATION
&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/cation-flop.gif&quot;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The Cation makes it easier to keep track of everything in your life, especially your cat. Specifically designed for cats of all sizes, the Cation includes an Electron, Asset Tracker, Solar Shield, and Solar Panel harness.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/cation-diagram.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Cation piggybacks on the cat’s natural desire to nap in sunny patches to make it an excellent solar tracker and retain charge through all the cat’s adventures.&lt;/p&gt;

&lt;p&gt;Use your Cation for novel purposes such as:
&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/cation-uses.png&quot;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://store.particle.io#the-cation&quot; target=&quot;_blank&quot; style=&quot;background: #00adef; color: #fff; display: block; text-align: center; font-weight: 700; letter-spacing: 0.7px; border-radius: 4px; padding: 15px 0;&quot;&gt;GET YOUR CATION TODAY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: Your Cation may not work properly in the following environments: rain, laser pointers, under bed, on top of fridge, inside fridge, ponds, litterbox&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/161192246&quot; width=&quot;500&quot; height=&quot;281&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://vimeo.com/161192246&quot;&gt;The Particle Cation: Cellular IoT for Cats!&lt;/a&gt; from &lt;a href=&quot;https://vimeo.com/particle&quot;&gt;Particle&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Huge thanks to &lt;a href=&quot;http://www.buzzfeed.com/christinesunu&quot;&gt;Christine Sunu&lt;/a&gt; for the concept, graphics, and video production help!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Particle Interactions: Sprint 45 with William Hart</title>
      <link>http://spark.github.io/staging-blog/2015/10/12/particle-interactions-sprint-45/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/10/12/particle-interactions-sprint-45</guid>
      <description>&lt;p&gt;It was a nice chat with Will Hart, the leader of the Electron team at Particle. Will spoke with us last time about his experiences &lt;a href=&quot;/2015/08/17/particle-interactions-sprint-41/&quot;&gt;running supply chain from China&lt;/a&gt;, and he had some fun insights this time about the Electron, the new office, and some Particle powered Halloween hacks.&lt;/p&gt;

&lt;h3&gt;Give us an update on the Electron.&lt;/h3&gt;

&lt;p&gt;We are currently running an Electron beta. It&amp;#39;s been a good opportunity to work on the firmware. The beta is worldwide, which has been particularly satisfying.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEwwVidmlpv/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;It&amp;#39;s a very exciting time for the team.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEwUVuwaKHw/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;And overall, it&amp;#39;s going very well.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEwPqeUeIlw/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;What&amp;#39;s up with your hat, Will?&lt;/h3&gt;

&lt;p&gt;Will is wearing an M2M2U hat, which is a reference to the &lt;a href=&quot;https://youtu.be/-sP5hn6VDgE?t=1m13s&quot;&gt;Electron Kickstarter video&lt;/a&gt;.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEwPLedd02I/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;This was even an &lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-electron-cellular-dev-kit-with-a-simple-data/posts/1148483&quot;&gt;extremely stretchy stretch goal&lt;/a&gt;, but we didn&amp;#39;t make it there.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEwx50e9nBD/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;What has been challenging in Electron development?&lt;/h3&gt;

&lt;p&gt;Connected devices can be complicated, but cellular makes for a particularly full stack.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdeF9tJKHg/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Cellular connection behavior is one focus.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdeL9Mz9bM/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;We don&amp;#39;t have cellular towers-- we&amp;#39;re using the towers of a carrier. That means that we need to be aware of rate limiting in a way that wasn&amp;#39;t as much of a concern when carriers weren&amp;#39;t involved.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdihMUXYzr/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Of course, we don&amp;#39;t think people will spam the towers on purpose. But mistakes do happen during development. When people do this on Wi-Fi devices, we respond with rate limiting.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdiYHMxLE2/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;On the Core and the Photon, it even had a special name.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEd5bdXvQUH/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;But carriers might not respond that way to spamming-- they might just ban us. So we&amp;#39;re being very careful to develop safeguards for our users.&lt;/p&gt;

&lt;h3&gt;Tell us about the new office.&lt;/h3&gt;

&lt;p&gt;Particle just moved to an office in The Dogpatch. The office is shared with &lt;a href=&quot;https://www.pryntcases.com/&quot;&gt;Prynt&lt;/a&gt;.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEd50rABDEH/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;It&amp;#39;s got more room, and we have a fancy conference table.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEd5YhpTDun/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;What else is challenging in Electron production?&lt;/h3&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdJpQWM5FB/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Packaging is fun but surprisingly difficult.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdJY7Kq3ux/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;That&amp;#39;s partially because of some of the things that need to be included in the Electron bundle.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEd1uPX6PXW/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;However, it&amp;#39;s one of the most fun parts of the manufacturing process.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdnqFrhu9d/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Jokes are pretty great.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdnDw1p7xF/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;Will we be able to move Photon code directly to the Electron?&lt;/h3&gt;

&lt;p&gt;Yes! On the Photon, we created a Hardware Abstraction Layer (HAL) that makes the code you write less dependent on the hardware you use. This means that your Photon code should be able to run on the Electron with few changes.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdn9m0bjuT/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;Does Particle.function() now work in the IDE?&lt;/h3&gt;

&lt;p&gt;Both &lt;code&gt;Particle.&lt;/code&gt; and &lt;code&gt;Spark.&lt;/code&gt; are currently options for functions, publishes, subscribes, and variables in the IDE.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdvr6v6n7U/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;What kind of cool things will people make with the Electron?&lt;/h3&gt;

&lt;p&gt;The Electron allows for accessibility of data-- it&amp;#39;s now easy to get information, and there&amp;#39;s a lot of possibility there.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdv2lJDK7T/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;In some ways, the Electron is to connected devices as the GoPro is to cameras.&lt;/p&gt;

&lt;p&gt;Since it&amp;#39;s relatively cheap at $39 for 2G, you can throw it out of a plane, float it down a river, or see how high it will soar on a weather balloon, without fear of losing out on a large investment.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdrqeBv2wn/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Continuing the GoPro analogy, we&amp;#39;re generally trying to build tools that make a beginner feel like a pro.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdrE6Fxnvt/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;In the same way that you can put a camera on the front of your surfboard and feel like a pro, you can take the Photon or Electron out of the box, connect it, and feel like a pro product designer or hacker.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdgtLd1Fuj/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;That fast onboarding experience is particularly interesting for the Electron, which could actually skip the entire Wi-Fi credentials setup and get you started much faster.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdXBaatZin/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;Let&amp;#39;s talk Halloween.&lt;/h3&gt;

&lt;p&gt;According to Will, the number one use of Particle devices is Halloween hacks.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdXqwMnhmA/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;VP of Marketing Stephanie Rich once made a motion-detecting pumpkin.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdXDDKF7nJ/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Avidan Ross dressed up as the devil one year, and decked out his costume with Particle powered lights.&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdHUAFxqMU/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;The &lt;a href=&quot;http://particle-collider.slack.com&quot;&gt;Particle Collider&lt;/a&gt; may be the name of our slack group, but it was originally joked about as a name for a Particle powered dating app. What would that even look like?&lt;/h3&gt;

&lt;p&gt;Well, it&amp;#39;s all about swiping left or right these days. What if you could wear a glove or finger stylus that also took your heart rate?&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdwuD0Lp9u/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;What&amp;#39;s next for Will?&lt;/h3&gt;

&lt;p&gt;Back to China...&lt;/p&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdw13JFFgj/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3&gt;And that was the end!&lt;/h3&gt;

&lt;div&gt;
&lt;iframe src=&quot;https://vine.co/v/eEdwFJHlhuU/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Watch the whole interview &lt;a href=&quot;https://youtu.be/ZRseK8D88Iw&quot;&gt;here&lt;/a&gt; or send &lt;a href=&quot;&quot;&gt;the supercut&lt;/a&gt; to a friend.&lt;/strong&gt;&lt;/p&gt;

&lt;div&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ZRseK8D88Iw&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Particle Interactions: Sprint 44 with Zach Supalla (Transcript)</title>
      <link>http://spark.github.io/staging-blog/2015/09/28/particle-interactions-sprint-44/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/09/28/particle-interactions-sprint-44</guid>
      <description>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/l5GxYnzcUck&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Well, so we are here. It is Sprint 44 in the Particle sprint naming system. We are here back again as promised with CEO Zach Supalla, who we’re very happy to see here. Zach was absent for a little while, which was sad, because he was... Where were you? You were--&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I was in Africa.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  He was on safari.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I was on safari. So, it was sad maybe for you and I missed you guys dearly, but I had a really fun time. I didn&amp;#39;t hunt animals. I was taking pictures of them. So there was no Cecil the Lion here, but I took lots of good pictures of great animals like zebras, and lions, and giraffes, and cheetahs, and leopards and all those kinds of things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  That&amp;#39;s very exciting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  It was fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I bet. Did you go to Pride Rock?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Wait, really?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Well, I don&amp;#39;t think there is actually a Pride Rock, but you&amp;#39;re driving through the Serengeti and you see these rock formations and you&amp;#39;re like, &amp;quot;That looks just like Pride Rock.&amp;quot; Like some guy from Disney was sitting here and was looking over there and was like, &amp;quot;This is going to be the center of my story for the Lion King.&amp;quot; So, yeah, we did make lots of Lion King references while we were there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Does the Electron work in Africa?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  The Electron works. I tested it. We had not yet tested Electrons anywhere other then the US, I think. While I was there I got the code to connect it to the network and to the cloud and everything. I just ran the code in my thing and it just worked. It just worked in Nairobi, which it was like a shock... The fact that I actually just plugged it in and it just worked immediately; first try, no debugging or anything was kind of shocking. But, it was really cool. I got it working in Nairobi, although I couldn&amp;#39;t get my phone connected to the internet, so I wanted to flash D7 using Tinker and I couldn&amp;#39;t get my phone online to be able to do that, but the thing was definitely online. The other guy said that I reported that it was in Nairobi, so like that was working. It was really cool. Then when I flew back, I flew through Amsterdam and tested it in the Netherlands also. So, it works in Nairobi and Amsterdam. I think now it&amp;#39;s been tested in those two places and Norway, the US, the UK; London it&amp;#39;s been tested, and then there&amp;#39;s one or two more. So far, so good. Every country it works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. Cool. That&amp;#39;s awesome. So you were here talking with me the first time we did this two months ago.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yep.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Updates between two months ago and now?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Two months ago feels like a long time ago. I&amp;#39;m going to try and remember where we were. It&amp;#39;s mid-September now, so that was mid-July. Is that right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  That sounds... July, August, September, yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah. Okay. So, mid-July. We were probably shipping the Photon, but not everybody had it. I was probably right?&lt;/p&gt;

&lt;p&gt;At that point we had shipped a bunch of Photons, but not all of them. Now the Photons have shipped, super exciting. The Electron has come a really, really long way, so I think a lot of the uncertain, spooky bits of the Electron have been resolved. We&amp;#39;ve made a lot of progress on things like the carrier migration, the billing system, some of the biggest problems with the cellular platform. A lot of stuff has happened in firmware. From your notes, it looks like we were at version 0.4.3 of the firmware, we&amp;#39;re getting to 0.4.6 now. A lot of development has happened. A lot of bugs have been squashed. Some of the multithreading stuff is in beta now, which is really exciting. A lot of people have been waiting on multithreading, so that&amp;#39;s great. What else has happened? I don&amp;#39;t know. Those are some of the big things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. I think that sounds great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Oh, Device Management for teams came out, so now there&amp;#39;s tools which were in private beta, but now are available publicly for people who want to deploy a product and set a bunch of devices as products, and then control them in batch and do actions across an entire fleet of devices. That&amp;#39;s available now, which is really cool and unblocks a lot of product creators. We have more and more people who are going through the process of creating a product and are scaling off and asking a lot of questions. We&amp;#39;re changing bits of the product to support that, or the platform support those people and working out a lot of the kinks as real people actually start to interact with some of the software that we&amp;#39;re building. So all that&amp;#39;s super cool. Yeah. Some other things. I judged the &lt;a href=&quot;http://disruptsf2015.devpost.com/&quot;&gt;TechCrunch Disrupt Hackathon&lt;/a&gt; this weekend.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Oh, yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Which you participated in &lt;a href=&quot;https://twitter.com/PCHHackathon/status/645643873180454912&quot;&gt;as a mentor&lt;/a&gt;. Right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. That was pretty fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  There were a hundred and sixty-five companies that did one minute pitches for things that they built over a weekend. I think probably about fifteen of them were hardware, maybe twenty, something like that. So, I judged that. That was cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  There&amp;#39;s a really good picture of you judging; looking very judgey at the hackathon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Being very judgey, Super judgey&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/tc-judge-zach.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  TechCrunch Disrupt is [Tech Crunch’s] big conference and they do this hackathon. It’s twenty-four, forty-eight hours to hack on something, mostly it&amp;#39;s software apps, and you have one minute to pitch. What&amp;#39;s amazing is, of a hundred and sixty-five people who are pitching, probably half of them never actually got to demo the thing they were hacking because they would spend a minute talking about the value of the thing that they had built and why it was important; something about the market they were going after, and then they never actually got to show anything. The other half did actually show their products and there was some really cool things that were there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Did you see the Particle-Powered laser tag gun?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I didn&amp;#39;t see a Particle-Powered laser tag gun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Oh, so this awesome dude named Michael Valente made this really great Particle Powered laser tag thing. You seat your phone into part of the gun, like in the back, and then it counts down how much ammo you have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Oh, that&amp;#39;s cool&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  It&amp;#39;s really cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Did that not make it on stage or something?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I don&amp;#39;t know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I didn&amp;#39;t see that one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  He was really awesome. He was one of the people that we hung out with when we were mentoring. John and Corey and I talked to him. Also, you probably saw the &lt;a href=&quot;http://www.cambio.com/built-by-girls/&quot;&gt;Built By Girls&lt;/a&gt; group.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah. Built By Girls group. They had a bunch of them. I would say theirs were consistently some of the better demos, which was really cool. It was great to see there were a lot of women there. There were a lot of kids. There were a lot of people who were international. It&amp;#39;s a very diverse group of people who are hacking, which is great to see.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I almost died when I saw the &lt;a href=&quot;http://devpost.com/software/beanstalks&quot;&gt;Beanstocks&lt;/a&gt; kids come on stage. There are these two kids who looked like they were...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  They were adorable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; ... maybe eight. They looked like--&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I guessed ten, but I&amp;#39;m terrible at judging ages of children.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I was thinking between the ages of eight and eleven. They were talking about this chore and money management for kids thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Which was really cool because it was... Basically, they were saying that like, if you want to teach your kids money management, there&amp;#39;s a bunch of apps out there where you can give your kid a fake bank account with fake money in, and then they can manage their fake money. But they were like, &amp;quot;Why shouldn&amp;#39;t it be with real money where you actually have a bank account because you&amp;#39;re making an allowance and you can do chores and check off the chores and get real money deposited to your bank account from your parents bank account. Then you can manage that money.&amp;quot; Which is a fantastic idea. Of course, yes. Apparently there are no real money management apps for kids. I thought that was super cool and also pitched by two, let&amp;#39;s call them somewhere between eight and eleven years old, kids.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. They were great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  It was cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah, so that was Disrupt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Awesome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  So, Disrupt happened. Yeah, generally speaking, it was over the last couple of months a lot of what we&amp;#39;ve been doing has been cleaning things up with the Photon, and watching people who are now interacting with it and trying to resolve some of the issues they&amp;#39;re running in to. A lot of the bugs have been squashed. Then, pushing the Electron forward to get it ready for shipment pretty soon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Cool. You mentioned Device Management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Which is now released pretty much.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Now available. Yep.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Let&amp;#39;s talk about that a little bit. Device Management was originally intended to be for companies. It&amp;#39;s for people who are creating products and building companies around it. There are some features that people have been talking about just wanting as individuals. The lowest tier is like fifty dollars a month, which is steep if you are looking individual human. Do you want to talk a bit about that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah totally. I just read a post on this in the community a little bit earlier. I know there&amp;#39;s been some conversation in the community about, &amp;quot;Well, what is the pricing structure here? Why is it designed the way it is?&amp;quot; Typically if you look at some of the other companies in our space and the way that they charge for their services tends to be dollars per device per month. This is dollars per user per month, and that scales a little bit differently, and has pros and cons obviously. There&amp;#39;s been some interesting feedback in conversations about, &amp;quot;Well, what are the tiers, and how do you make sure that this is relevant for the individuals, makers, people who are building things on their own; as well as teams that are actually scaling your product. And also teams where you may have a large number of people managing a small number of devices, which throws the ratio off a little bit.&amp;quot; &lt;/p&gt;

&lt;p&gt;Generally, I want to talk about why we chose the pricing strategy that we did. I&amp;#39;ll preface this by saying, &amp;quot;Nothing&amp;#39;s set in stone.&amp;quot; I wouldn&amp;#39;t say this is final, or how we will charge for things forever. This is our first time that we&amp;#39;re taking a software product that is an advanced product and charging for that. It&amp;#39;s definitely an experiment which we&amp;#39;re eager to learn from. &lt;/p&gt;

&lt;p&gt;Imagine you are an entrepreneur who&amp;#39;s developed a product, maybe launched a Kickstarter campaign, or it could be a big company too, it doesn&amp;#39;t really matter. But, you&amp;#39;re an entrepreneur, you&amp;#39;ve launched your product, you&amp;#39;ve sold a thousand things on Kickstarter and even shipped them to your customers. Maybe you made a widget-- let&amp;#39;s say it costs you fifteen dollars to make and you&amp;#39;re selling it for fifty, as an example, which is a pretty common price ratio. What really means is that if you&amp;#39;re selling through a retailer, your cost might be fifteen, you&amp;#39;re going to sell to a retailer for twenty-five at a wholesale price, and they&amp;#39;re going to resale it for fifty on the shelves. This retailer could be Target or Best Buy or whomever. So you have ten dollars in margin. You make ten dollars of profit every time you sell one of these things. &lt;/p&gt;

&lt;p&gt;What we see is when you charge per device per month for services associated with the product, you run the risk of essentially consuming the margin that&amp;#39;s available, which is to say, let&amp;#39;s say it costs, to make the math simple, let&amp;#39;s say it costs a dollar a year to have the device hosted, and there&amp;#39;s ten dollars of margin, so if someone uses the product for ten years, then you&amp;#39;ve lost all of your profit. You&amp;#39;ve given all of your profit away to the person who&amp;#39;s providing that service. Then you are now net even; you&amp;#39;ve made no money, and any further use will lead to loss. This is, I think, I really big challenge when somebody looks at running their product on a platform like ours. You&amp;#39;re going to look at it and say, &amp;quot;Well, I&amp;#39;m taking on a liability, especially if it&amp;#39;s a new product or a new company, like a sort of question mark liability. I don&amp;#39;t know how long my customers are going to use this. I don&amp;#39;t know really how much I&amp;#39;m going to pay, but you know how much money you have and there&amp;#39;s a finite amount of profit that you have to give up. So, this is a big risk that we saw when we looked around.&lt;/p&gt;

&lt;p&gt;We really started the company a couple years ago, we saw this as a huge barrier for people who wanted to use platforms and, I think, one of the primary reasons that people weren&amp;#39;t using the platforms that were available. So, we thought we could do better on our pricing model. What was important to us is to say that the functionality of the product should not be tied to an ongoing revenue stream unless necessary. Basically, the way I feel about it is, I don&amp;#39;t want to charge customers to make their product function. You may have a fixed cost associated with getting it working, but if you have a subscription, then you create this unending liability for the company. That&amp;#39;s very risky. So, I didn&amp;#39;t want to tie any subscription fee to the functionality of the product. &lt;/p&gt;

&lt;p&gt;(When we do cellular with the Electron, it&amp;#39;s a little bit different because there is actually a cost associated with running the product with the carriers. So, it&amp;#39;s a little bit different when you&amp;#39;re connecting something to a cellular network, but for Wi-Fi, you&amp;#39;re already paying your ISP for internet, so that should already be covered.)&lt;/p&gt;

&lt;p&gt;What we decided was what we want to do is rather than charging according to the kind of usage of the product, we want to charge according to the value that we think our customers are generating. You connect a product to the internet, and because it&amp;#39;s connected to the internet, you can collect all this data off of it and things like that, that it makes your marketing part of your company better. Or, it makes your next product better, and there&amp;#39;s some amount of money that you&amp;#39;re willing to pay for that. We want to tie our costs to the value that you&amp;#39;re generating. &lt;/p&gt;

&lt;p&gt;What is the metric of value? In theory, you could go to every company individually and figure out, &amp;quot;Why are you using this? What value is it generating for you product?&amp;quot; Then, you could cut that up in to fractions, like take a fraction of it and that would be our service fee. That would be extremely complicated and really difficult to do it scale because every company derives value from this differently.&lt;/p&gt;

&lt;p&gt;We thought, &amp;quot;Well, if you&amp;#39;re generating a lot of value off of the platform, then you probably also have a lot of people who have access to the data. If it turns out that it&amp;#39;s really good for customer service, then you might have your customer service team have access to the data, so that when somebody calls in and says that their device isn&amp;#39;t working, the person on the phone can actually drill down and look at the device using our Dashboard and our platform tools. We thought, &amp;quot;Well, okay. The value is often tied to number of users, and so let&amp;#39;s charge for number of users and that will be a metric for value generated by that... value generated for the person on the other side.&amp;quot; &lt;/p&gt;

&lt;p&gt;The downside of that is, I think, that the model is very simple right now. It&amp;#39;s forty-nine dollars per user. It will get more complex over time and there will be more tiers and there will also be more features. There will be higher-end tiers and there may be lower-end tiers. But, the model going out is really simplistic, which it kind of has to be for us right now because our billing system is very simple. We literally can&amp;#39;t actually manage a lot of complexity in terms of what the tiers are, yet. We will and we&amp;#39;re building out a more complex billing system for the Electron and the SIM cards there. We&amp;#39;ll have more capabilities, but we needed to start out with something very simple. So, I think what I&amp;#39;ve heard is a very long winded way to address this.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve definitely heard the feedback of like, &amp;quot;Well, what this means is that these features are not available to people who are individuals because forty-nine dollars per person is a lot if you&amp;#39;re just someone who is building a thing for yourself or for a couple friends, or for your family; or whatever.&amp;quot; So, those tools aren&amp;#39;t available to you. There&amp;#39;s a couple things about that. I’d love to get-- if you have comments on this just post in the chat. There&amp;#39;s like a ninety second delay, so we won&amp;#39;t see what you&amp;#39;re saying for a little bit, but just start writing stuff and we&amp;#39;ll keep our eye on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah, and for people who aren&amp;#39;t directly here right now, feel free to post in the community thread on the interview and then we can answer that as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah. Exactly.&lt;/p&gt;

&lt;p&gt;I have a couple answers to that. One is, a lot of the features are free. We have a free tier. I think that part of what we might be hearing is some of the features that are in the paid tier are relevant. Like maybe some of the features that are in the paid tier should go in the free tier. Which features are available here versus which features are available here. Maybe it should be a little bit different. That&amp;#39;s one essential solution.&lt;/p&gt;

&lt;p&gt;Second is, I think maybe there should be a maker tier that has some features but not others, or only works for X number of devices where X is relatively small, so it&amp;#39;s not something that people who are really scaling are going to use. I think that&amp;#39;s also relevant. Those are definitely options we&amp;#39;ll consider. &lt;/p&gt;

&lt;p&gt;My perspective on the pricing is, I think it&amp;#39;s important that we keep things as is for a little bit just to gather more feedback. I want to have these conversations. I want to hear what people think about the pricing in particular, what features are relevant to them, and other ways. There were some good suggestions in the forums today about ways that we could create a lower tier for makers for some of these tools. I&amp;#39;d love to have those conversations. I&amp;#39;d love to gather feedback. I don&amp;#39;t want to make any changes right away because I think that we definitely we see pricing as somewhat of an experiment, especially to start out with. If we go out with a certain pricing scheme and then we immediately change it, it makes it really hard to learn lessons because it&amp;#39;s really confusing for everybody. I want to hear the feedback that all of you out there have. Please share with us in the community. We will absolutely be listening to it. We may not take immediate action because we do want to leave the pricing out there for a little while and gather that feedback. But, we are listening. We will engage in that conversation.&lt;/p&gt;

&lt;p&gt;I think that it is important for us to make sure there&amp;#39;s a deep underlying concern here, potentially, which is like, &amp;quot;We are evil now.&amp;quot; No. We&amp;#39;re going to support enterprises. People are worried that because we’re building enterprise tools, we&amp;#39;re leaving our maker roots behind. Which we&amp;#39;re not. I would even say the opposite, which is, we see that our business will always be this sort of interesting mix of enterprises and makers. I think, by the way, that the two groups are a lot more overlapping than most people do. There&amp;#39;s businesses and there&amp;#39;s makers, and a lot of the work that we get to do for the maker community is not necessarily positive ROI, but it&amp;#39;s there because it builds the community in general. The fact that we have paying enterprise customers, basically funds the development of the stuff that we do on the maker side. One thing is that they are intrinsically tied together, and I think it&amp;#39;s good. &lt;/p&gt;

&lt;p&gt;It’s natural, I think, where when we&amp;#39;re starting to charge for things and create enterprise tiers for people to feel left behind, but it&amp;#39;s not, it&amp;#39;s all still tied together. We are very much a company that supports makers. Makers are our bread and butter. We are makers. We continue to plan to support that. We will be adding capabilities to the enterprise side, and we&amp;#39;re also going to add capabilities to the free tiers, and continue to release free and open source tools that are just going to get better. They might be different features, but like both parties; both groups are going to continue to get new developments over time. This isn&amp;#39;t like the beginning of, &amp;quot;Oh, we only do enterprise stuff.&amp;quot; Absolutely not. We are still good guys and we plan on continuing to do that. This shouldn&amp;#39;t be perceived as, that there&amp;#39;s any sort of fundamental change in our business. This was always part of the plan. But the plan always involved continuing to build this amazing community of developers and engineers and makers, that make us who we are, and building a profit seeking, revenue driven business that&amp;#39;s about supporting enterprises that want to scale; that want to scale products on a platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. It sounds like there was a lot of thought that went in to creating this pricing structure and that it&amp;#39;s a first try. That we need to actually run this experiment for a little while, and then we will revise it and change it and try and make it as good as possible. Given that, I think it&amp;#39;s great to hear feedback from the community. If you guys have thoughts about this, I would love to hear about them. If you have thoughts about parts of the different tiers that you think would be really valuable to you, I think that that&amp;#39;s a really good idea to let me know; post on the community, send me a PM. We are very committed to making sure that you guys have all the tools you need, whether you are a maker and a DIYer, or a person building a small company, or a person at a large company; or all of these things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah. I see a comment from ScruffR, which I&amp;#39;ll address because it&amp;#39;s a good question. Is it possible to hop on and off of the Dashboard? If dev cycles go quiet, can you sign off, and later sign on again? Which basically I think means like &amp;quot;Well, I might not want to pay now, but I want to keep my eye on it and be able to see the features that are available because I might want to pay for it later and keep testing it.&amp;quot; Like if you have a thirty day free trial, do you use it up with the first thirty days, and then you never get access to it again? &lt;/p&gt;

&lt;p&gt;What I would say is: we are still people, and we are on the end of an email or phone or a community post. If you go sign on/sign off, or you open an account/close your account, then open an account again, what happens? Good question. I don&amp;#39;t know. I bet you the guys that are building it don&amp;#39;t know because nobody&amp;#39;s done it yet. I will raise that with them. But even regardless, if it says, &amp;quot;You know your free trial&amp;#39;s expired,&amp;quot; just email us because we don&amp;#39;t want to eliminate people... We&amp;#39;re people, just don&amp;#39;t abuse it. Hopefully, you get to the point where you start using it. You&amp;#39;re like, &amp;quot;Oh, this is valuable,&amp;quot; and you want to pay for it. Then we&amp;#39;d start charging your credit card. &lt;/p&gt;

&lt;p&gt;In general, what we&amp;#39;re going for is we want to charge people for services that they find are valuable. Our goal is that you should want to pay for this because you should feel like, &amp;quot;Oh my god, this is amazing and I need this and I definitely need this company to stick around, so I&amp;#39;m willing to pay them. In fact, I wish I could pay them more to make sure that they stay around to continue to provide me this service.&amp;quot; That&amp;#39;s what we&amp;#39;re going for. Hopefully we can get there if we&amp;#39;re not there already.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  That was very comprehensive. That&amp;#39;s more in depth than I thought you were going to go. Thank you for giving that incredibly in depth explanation and your logic behind that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Of course. I&amp;#39;m an open book.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  We did a poll on community recently that talked about features that people might want to see. There&amp;#39;s a lot of things that came up there. We can go through that a little bit, and I think in the meantime people should feel free to post questions/ask questions about software, or things that they might want to see that they don&amp;#39;t see already.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah. Let&amp;#39;s talk a little bit about what Particle should do next. If you have thoughts, if you&amp;#39;re listening live and you want to contribute some thoughts on what Particle should be doing next, start typing in your thoughts since there&amp;#39;s a lag and we&amp;#39;ll go to the community forum and start addressing some of that stuff there. I&amp;#39;ll preface this by saying, &amp;quot;I make no promises here.&amp;quot; We should have just a good old chat and I can talk about some of the things I think would be interesting for us to do. Right now we&amp;#39;re getting the Photon working and getting the Electron working, so our heads are very much there. But, pretty soon all that will be in place and we&amp;#39;ll be like, &amp;quot;Oh, what&amp;#39;s our next project going to be?&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  In the poll: 66 people have voted in to it. There are 22% who want to see more hardware. 45% want to see more software. 22% percent asked for more resources and 9% asked for a category called &amp;#39;something else&amp;#39;. I left this really open because I wanted people to be able to post a discussion below, because I think there&amp;#39;s a lot of different things that people might want. This is very hard to pin down a poll with just the answers pre-selected. It looks like a lot of people asked for software, which I think is legitimate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Let&amp;#39;s talk about some of the things people talked about. The first one here said, &amp;quot;An easier language to work with in C++. I don&amp;#39;t know what would be most appropriate, maybe Rust, Python or Swift.&amp;quot;&lt;/p&gt;

&lt;p&gt;I think this is a super interesting one. I have dreams about this. I will give you my two cents. By the way, if there are people in the community that want to contribute to this-- it&amp;#39;s one of these things that we haven&amp;#39;t quite got around to thinking about, but we will at some point. If you want to be one that starts to drive some of that, this is definitely something that could be pursed through community efforts.&lt;/p&gt;

&lt;p&gt;Basically, we&amp;#39;re starting to see a lot more of development in other programming languages on embedded systems. There&amp;#39;s some JavaScript stuff, there&amp;#39;s like Tessel and Espruino, there&amp;#39;s some Python. I can&amp;#39;t remember the name of the Python development board. There&amp;#39;s at least one Python development board. There&amp;#39;s other stuff happening. But, you always run in to this problem of high-level languages, you have to do some kind of interpreting or something. You take a pretty big performance hit on a lot of the stuff that you want to do on a microcontroller. You can&amp;#39;t really do anymore if you&amp;#39;re doing like JavaScript, for instance.  The Tessel V1 had this problem where if you just said like-- you blink an LED, and you say, &amp;quot;Blink every thousand milliseconds,&amp;quot; it was like plus or minus two hundred milliseconds. It&amp;#39;s so not accurate from a timing perspective just because of the way that you&amp;#39;re actually trying to get that software running on that system. &lt;/p&gt;

&lt;p&gt;I think that there are, however, more modern high-level languages that are still very efficient. In particular, Rust is really, really cool. I would encourage anyone who&amp;#39;s watching now or later to go read a little bit about Rust. Rust is a relatively new program in language being developed by Mozilla. It&amp;#39;s a systems language. It has a lot of the features and capabilities of C and C++, just to say. Zero overhead distractions and it&amp;#39;s type safe, and all these things. However, it&amp;#39;s kind of like those languages after watching Ruby and Python and all these modern languages be developed, it&amp;#39;s got some really cool features. It&amp;#39;s, I think, easier to use. They claim that it&amp;#39;s crash free; it&amp;#39;ll never crash. The compiler is great. Really great library management system called Cargo. The compiler also has really human readable; easy to understand compiler, so if you mess something up, it explains to you very well and very clearly what you messed up. The guide and the tutorial are incredible. It can run on an embedded system. It can run on bare metal. &lt;/p&gt;

&lt;p&gt;I think that Rust has the potential to supersede in the long term C and C++ in the embedded space, but it&amp;#39;s not there yet. It&amp;#39;s very new. I think there&amp;#39;s experiments to try and get it to run on microcontrollers, but they just haven’t gotten very far yet. I would love to see Rust on embedded devices. I would love to see us supporting a Rust-based development path for writing firmware for your device. That&amp;#39;s something maybe down the road, but if anyone in the community wants to take that on, I think it would be really cool and we&amp;#39;d love to support it. There are like Lua is another thing that you can do, and Lua is also pretty cool, but I think that Rust is pretty fancy. That&amp;#39;s my thoughts on that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  In general, I would love it if we saw more language wrappers on the community. I know that people have different preferences to code and different languages and I would really like for us to get more of those and publicize the ones that already exist just because it&amp;#39;s great to have those resources.&lt;/p&gt;

&lt;p&gt;Oh there&amp;#39;s a question on making secure requests from the Photon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I&amp;#39;ll try and address that question. So, making secure requests from the Photon. I think that&amp;#39;s a good request and I&amp;#39;ll address that quickly. There is something that you can do in the short term if you want to make a secure request from a Photon. Check out our webhooks feature because right now the support way of doing that is you can send message to our web service which will then fire webhook off to the API of your choice and you can design what that webhook should look like. It has the advantage of not putting a lot of burden on the microcontroller, which is resource constrained. &lt;/p&gt;

&lt;p&gt;Although, it&amp;#39;s not as necessary for the Photon. It was designed that way for the Core, which really had no RAM, so you couldn&amp;#39;t do HTTPS requests. With the Photon, one can. We will be adding support for doing that straight from the device. We don&amp;#39;t have that yet, but there is a way to solve the problem which is to do it through the cloud. I think also, to point out, if people are planning on doing development with the Electron, that kind of feature will be particularly relevant on the Electron. If you think about it you want to fire a secured, encrypted request off to some web service, if you do that from a cellular connected thing, you have to pay for the bandwidth associated with the encryption overhead, which can be like five kilobytes, which doesn&amp;#39;t sound like a lot, but if you&amp;#39;re paying for every megabyte, it can add up really fast. Whereas, if you use our protocol to the cloud, it might only be only 20/30/50 bytes to send that message up to the cloud, which is encrypted. Then the cloud can take that through with webhooks and convert it to something that&amp;#39;s a complete web request outside of the cellular network, so you&amp;#39;re not paying for that bandwidth. So, it&amp;#39;s cheaper; significantly cheaper with an Electron to use our cloud platform for secure requests to other web services then it is to fire them directly. So, something to keep in mind.&lt;/p&gt;

&lt;p&gt;Then we have another question. Where is the future with Azure going? From Richard. So, Richard asks, &amp;quot;What&amp;#39;s the future with Azure?&amp;quot;&lt;/p&gt;

&lt;p&gt;The future with Azure. We&amp;#39;ve been working a lot with Microsoft behind the scenes. So Azure, they&amp;#39;re developing some really cool stuff targeted with the Internet of Things. The thing that&amp;#39;s been most visible for Microsoft has been the Windows 10 IoT Core, so they now have a version of Windows that will run on a Raspberry Pi, for instance. It&amp;#39;s super cool. With Microsoft, I think right now we&amp;#39;ve got some tutorials to explain how to build a weather station that sends data to Azure through our cloud platform, kind of using our tools combined with theirs. What we want to do over time is make that integration a lot smoother. Right now it requires you to do coding in a bunch of different places. It&amp;#39;s not terrible, but it&amp;#39;s not exactly the smoothest process. That&amp;#39;s something that we want to change by making it really, really easy to go in to your Dashboard and activate an integration with Azure. Then, all of the events that you generate out of your devices will just be pumped directly to your Azure account. That&amp;#39;s something that we&amp;#39;re working on with Microsoft and I think will be really cool. &lt;/p&gt;

&lt;p&gt;I think it&amp;#39;s particularly relevant. A lot of people probably in our community work for companies that are Microsoft shops. A lot of people doing development in C# and .NET and very comfortable with all the tools that Microsoft provides. I think that these tools will be really great for anyone who&amp;#39;s doing development of a product within that environment. You want to work within the Microsoft set of tools you&amp;#39;re comfortable with, but also engage with these Internet of Things devices. Although, if you&amp;#39;re using a Raspberry Pi, you can use Windows Core, if you&amp;#39;re using an embedded system, there isn&amp;#39;t really a Microsoft way to interact with that device. This helps you integrate these kind of devices in to a Microsoft based ecosystem. Really, really cool, and they&amp;#39;ve been great to work with, also. We&amp;#39;re having a great time engaging with the Microsoft folks. I think they&amp;#39;re really smart. Their IoT team is doing really cool things. So, there&amp;#39;s Microsoft.&lt;/p&gt;

&lt;p&gt;All right. Should we go back to the community page?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah, we can go back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Let&amp;#39;s see what else is there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I feel bad that I&amp;#39;m making you talk so much.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  No, it&amp;#39;s good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Right after you were recovering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah, I was sick. I&amp;#39;m getting better now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  There was a request for more resources, particularly from cloud side. I know that that&amp;#39;s something that&amp;#39;s been echoed by other individuals in terms of resources. Making the experience better with the resources that we have. Making those resources more visible, easier to use and smoother. Ironing out bugs in the IDE. Fulfilling a backlog of feature requests. Things of this nature. ScruffR made a comment that he wanted some of these bugs get ironed out and that is probably the most liked post within this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I think it&amp;#39;s good feedback. I think we&amp;#39;re getting to a place where we&amp;#39;re now. [We’re starting to] have the resources to dedicate to smoothing out a lot of that stuff. There was a lot of stuff that was happening that was like, &amp;quot;Okay, we have to update a lot of these tools to work with the Photon. There&amp;#39;s some things that are different about the Photon, so there were hiccups along the way.&amp;quot; Now a lot of that stuff, the compatibility is there across the tool set. Now we have the opportunity to really smooth things out. That&amp;#39;s good feedback and definitely something that we&amp;#39;re going to be investing in a lot in the next couple sprints.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. I&amp;#39;m really looking forward to having a feature polish sprint. I think that we will do that at some point. It&amp;#39;s going to be really exciting to just bring all of the nice things that we have working at 85% to 95% percent all the way up to 100%. Very, very cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I see Rockvole posted and got a good amount of likes on it, too, mesh networking so we can communicate directly between Photons and used Photons to extend the Wi-Fi range by hopping data across devices. Meshing is definitely something, and I should say not purely meshing, but just like having a way to do device to device communications with a low-cost radio is definitely something that we think is super interesting. We will be looking at doing things like that.&lt;/p&gt;

&lt;p&gt;Some more posts, moving forward then. You asked, &amp;quot;Stuff is already being used by Bluz for one, are there plans to expand stuff to support Thread when it comes in to firmware?”&lt;/p&gt;

&lt;p&gt;Thread. I would say, I definitely want us to support open standards for doing device to device radio communications with a low cost radio-- low cost, low power radio, over a relatively long range. Which is a weird way to answer that question because it&amp;#39;s like, &amp;quot;Well, what does that mean about Thread?&amp;quot; Thread, I think, is super interesting. It hasn&amp;#39;t really hit mainstream yet, and so we don&amp;#39;t love to be the first people on protocol because we want to wait and see if it&amp;#39;s really going to take off. Thread is also a little bit funky because I think the design of Thread is really great and I think the people behind Thread are really great. Thread is also very much geared towards home and we have some customers who are doing consumer home stuff, and we have other customers who are doing more like industrial, outdoors things. The question is, &amp;quot;How do we support each of those customers and for whom is mesh most interesting?&amp;quot; The way I think about mesh, kind of radio kind of stuff, is I think that we will definitely do something there, whether it&amp;#39;s Thread, 6LoWPAN some other 802.15.4 thing, sub-GHz, LoRa, Weightless. Now I&amp;#39;m getting in to the really obscure protocols. I&amp;#39;ve been reading about this recently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Is this going to be a game of how many protocols you can name?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I can name so many protocols. Wait, seriously.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Wait, we&amp;#39;re really going to play this game?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yeah. Let&amp;#39;s play this game. Okay. Should we actually? This seems like a really stupid game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Let&amp;#39;s spend the time answering more questions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Okay. I won&amp;#39;t play that game. I think we&amp;#39;ll do something like that, whether it&amp;#39;s Thread or something else is still a little bit question mark. Also I think that in general, we can only do so many things ourselves. We can only support so many boards at the same time. We&amp;#39;re really excited about things like Bluz and Oak, which is from Digistump, that are what we call compounds, which are partners of ours that are developing other hardware platforms that work with our software platform because basically it gives us access to more hardware tools. It gives our community access to more hardware tools without us trying to build twelve things at once with a team that&amp;#39;s not really big enough to do that. I&amp;#39;m really excited about Bluz and I think as soon as it&amp;#39;s finished, we&amp;#39;re going to do our best to make sure that it&amp;#39;s a first class citizen within the community and that people who work with Bluz have the same experience as they would using any other board that has a Particle logo on it. If there are any of you out there that have thoughts about other tech that might be interesting in the context of Particle that you want to try and build out a Bluz kind of thing, do a Kickstarter campaign for a dev board, we&amp;#39;d be happy to support you. We love to see other hardware on the platform. That would be super cool.&lt;/p&gt;

&lt;p&gt;What else have people talked about? Multi Device Management on a smaller than enterprise scale. Dan, we talked about this a little bit earlier and I went on a very, very long monologue about what our plans are there. I would encourage you to-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  There will be a transcript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Later on, read the transcript, or check out the full video. Because we do have thoughts there. I won’t repeat myself, because it took a really long time to say all that stuff. 
    “Can we do more than one post set per second through webhooks with paid subscriptions?” That&amp;#39;s a good question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  We&amp;#39;ve actually talked about this with Elite a little bit. We&amp;#39;ve been thinking about maybe loosening up the general user restrictions for very trusted users. I think that this is like a no promises roll-out, because we have to see how this plays, but there are definitely some thoughts about making it possible for people who have higher contributor levels to be free of some of the restrictions that lower level users have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Really interesting. I think that&amp;#39;s really interesting. I&amp;#39;ll just share some thoughts on there real fast, which is I think the reason that we put rate limiting in place is because we have a lot of devices running and we&amp;#39;re offering this web platform for free, so we have to maintain our cost and manage it and make sure that the cost doesn&amp;#39;t get out of control. If we take off rate limiting it can very quickly become very expensive to run that service. That said, I do think that there&amp;#39;s some really interesting ways of potentially making it so that folks who have earned trust within the community can potentially get the ability to send more messages. &lt;/p&gt;

&lt;p&gt;I think in particular part of the reason why that is… Let&amp;#39;s say there wasn&amp;#39;t any rate limiting. What you&amp;#39;d see a lot of people doing is putting in a loop, like Spark.publish, and you&amp;#39;d waste an enormous amount of money on people who are writing not-great code and publishing thousands of messages a second because that&amp;#39;s as fast as the processor can go. That&amp;#39;s a waste of money. I think for people who&amp;#39;ve earned a little bit more trust in the community, if you&amp;#39;re trying to send more, you&amp;#39;re probably not doing it because you&amp;#39;re not writing efficient code, you&amp;#39;re doing it because you&amp;#39;re actually trying to send more information, which I think is a great reason for us to relax the limits there. I also think there&amp;#39;s opportunities for doing a paid service there where basically, if you&amp;#39;re like, &amp;quot;I need to send more than this and I&amp;#39;m happy to pay a little bit extra to be able to do that.&amp;quot; Or, people who are paying for the Fleet Management tools have some shift in that. I think those are super, super relevant and definitely really interesting. Those are some things I&amp;#39;ll take back and think a little about and discuss with the folks on the team. Those are great ideas.&lt;/p&gt;

&lt;p&gt;ScruffR says, &amp;quot;One of the things that&amp;#39;s been postponed was the unification of IDE behavior library import, flat file hierarchy.” Those are all things that are geared up for us to start working on. Wojtek, who does a lot of the development on the IDE, has been waylaid by a lot of changes to support the Photon, but is now getting free of those and is starting to put energy in to unifying the IDEs. Just to let you under the hood a little bit, the web IDE is-- The backend and front end of the web IDE are like this. The web IDE does not access our API. It has it&amp;#39;s own API, which is not really the way that we wanted to have it work. Long-term what we want to do is put all the functionality of a IDE in to our API, so then our web IDE is a much thinner client that interacts with API. That also means that… you can do development in other tools that can interact with API services. That makes this awesome. Then, also say that other people can load their IDEs or download plugins for other IDEs that can engage with the same tools. For instance, download all of your software in to the IDE. That&amp;#39;s definitely something we want to do. &lt;/p&gt;

&lt;p&gt;There will probably be a pretty decent period of time where you&amp;#39;re not going to see any changes because what Wojtek’s going to be doing is behind the scenes, like rebuilding everything to work with an API. That means nothing will change for a little while, and then once that&amp;#39;s done, then all of a sudden all of these features will exist in other places. One of the goals here is to be able to open source a web IDE, which is something that&amp;#39;s been closed source, not purposefully, but just because it&amp;#39;s design is not one that lends itself to be open sourced very well. That is one of the goals here. Another thing, by the way, if the community&amp;#39;s interested in engaging in this, there’s an opportunity to do that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  In general, if you see something that you feel like should be improved or you wish that it were better in one way or another way, or you have an enhancement that you wish existed, just get in touch with us. If you wanted to work on it, we&amp;#39;re very open to giving you the resources you need to help you make the platform better as well. Very into that.&lt;/p&gt;

&lt;p&gt;We are actually moving out of this office on Friday. Right? Is that moving day?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yes. Soon. We&amp;#39;re moving in to a new office, so you&amp;#39;ll see a new, not gray, maybe another different color wall in the background the next time we do this. Which will be... I don&amp;#39;t know what the color of the walls is there? Do you?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  The what?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  What color are the walls?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I have no idea. I did walk by the new office and it&amp;#39;s pretty. I think the walls are white. I&amp;#39;m not sure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  White&amp;#39;s good for walls.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  On Friday for the Particle Lunch Break probably everyone will be at home. We might push the Particle Lunch Break way earlier because I had some feedback that it&amp;#39;d be great for us to serve at various time zones to have them at different times, in the world of San Francisco Pacific time. So, having one at breakfast Pacific time might be good. We&amp;#39;ll see if we can do that. I&amp;#39;ll put it up on the community when we know what&amp;#39;s going on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Just comments on the other posts that have come in. Lucas asks, &amp;quot;Love to see examples of starter PCBs that support the P1P0 modules. For beginner PCBs design that is a major hurdle when transitioning to modules.&amp;quot;&lt;/p&gt;

&lt;p&gt;I think that is a spectacular idea. Actually, this is one that I would also encourage folks in the community to do. I love finding these opportunities where it&amp;#39;s like a business opportunity where somebody could make a couple bucks on the side… For instance, if you wanted to, on a breakout board, make it easy for people to get started with a P0 or a P1 and put it up on Tindie or something... you can go sell it on Tindie&amp;#39;s website, or we&amp;#39;d even sell it on ours. If you want to make some breakout boards, just PCB&amp;#39;s with no components on them where you can put a P1 or P0 on it, you want to sell it, just contact us or just do it and sell it and then we will tell a lot of people about it. We will email it to all of our many, many, many followers, and they will go buy it from you. You&amp;#39;ll make a bunch of money. Easy win for you, for those of you out there who might do that. I think you&amp;#39;re right, it&amp;#39;s making that leap from zero to designing a PCB&amp;#39;s can be tricky. Although there&amp;#39;s some great tutorials on SparkFun. I highly, highly recommend for getting started with EAGLE. That&amp;#39;s how I learned. They&amp;#39;re just awesome. There&amp;#39;s free versions of EAGLE that are available. EAGLE&amp;#39;s a Cad software. I also highly recommend &lt;a href=&quot;https://upverter.com/&quot;&gt;Upverter&lt;/a&gt;. It&amp;#39;s a great tool to use; web based circuit design. &lt;/p&gt;

&lt;p&gt;You also asked is, &amp;quot;Is hangouts to talk about hardware/software and IoT enablement for those wanting to produce a product?&amp;quot; Yes. We&amp;#39;re talking about everything. It&amp;#39;s great to have a discussion about all this stuff.&lt;/p&gt;

&lt;p&gt;Endre, you asked, &amp;quot;Is the source code open to look at the cloud stuff for someone who&amp;#39;s interested?&amp;quot; Yes. www.github.com/spark/spark-server. Spark-server is our open source web thingamajig, so check that out. You can download it. You can look at it and run it. It isn&amp;#39;t totally up to date with the Photon yet. It can do a lot of the controls of the Photon. It can&amp;#39;t do an over the air firmware for Photon, but it&amp;#39;s still there. We&amp;#39;ll catch it up for the Photon at some point soon.&lt;/p&gt;

&lt;p&gt;“Is ESD a safety concern when handling the Photon or the Core?” I think that&amp;#39;s a good question. I&amp;#39;ll make sure that Brett puts that information in the data sheets. However, I wouldn&amp;#39;t worry about it too much. I have never seen [that happen]. I&amp;#39;ve rubbed my feet all on the carpet and grabbed one and I haven&amp;#39;t seen any problems yet. So, there. I think they&amp;#39;re pretty resilient. But, always handle with care.&lt;/p&gt;

&lt;p&gt;William you say, you have a question about the SoftAP. Go ahead and ask the question about the SoftAP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah, after the lag passes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  After the lag passes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Probably that will be like sixty seconds from now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  But you are welcome to ask your question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I have a new joke.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Oh, yeah. Tell your joke.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Well, you&amp;#39;ve heard it, but they haven&amp;#39;t heard it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  That&amp;#39;s okay. I will pretend like I haven&amp;#39;t heard it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  What did the octogenarian pirate say?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I don&amp;#39;t know. What did he say?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Aye matey. (I’m eighty.) Get it? Because an octogenarian pirate is eighty.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I&amp;#39;m eighty. Aye Matey.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  The pirates say, &amp;quot;Aye matey.&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  That&amp;#39;s good. That&amp;#39;s good stuff.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I think it&amp;#39;s a pretty good joke.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  It&amp;#39;s not a Photon joke. I thought you might be a Photon joke.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  No, that one wouldn&amp;#39;t make sense to put in the Photon box. We need a good Electron joke for the Electron box. I don&amp;#39;t know if there&amp;#39;s going to be a nice slip of paper like there was for the Photon box version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I&amp;#39;m sure we&amp;#39;ll find it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  And, there&amp;#39;s a question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  There we go. “There was a thread awhile back about creating the SoftAP library to allow direct Wi-Fi connections between Photons. Is there any progress?”&lt;/p&gt;

&lt;p&gt;Yeah, so we&amp;#39;ve started to make some work on one particular aspect of it, which now is doing a HTTP version of the setup process. It&amp;#39;s still pretty focused on the setup process currently, but that&amp;#39;s the first step. We do want to do more development there and generally make it possible to do more on SoftAP mode. That is definitely something that&amp;#39;s happening. I would highly recommend pinging @mdma in the forms. That is Mat McGowan, he’s a firmware engineer. If there&amp;#39;s a thread that&amp;#39;s gone quiet, ping him about it and make sure it&amp;#39;s still on his radar. Definitely still in the plans; in the works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Can I show off my project? I want to show the people this thing that I&amp;#39;ve been working on. I think it&amp;#39;s going to be cool. I will at some point write up a project about this, but it&amp;#39;s so early I haven&amp;#39;t written anything up yet.&lt;/p&gt;

&lt;p&gt;What I wanted to do is I wanted to make a thing to help demonstrate some of the new capabilities of Device Management for teams, which lets you do over the air from our updates to an entire fleet of devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Is it a drone?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  No, it&amp;#39;s not a drone. No I haven&amp;#39;t made any progress on my drone lately. Thanks, Christine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  You&amp;#39;re welcome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  What I wanted to do was make something that could show off interaction between devices, and then also over the air firmware updates. I bought some stuff from Adafruit. Adafruit has this really cool, super cool thing called a trellis which is a board that looks like-- See this keypad with this elastomer keypad? You take this and you put it in a 3D printed box, which they have a thing called an instameter, or something like that, that&amp;#39;s kind of like a midi control board, so you can see how this kind of looks like if you imagined it in a box, it&amp;#39;s like a midi keypad, and there&amp;#39;s LEDs in each of these. &lt;/p&gt;

&lt;p&gt;I&amp;#39;m 3D printing a box, or Christine is 3D printing a box for me because I don&amp;#39;t know how to use the 3D printer. This is the first piece. The other pieces haven&amp;#39;t printed yet. Basically, there will be a blue box that this thing goes in, and of course, there will be a Photon in there. This will be battery powered, Photon powered wireless, looks like a midi controller. Each of these sixteen pads will be set to control one of sixteen internet buttons, so if you haven&amp;#39;t seen the internet buttons, this is what they look like in the package. Let me take it out of the package to show it off. So, you&amp;#39;ll be able to control them all.&lt;/p&gt;

&lt;p&gt;What will be cool is I&amp;#39;m going to set them up in different places, so I&amp;#39;ll have a couple of them in the office here, a couple in our Minneapolis office, a couple in my apartment, and I&amp;#39;m going to set up some Dropcams with some cameras pointed at each one of them. You&amp;#39;ll be able to, on an iPad screen, see all sixteen in a couple of different locations, and then you&amp;#39;ll be able to control them by hitting these little pads. Each one of them will turn one of them will turn one of them on and of, so you can just do all this instant control of all these things in various places. Then, I&amp;#39;ll be able to go in to the Fleet Management Dashboard and update the firmware on all sixteen of them because they&amp;#39;re all going to be set as a product, so I can change their firmware from green lights to red lights, or something. Then do it again. Now, I&amp;#39;m controlling them all running a new version of the firmware. &lt;/p&gt;

&lt;p&gt;This is a demo that I&amp;#39;m going to put together and film to show people how these over the air firmware update features work at scale, and how you can deploy firmware updates to a larger fleet of devices. That will be cool. That&amp;#39;s something I&amp;#39;m just starting to work on. Clearly, I haven&amp;#39;t gotten very far because all I have is this elastomer thing and one bit of printed bit and a circuit board. But, that means I&amp;#39;m like half done because the rest of it&amp;#39;s really easy anyway. Right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. Power of the product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I think the Dropcam is going to be the hardest thing to set up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah. That&amp;#39;s a lot of Dropcams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  That&amp;#39;s a lot of Dropcams. Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  That&amp;#39;s a very large number of Dropcams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  I&amp;#39;ve got to get my iPad charged and my iPad has run out of batteries, so I&amp;#39;m going to have to work on that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Other then that...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Cool&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  All right.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Well, Zach, thanks for coming in and chatting with us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Thank you for hosting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Hosting you here at the office in the conference room, five feet away from your desk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Yes. My desk is on the other side of that wall. So, I&amp;#39;m really am not very far from home right now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  All right. Cool&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  Anyway. Goodbye everyone. Love you all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Bye. See you later&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;  See you later. If you have any questions and want to follow up on anything that we talked about here, I am @zach on the community, so let me know! We&amp;#39;re out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Bye guys.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Particle Interactions: Sprint 43 with Zachary Crockett (Transcript)</title>
      <link>http://spark.github.io/staging-blog/2015/09/14/particle-interactions-sprint-43/</link>
      <pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/09/14/particle-interactions-sprint-43</guid>
      <description>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/JYjN51DJqXA&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yes. Hi, everybody.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Hello.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We’re back here with another Particle Interaction, this time with our wonderful CTO, Dr. Zachary Crockett.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Hello, everyone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We’re just going to ask some questions about, generally, how life is here at Particle, and we can start with just a sense of what your day-to-day is like as the CTO. What is a CTO?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Okay. Back in 2012 when Zach and I were starting the company, being a CTO meant that I wrote all the code. I wrote all the firmware and I wrote all the cloud code and that was how it was. These days, not so much. I do lots and lots of communication. Particle is a heavily engineering-driven company. Developers have a great deal of autonomy here that just requires us to do a lot of keeping each other on the same page.&lt;/p&gt;

&lt;p&gt;I spend my days in meetings, both meeting with external partners and clients, customers but also internal people so checking in with the developers here and seeing how people are doing against their goals for the Sprint, making sure everybody is staying on track, staying focused on providing good value to the users of the system. Let’s see. I don&amp;#39;t know. There are all kinds of things I could talk about but mostly it means I talk to a lot of people, keep everybody on the same track.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s a very important job.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; It is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; And you get a cool title.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I suppose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; The chief of things. As the Chief Technical Officer-- Chief Technology Officer-- Is it &amp;quot;Technical&amp;quot; or &amp;quot;Technology&amp;quot; in CTO?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I think I always write &amp;quot;Technical.&amp;quot; I’m not actually sure, whatever.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; As the Chief-- let’s call it Technical-- Officer, what do you think the next 6 months are looking like in terms of Particle technology?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Sure. Electron, Electron, Electron. There is so much to do there. We’re so excited. Everybody is diving in head first there. There are tons of things to build. Also the device management dashboard part of which goes with the Electron because people are going to have to have ways to turn on, activate and deactivate their SIM cards and manage their billing, manage their team, manage all those devices that are out in farm fields, or on trucks, or in warehouses. There’s a lot of things that we have to build. There are back end integrations with our career partners. There are billing integrations. There’s lots of stuff in the dashboard. There’s a ton of firmware work because connecting over cellular is very different than connecting with Wi-Fi. It’s all about the Electron.&lt;/p&gt;

&lt;p&gt;Generally, other things in the device management dashboard-- supporting product creators. Basically, adding more and more features to firmware and in the cloud and the dashboard and the documentation to make sure that those making products on the platform have everything they need. That when they have a question, the answer is right there. It’s very clear. Hopefully they don’t even have questions, just the flow is super smooth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That is great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Last time when Richard was here on Particle Interactions, we talked a little bit about the fleet management dashboard also known as device management, also just generally known as dashboard at times. I was wondering if you wanted to talk a little more about that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; We talked about it. Let’s see. Yeah. I mean, it’s where we’re focusing a lot right now. When we started, the first web property that mattered in terms of messing with your things was the &lt;a href=&quot;http://build.particle.io&quot;&gt;Build IDE&lt;/a&gt;. You can go there. You can write code. You can see compile errors. We handle the compiling for you because that’s complicated. You can see your list of devices and you can manage libraries, but as we started building up all the tools that product creators need those are... It didn’t seem to live in Build. It didn’t seem the right place.&lt;/p&gt;

&lt;p&gt;I mean, we wanted to build this place from scratch. If you have a long list of devices which gets ugly in Build. If you have customers and you need to see links between those devices and customers and you need to do some recording that way and the logs feature that’s in the dashboard, that’s really great. We decided to put that there. There might be some version of that that might belong in Build later. Richard was talking about this &lt;a href=&quot;/2015/08/31/particle-interactions-sprint-42/&quot;&gt;last time&lt;/a&gt;, that serial debugging that you might want to see while you’re in the process of coding.&lt;/p&gt;

&lt;p&gt;Of course coming down the line, we have lots of things for the Electron. You’re going to be managing all your SIM cards and your devices. There’s a new concept of ownership with the Electron. A customer can be attached to, not just the device. That’s also true like this customer owns this Electron and call functions on it and everything but also to the SIM card. Imagine if you gave someone the Electron but not the SIM card, or you gave them the SIM card but not the Electron.&lt;/p&gt;

&lt;p&gt;This is something we have to manage-- who pays for what usage. That’s some of the things that we have to build into the dashboard. The organization dashboard, the things for product creators, are really important. There is something that we talked about for a long time as being called the product creator workflow. There’s the product creator onboarding process-- when someone creates a product says like, “Yeah. Here’s my organization. I’m going to create a product.”&lt;/p&gt;

&lt;p&gt;We have a set of questions that we walk people through that part of which is we need to know the information so we can support the product correctly, make sure the cloud and everything behaves the way it should, make sure customers can do the things that they’re supposed to and not others. Make sure authentication between the servers of the product and our servers do everything they’re supposed to. Also that questionnaire has a serious educational component.&lt;/p&gt;

&lt;p&gt;There are lot of pieces of that when you go through it that, at least in the short-term, don’t make any specific difference in how the cloud or anything functions. But what they do to is tell product creators, “Oh, hey. You haven’t thought about authentication. Here are a few options. There are more but here are a few options of how you can do authentication. We’ll walk you through those. Here are things you might have to think about when you are manufacturing these devices. When are they going to get programmed on the line or you want to do it later when the user sets it up?”&lt;/p&gt;

&lt;p&gt;There are several other questions that largely have an educational component, and that’s really huge for making sure that the product creators have everything that they need. They have a smooth path from prototype all the way to production. Firmware management. That’s the other awesome thing in the dashboard. If you’re a product creator and haven’t signed up to use the organizational dashboard yet, there are some cool things in there.&lt;/p&gt;

&lt;p&gt;Managing firmware releases is pretty awesome-- being able to deploy them to all your devices at the click of a button. Also, the safeguards that we build in there to say you can’t, for instance, flash to all of your products in the field until you have proven to the cloud that it actually works on at least one device. It’s like it won’t let you do it. So yeah, there are some natural things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s good. Yeah. I mean, anything that you can do with that last point to prevent your devices or your customer’s devices from getting large amounts of faulty firmware, the better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yes. We want to prevent those things from happening even if it might have been an accident on the part of a product creator to the extent that we can save those users from that bad experience. We want to do that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Excellent. Let’s see what other questions do we have. I think thinking about firmware from a different perspective. We often use &amp;quot;firmware&amp;quot; very loosely: sometimes to speak about the user firmware that individuals flash to their devices, and other times to speak about the system firmware that comes on your Photon when you get it. I know that we have been working on updates to the system firmware. I was wondering if you wanted to talk a little bit about that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Sure. The Photon is so amazing. My team has created some things-- it’s just mind-blowing. One of the big feats was separating out on the Core-- We had just one big binary. The Core has this much flash, just like zzzzzddddhhht, write the whole thing. There’s your app, cool. No problem. Features like dynamic linking and dynamic loading of libraries are this low level C thing that people typically associate with operating systems like on our computers, on the Linux and Mac machines, on the Windows machines. We have libraries, we have .SLL, and .A, and .DLL files that are like they’re there ready to be used by some of the program. And that’s not a really common thing to have in firmware.&lt;/p&gt;

&lt;p&gt;We removed the external flash, going from the Core to the Photon as one of the things to make the board single-sided, so that people can surface mount it, and it’s better for putting in a real product. We got more internal flash, but we lost that external flash which is on the Core where we’re restoring all these external binaries of when you’re downloading OTA updates and when you have a factory reset. (We keep a backup just in case the OTA didn’t go well.)&lt;/p&gt;

&lt;p&gt;We had all those things in that external flash, on the Core. On the Photon, we lost all that space and the firmware team, mostly Mat (@mdma on the forums), did an astounding job earlier this year-- last year, time flies-- figuring out how to squeeze all functionality that we need into that internal flash. One of the ways that we managed to do that is, instead of having many copies of this huge binary including Broadcom’s WICED libraries (which are bigger than our firmware ever was), we just keep 1 copy of those things and then have multiple copies of very, very tiny user application and that let us keep all the basic functionality that we had on the Core in a much smaller flash space.&lt;/p&gt;

&lt;p&gt;What this meant is that those system firmware images, they are separate. They’re their own binaries and they live in a certain flash space. When you build your user app, it is linking against those libraries. It says when I want to call digitalwrite, your app doesn’t necessarily know-- That’s a bad example, not technically correct but I’ll just go with it. When you call digitalwrite, the definition of digitalwrite might not be in your firmware. It just says like, “Oh, okay. digitalwrite, I know how to get that. That’s over here in the system firmware.”&lt;/p&gt;

&lt;p&gt;You didn’t have to have all that code bundled into your user app. What that also means is that-- On the Core, every time we released an update, we’d put in the Build IDE. We would say like, “Hey, latest firmware is out.&amp;quot; We mark in the sidebar there saying here’s what you’re building with, and you do your flash, and you build with the latest. You build that one monolithic binary with the latest.&lt;/p&gt;

&lt;p&gt;When you flash a new user app on the Photon, there is a dependency chain between the user app depending on one of the system modules which depends on another system module. If you build a user app that needs a newer version of a system module, you can choose this in the devices drawer of the WebIDE. Then if you need a new version then we send you all 3 of those separate binaries and it will send you one of the binaries. It can be really big. It’ll take a long time to OTA, but then it’ll reboot and it’ll say, “Okay, now I’ve got the latest system part 1.” Same thing will happen again in system part 2, and then finally it’ll send your user app and everything will work as expected and you’ll have the latest system code, which is all the things that people at Particle are writing day to day.&lt;/p&gt;

&lt;p&gt;That might mean that those flashes where you actually have to update those are longer than you expect. That’s a thing where we have to manage the expectations of people. Normally, you get this 1 second, 3 second, flash for user apps. But when you do have to update the system firmware, it’s much bigger than it was on the Core and it takes a long time. People may have seen &lt;a href=&quot;https://docs.particle.io/guide/getting-started/modes/photon/#safe-mode&quot;&gt;Safe Mode&lt;/a&gt;-- you see a Photon, that boots up and gets on and seems like it’s on the cloud but it’s breathing magenta (breathing pink). If you don’t know what that means, that’s Safe Mode.&lt;/p&gt;

&lt;p&gt;That means, it is connected to the cloud but your user app is not running because that dependency chain is not met. Your user app needs a newer version of the system modules than is there. One of the problems that we’re working on this Sprint, we have a couple of developers working really hard to get people automatically out of that state. If you understand it, if you know, you can always just manually do &lt;code&gt;particle update&lt;/code&gt; using the CLI to get the latest system modules, or you can even over the air update those system modules and you will then get out of Safe Mode, but for some people that is complicated. It’s confusing. It takes a long time. They may even reset in the middle because it seems to be taking too long. We’re going to automatically fix that as fast as we can, as soon as we can, hopefully at the end of the spring.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Awesome. That was a very technically heavy question so I’m going to ask a technically lighter question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Excellent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Which is: for people out there who are starting to learn Electronics who just picked up-- like their friend got them a Core of Photon, and this is really the first time that they’re messing around. What kind of advice do you have for them?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Let me see. When we ask me questions, I answer with all the deep technical jargon and stuff. I think some people in the community, they hunger for that. They want some of that information. The thing is, you don’t need to know any of that to get started with electronics. On Particle, it’s so easy. Last time, Dick said “Get a button, get a Photon, get a button.” I totally agree. The &lt;a href=&quot;https://docs.particle.io/guide/getting-started/button&quot;&gt;Internet Button&lt;/a&gt; has buttons, it has LEDs, it has an accelerometer, and it has a buzzer. It’s like lights and sound and I can pick it up and move it around and I can push buttons.&lt;/p&gt;

&lt;p&gt;There’s so many projects that people do. They’re just getting started, and they have an idea and they want to build it. So many projects can be built with the button. It’s so great. Dick did such an amazing job designing that. The libraries for it are super easy to use. Your code can be so short. You open up a web page-- &lt;a href=&quot;http://build.particle.io&quot;&gt;build.particle.io&lt;/a&gt;-- and you [go to Libraries and] click &lt;a href=&quot;https://build.particle.io/libs/55e0a4256b6e3275580009ce/tab/1_Blink_An_LED.cpp&quot;&gt;InternetButton&lt;/a&gt; and you say, “Yeah. Use this example and you flash it and even looking at the example if you don’t know much about it. It’s just like 15 lines of code. It’s very, very short. I love those comments explaining what’s going on.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/button-library.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; It’s just so easy and it’s wireless and it’s magic. You can start to really learn just seeing what value is on the pins, watch it change when I touch my Photon pins and just watch the analog read input. It’s so satisfying to be able to just hit some buttons, watch the lights turn on. And I think people can learn a lot really fast.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I remember the first time I was doing electronics was actually here at Particle and I wanted to do it for a really long time and it was my first day of work and Zach Supalla said--&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Is this before we had robot onboarding process?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Right. Now, everybody has built a robot. This was before then. It was my first day work. I was hanging out in the way, way old offices out on Potrero Hill. It was like the end of the day and you were doing some very technical stuff and I said, “Can I have a Core?” You pulled it out of your bag and unclaimed it and you handed it to me, and I just spent several hours playing with the Core and nothing but a wire.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Exactly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It was brilliant. It was so much fun. I’m intensely jealous of individuals who now get to play with a button, because I think that that’s probably a much more fun experience not that that was fantastically fun. I thought it was very, very magical, but different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I really like the accelerometer that moves with the button where it can just be like, “It’s like the light has gravity. It has weight. It’s just like it&amp;#39;s falling to the bottom.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s one fun. I really enjoyed hooking the accelerometer up to the buzzer. The new ones have a buzzer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I actually hadn’t played with one of those.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It makes a lot of noise so you turn it around. It’s like [makes button noises]. Then if you flick it, it screams, almost as though in protest, which is really funny to me. Speaking of those kind of getting started and doing these different projects, what are some of the Particle past projects that you’ve made, that you’ve really liked?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; See, this is a little bit of a tragedy. I haven’t made very many Particle-powered projects. I’m so busy building the platform and helping the team build the platform that I haven’t built much myself. Womp womp.&lt;/p&gt;

&lt;p&gt;I did over this past holiday break back in December. I set for myself a project to essentially stream audio. I was going to make an app on my computer that I could just load up an audio file, whatever, song, and hit play and it would stream it over just over UDP on the local Wi-Fi to my Photon plugged in to my stereo system and make my own little like do-it-yourself Sonos. I was actually doing it with the Core at that time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, that makes sense.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I bought this digital audio converter deck chip that was so tiny. I did my best. I came in here, used the soldering iron, and did my best to debug this tiny, tiny chip. I couldn’t do it. I couldn’t make it happen and so eventually I gave up on it. I wasn’t able to actually make it happen because I had bought a deck that was not suitable for breadboarding and soldering. That was my one attempt that didn’t happen memorably. I mean, we’ve done internal hackathons and things and I always help with those but as far as my own personal... I got nothing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We’re doing an internal hackathon next week, right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; We area, yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. That should be really exciting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yes. Lots of people. We have this onboarding process now at Particle where everybody who joins, it doesn’t matter if they are working on logistics and distribution and marketing or if they’re working on back-end code and infrastructure or if they’re actually making circuit designs. It doesn’t matter. Everybody has to make a robot. This is now part of the onboarding process at Particle. Actually, one of the Particle-powered companies out there, one of the companies building on our platform, has stolen this onboarding process. They make their employees build something with a Photon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Really?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I didn’t know that. That’s delightful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Now, everybody has to do this. However, there’s always just too much to do and sometimes people get through most of their onboarding and they start their robot but they don’t finish it. So next week in particular, we’re having a lot of the team in town. We do regularly coming from all over the US and coming to San Francisco. And lots of people are going to finish their robots, and the rest of the team also will build whatever comes to mind.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That is going to be really fun. I feel like I’m going to have to think of something since my robot experience was the thing with the wire when I first started and I’ve built other stuff since then. I feel like I should really participate in this heavily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; And now the Photon has to genuine analog outputs to DACs. Now, I can make my project with just a Photon and the jack to plug in to the stereo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You should have a contest to see whether you can finish that before Zach finishes &lt;a href=&quot;https://github.com/zsup/charm&quot;&gt;his drone&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Exactly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. It is slightly early for this but I could probably just start... I usually just start taking questions at 4:30. I probably can actually pull some of it now because it looks like some people are writing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Oh, nice. Like Dick, I tend to give concise answers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see. &amp;quot;Any ideas for using Photons with my bike?&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Okay. Obviously, it’s going to be battery-powered. I’m going to stumble over some power bricks. Let’s see. On a bike, battery-powered. It’s going to be moving around. Not a reliable Wi-Fi connection around, so the kind of thing you would want to do is something so that when it joins your network at home like when you park it at home or at the office or both, that it does something there. If you have a plug near where you park it at home and where you park it at work, then that it could be a security system of sorts, like if my Photon is online, the bike is placed. I suppose they could just take it off. That doesn’t make any sense. If a person wants to steal a bike, they take the Photon off. Take the bike.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; At least you can hide it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yeah, hide it. Attach it really, really strongly. Let’s see. You could do the &lt;a href=&quot;https://www.hackster.io/neo-phreak-3/warkitteh&quot;&gt;WarKitteh&lt;/a&gt; thing. Just &lt;a href=&quot;https://en.wikipedia.org/wiki/Wardriving&quot;&gt;wardriving&lt;/a&gt; while you’re driving around town. Gather the list of the open Wi-Fi networks and know them. Know where they are along your route, your commute or your typical leisure ride.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You can make a map of the open Wi-Fi networks of San Francisco quite easily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yes. Excellent idea. Then there are lights. There’s so many light projects. I have a pair of Revolights that somebody gave me that are sitting my hall at home. I haven’t put them on my bike. Perhaps why you asked this question-- I bike everywhere in San Francisco. Biking is my favorite way to get around. In fact we were way on the other side of San Francisco for a conference several months ago and Zach and Steph and maybe some other people jumped in the Uber, and I hopped on my bike. I got here way before they did. All the way across San Francisco. It was maybe four or five miles, something like this, and I got here in maybe 20 minutes and they got here in 30 plus. Biking is definitely the best way to get around many cities including San Francisco.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Just the hills in San Francisco that you have to avoid primarily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yeah. Either avoid or be mentally and physically prepared for.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s true. You could just be really in shape or really know how to use your gears. Let’s see. Another question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Not that I have the gears.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; &amp;quot;Is the Photon a microcontroller or is it a dev kit?&amp;quot;&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; It is a dev kit. The Photon contains a microcontroller. The microcontroller is from STMicroelectronics, STM32F205. It’s just an ARM Cortex-M3. So it contains a microcontroller. That is where all of the code runs. It has the memory. It has the flash-- when you are using DFU utility to flash code to your Photon, that’s getting written to flash that’s inside that little microcontroller. But it’s a dev kit because it’s a circuit board that has that microcontroller and other things on it. You could buy all those parts yourself, and the hardware designs are open-source, and you can make it yourself. But it’s way easier to just buy it from us. We’ve got the manufacturing supply chain set up for it so it’s definitely cheaper to buy from us than to make it yourself. Sometimes it’s a good learning experience but yeah. Definitely a dev kit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I feel that way, yeah. Let’s see. Another question: &amp;quot;How much of the Photon is open-source and open-hardware?&amp;quot; Keeping in mind that no modern computer is ever fully open.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Sure. ST doesn’t provide their silicon designs as far as I know. It does function to a certain spec obviously, ARM licenses these designs but I wouldn’t know where to go find the silicon design for that. How much of it? Power, PCB design (like Eagle files). The list of all the components that go on there such that you could buy them yourself and build a Photon yourself. To what extent is a capacitor open-source? That’s getting pretty esoteric. I don&amp;#39;t know. We know how those work. If you want to make your own capacitor, I’m sure there are probably ways on the internet, some YouTube videos to build your own capacitor out of X and Y.&lt;/p&gt;

&lt;p&gt;Really the important components that the person asking the question actually cares about are the microcontroller-- which we don’t have the internal designs for-- and the Wi-Fi module from Broadcom-- similarly don’t have the internal designs for as far as open-source. Everything we’re doing there is totally open, but the people we’re buying components from, companies, theirs are not open-source.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.crowdsupply.com/sutajio-kosagi/novena&quot;&gt;Novena&lt;/a&gt; is a laptop project that was on Crowd Supply for by Bunnie Huang and I forget his collaborator’s name, but they were trying to make a completely, as far as they could, open-source laptop. I backed that project for a t-shirt. The laptop itself was a bit expensive but I admire Bunnie a lot, and that project is pushing the boundaries and others are doing similar things now. As far as software, all the firmware that is on the Photon-- again that &lt;em&gt;we&lt;/em&gt; write-- is open-source, and especially our encryption library is open-source. When we built the Core, that was very important to us. It’s called TropicSLL. It’s an earlier fork of what is now called PolarSLLs. PolarSSL is descendant of this and it&amp;#39;s closed source. TropicSLL is a fork I think has a BSD lessons. There are firmware components that are typically very hard to find open-source, that we cared a lot about that and pushed to make sure that we had an open-source encryption stack.&lt;/p&gt;

&lt;p&gt;Now inside WICED, Broadcom, I want to say, thanks to us-- I’m sure they were already planning it and others were pushing for it too-- but certainly in response to a lot of prodding, they released WICED, the parts that they can, the parts that they write under an open-source license, they&amp;#39;re on the Broadcom open license so something their lawyers could check off on. That’s great. Also then, that’s what allowed us to include the WICED files in our firmware repo so that everybody can see how some of that stuff works. There are things of course that Broadcom then uses other libraries that they use that they don’t have the right to open-source. Those things are still in there as a proprietary just a binary blob.&lt;/p&gt;

&lt;p&gt;The final to your question, it’s about as open-source as you can get with something like this, because we cared deeply about supporting the open-source community and doing these things out in the open, especially when it comes to security which is something that everyone in the internet of things should be concerned about and not too many are. I read an article the other day about internet-connected baby monitors are basically just all completely open to easy hacking. FYI. Fear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Fear. It’s definitely terrifying.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see. Alex was asking follow-ups on the bike question, which is: &amp;quot;What is the easiest way to hook lights up to the Photon?&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Lights. The easiest way is to get  the internet button but let’s see. Pixel strips, you can buy those off of &lt;a href=&quot;https://www.adafruit.com/products/1376&quot;&gt;Adafruit&lt;/a&gt; and &lt;a href=&quot;https://www.sparkfun.com/products/12021&quot;&gt;Sparkfun&lt;/a&gt;, and those are super easy. That’s basically what is on the button, that you can buy strips of them and you drive them off in I2C bus so yeah, that’s the easy way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Garret asks, “How did you get started with Particle and/or how did you meet Zach and/or what did you do before Particle?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; All of the above, okay. Before Particle, I was a freelance developer for 10-ish years, 10+. And that was web stuff and desktop stuff and mobile stuff, all over the map. I was helping individual people and artists and nonprofits and big companies and small companies to make their lives better with code. I was often the kind of person who’d be called in when a project was going down the tubes and I&amp;#39;d like, swoop in, get everybody on the same page, and deliver something that fit within their monetary and temporal constraints, and get them what they need and help people understand and have the right expectations of what could be built within their constraints.&lt;/p&gt;

&lt;p&gt;I think that’s something that a lot of freelance developers don’t do that well-- is just set the expectations well upfront. And &lt;a href=&quot;https://en.wikipedia.org/wiki/Agile_software_development&quot;&gt;agile processes&lt;/a&gt; obviously help with that if you know about those things. Let’s see. That’s what I was doing before Particle. I was also going to school. I gone to a lot of school like Christine. In 2012, fast forward to about the time we&amp;#39;re starting Particle. I am contracting to being a contract developer for some startups in a coworking space in Minneapolis called CoCo. That’s great. We still have people. The Minneapolis team still works out of CoCo.&lt;/p&gt;

&lt;p&gt;I’m contracting with some startups there and finishing my PhD. I get my PhD in music composition, in February of that year. Little after that, Zach moves to Minneapolis and starts working that coworking space. It’s a big room, lots of people working. Everybody has got their headphones on, heads-down. But CoCo great to encourage everyone to get up, off their butts, meet each other. They had a thing called &amp;quot;Beer and Chat,&amp;quot; which essentially was just once a week, make everybody get out of their seats and talk to all the people around them. There were lots of good events like that.&lt;/p&gt;

&lt;p&gt;Zach and I met at a Beer and Chat. Just sit down. They’re just mingling. And be like, “Hey. I’m Zach.” “Oh, so am I. Okay. Yeah, nice. Cute.” He was at a stage with his idea that was becoming the Socket, the &lt;a href=&quot;http://www.wired.com/2012/11/spark-devices-connects-your-regular-old-light-bulbs-to-the-internet/&quot;&gt;Spark Socket&lt;/a&gt; if anybody knows the ancient history. And he was at a stage where he was looking for a co-founder, and we did hit it off pretty well. We get along really well. We have really complimentary skills and mindsets.&lt;/p&gt;

&lt;p&gt;We just worked together really well. We did some small projects together, brainstorming, whiteboarding some things, building some proof of concept stuff and we decided to make it official and yeah, signed some paperwork and dove headlong into trying to make the Spark Socket a reality. It was in summer and fall 2012. Did that answer all of the questions?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I think so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Was that Garrett?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Pretty much. Yeah. That looks like most of that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Sweet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; The next question down the list actually is something that I think is important to answer which is first, a really sweet compliment from BulldogLowell which is, “Thanks for a great platform. You should be proud.&amp;quot; Hey, &lt;em&gt;you&lt;/em&gt; should be proud of being such an awesome person on the community because I see you there all the time. &amp;quot;Do you see commercial customers in the fleet development overshadowing the old maker community as the company moves forward?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Sure. Absolutely not. It’s a totally legit question. I understand where people are coming from on that.&lt;/p&gt;

&lt;p&gt;Everybody wants us to be as successful. Everybody in terms of Particle and everybody in the community and the businesses that are building fleets of products on Particle. It’s in everyone’s best interest if we’re successful and everybody understands that means we have to make money, right? We have worked very, very hard. Zach and I have had long discussions about this to stay true to our open-source routes and continue to push the boundaries of what can be open-source and commercial, because people often think of these as two separate things and they’re not. They’re absolutely not.&lt;/p&gt;

&lt;p&gt;We just have to make the licenses friendly for those who want to make closed products while keeping the development of our platform as open sourced as possible and we need to provide enough value. We need to make the product good enough, better and better every day, and everybody at Particle is always just striving so hard to make the product better, better, better and better. Everybody wants it so bad that it’s wonderful. I work with an amazing team of people. We have to provide enough value that people are willing to pay for what we do.&lt;/p&gt;

&lt;p&gt;Obviously the maker community, anybody who’s building one or two things or like, outfitting their house with something-- they’re going to buy less from us and spend less money than some big company that comes along and says, “Hey, we have an idea for connected thing. We really want to build this out. We need your help.” We are hiring more people who are on the sales and customer success side of things to help those companies. I don’t mean more hiring right now. I mean, the plan for hiring, I should say, is to keep building out all parts of the business so that we continue supporting everybody who is making things for themselves-- DIY projects and things for their family and their friends-- as well as put the company on a really solid footing on the future by making a lot of those same tools really outstanding for the companies, big and small, who are deploying products on Particle.&lt;/p&gt;

&lt;p&gt;I don’t see it overshadowing. We’re growing as we grow. We are going to grow in both directions. There are different resources that sometimes require you to support one set of users versus another, but we are constantly aiming to just make the support of all of our community-- both the individual makers and the companies big and small. Just make the experience better and better, and support them as best as we can. So definitely not overshadowing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; The next question: &amp;quot;Is there any news regarding WICED TLS/SLL support or WolfSLL from FreeRTOS?&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Not in my head right at this particular second. That’s a good one for the community and you could ping me, @zachary and you could ping @mdma. Mat has probably the closest contact, with our friends over at Broadcom, and the whole firmware team works to figure out what’s the right approach. We always want to make sure we have an open-source encryption option, and obviously part of anything that’s part of FreeRTOS would also be open-source. I don&amp;#39;t know about the WICED TLS support. I would presume that there would be closed parts but maybe not. I’m not sure. No news on it. For the Electron, we’re getting close to just using existing libraries for DTLS support, TLS support over UDP. It’ll be closer to standard TLS spec. Yeah, I’ll stop. That’s a great question. There’s a lot of good discussion to be had there but I don’t have any amazing info to drop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Do we know when WifiScan() is going to be released? Because that library was so fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I don&amp;#39;t know. Although I do have the firmware releases page open. We’re planning to release 0.4.5 for the Photon as well as for the Core, although it won’t be selected by default for the Core. Today, maybe tomorrow, sometime this week. I see a prerelease boot loader update up on the releases page now. Oh, that was from 7 days ago though. Yeah, that release has not been fully filled out yet so I’d have to go look at the changed log but I know we’re leasing this week that has a whole bunch of changes in it, a whole bunch of small changes. This was about WifiScan. I don’t actually know whether WifiScan is in that or not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I know it’s definitely been talked about. I’m not sure if it was implemented.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Exactly. I am mentioning because there’s a chance it’s in there but I don&amp;#39;t know for certain. We often get some flex here and there for pushing really hard on feature development at the expense of stability and bug fixes, and I’d say there is some truth to that. I would say when bug fixes are important enough, we do prioritize them over feature development. But in general we try to focus on providing the most value to the most people.&lt;/p&gt;

&lt;p&gt;I mean, a lot of times it’s feature development and sometimes it’s bug fixes. This firmware update that we’re releasing this week, I think has 50 plus bugs fixed in it, just tons and tons of small things. There’s a little response to that perfectly valid criticism that we hear every once in a while.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. A question that came up was can the Photon be used with Wi-Fi Direct?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Wi-Fi Direct. I need to go find a specification for Wi-Fi Direct. I won’t tell you what I think Wi-Fi Direct is and I would love for somebody to tell me I’m wrong, I think that our SoftAP setup process is Wi-Fi Direct that basically you make a direct Wi-Fi connection between 2 devices where in this case the Photon advertises a network and then your mobile phone or your computer, whatever it is connects to that network and then does whatever you like by default the Photon as 192.168.0.1. That’s a common local subnet IP address and so then if you use a TCP server to listen on a certain port, you can then connect to that port over that connection.&lt;/p&gt;

&lt;p&gt;As far as I know, the answer is yes because that’s Wi-Fi Direct. It’s a term that people throw around as though it’s something different, more complex, more advanced than that. I look forward to hearing more and I’ll put it on my to-do list to go find a spec for that and read it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; There was a question which was: &amp;quot;Are there any technical documentations about the modular firmware build system like the Photons to be found anywhere, so that perhaps we could do some inception and set up a modular user application?&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; A modular user application. Dreams within dreams. Firmware within firmware. There is almost certainly some documentation about that. Right off the top of my head, I don&amp;#39;t know where it is. If I were going to guess, I would go to GitHub to the firmware repo. I would make sure I’m on a &lt;code&gt;develop&lt;/code&gt; branch and I would look at the readme there. Module descriptor linking and retrieval is a link there. Modules. Bootloader overview and internals. Let’s see, so that’s specific. The bootloader is one of the modules so that’s what is, and the cloud communications is the former communication library that was separate and pulled in to the firmware repo. The communication library is in one of the modules. The module descriptor linking and retrieval is actually something separate.&lt;/p&gt;

&lt;p&gt;How about this? I will say probably not if I can’t find it immediately and I will put it on my list to make sure that that gets documented somewhere. I know there are documents somewhere that maybe we only had internally so we’ll put them up in a public place because that’s useful if you are the kind of person who wants to dig and it will have to be a little hidden because it’s really just confusing for someone who is just trying to get started so we want to make sure not to scare people but we’ll be sure and put that up in a place where you can find it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We can definitely link that to the blog post that comes up with the transcript of this interview.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I’ll state it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; One person has asked, “Will I be able to access the baseband radio on the Electron?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; On the Electron, no, I don’t believe so. The only interface we have is to the u-blox module is through AT commands over a serial interface. So no.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It turns out that WifiScan according to Mat is in fact ready and documented for 0.4.5 which I’m super excited about!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Thank you, Mat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Thanks, Mat. People are wondering how they can update to 0.4.5?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; There will be a few ways so you can do it over the wire, DFU. Think about, do you want to do this over USB cable or do you want to do it over the air? If you want to do it over the air, which is the simple thing, then open up the Build IDE, go find your devices. You open up the device drawer. Find your device and expand it. There’s a little drop down where you get to choose which version of the system firmware you want.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/build-firmware-dropdown.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;If you change that to 0.4.5, once that’s available (once it appears in that list), then the next time you flash any app, you’ll have this very long flash because you will be getting an overview update of the system modules as well as your user app. That’s one way. That’s the easy way and if you find there are problems and you just want to go back to the old version, all you have to do is change that drop down and you’re good to go back on the firmware you know and love.&lt;/p&gt;

&lt;p&gt;If you want to do it over USB cable, I think the easiest thing is to use the &lt;code&gt;particle update&lt;/code&gt; command. As soon as we have those binaries, we will put them into the CLI and once we update the CLI with the 0.4.5 binaries then you can update your version of the CLI, make sure you get the latest and then call &lt;code&gt;particle update&lt;/code&gt; with your Photon plugged in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; When I do this, it’s just going to detect whatever Photon is currently plugged in to my USB on my computer and update that, or do I need to add any more syntax past &lt;code&gt;particle update&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; I think it’s just &lt;code&gt;particle update&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Okay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yeah. Correct me if I’m wrong.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see. I think that everyone is still catching up with us because there is about a 30-second lag, but that is pretty great. Do you want to talk about your musical abilities and strange concentration of musical humans at Particle?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yeah, there is. It’s outstanding. I think it’s the best thing ever. I am a composer. I’m going to verify that the website I’m about to say actually does exists. It’s &lt;a href=&quot;http://zacharycrockett.com/&quot;&gt;horrible but it exists&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/zachary-website.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Wow. That website is very, like, 2004.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yeah. That’s probably the last time I updated it. Since 2012. It was just how I rolled but in any case, my name dot com was primarily used as a place for me to post as a composer. So I’m a composer and do electronic music and acoustic music. Electro-acoustic music where you write computer programs. Onstage would be a computer with a microphone and some speakers and a performer or more performers, more computers.&lt;/p&gt;

&lt;p&gt;The computer just becomes another one of the performers and so you write software that can let these different players interact. There’s one called a saxophone and a computer piece called &lt;em&gt;Fight to Flow Between&lt;/em&gt; that I wrote that has gotten a lot of play and particularly there’s a saxophonist, an outstanding saxophonist named Eric Honour who toured around the world several years ago. My favorite piece, if you actually are listening and actually go to that website which I haven’t, like I said, updated in years and years. I have not touched. A little bit embarrassing but that’s okay. My favorite piece is called &lt;em&gt;Fire: Their Voices Cracked&lt;/em&gt;. It’s for 6 saxophones, 4 percussionists and a didgeridoo and it’s awesome. I wrote it, now almost 15 years ago. It’s good. I like creating rituals and dances in musical form. My PhD was a collaboration with a choreographer in Minneapolis. I also play in an electro-acoustic improv quartet of composers called Earworm. I’ll let you do the Googling if you care. We haven’t played a gig in a while. We’re going to do one in early 2016 somewhere in Rhode Island, I think.&lt;/p&gt;

&lt;p&gt;Yeah, and the strange concentration of musical humans at Particle. Out of our 25 to 30 people there are very few who would say a sentence like “Oh, I’m not musical or I don’t have any musical ability.” Very, very few. Almost everybody like sings, or plays cello, or is a composer, plays piano, plays drums, plays bass. We’ve talked about how we need to have-- there are actually too many people. We need multiple bands actually. It’s obviously on the backburner because we haven’t done anything about it but, yeah, bands, a capella groups, something. We need to make more musical things happen at Particle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Before I go back to a couple more questions, I wanted to ask you a specific question about the piece you were just referring to with the many saxophones and the Australian instrument which was: Did you originally write it with all those instruments there?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Yes, exactly. The conception of the piece before it was written was six saxophones and it’s the whole range, so it’s one bari, two tenors, two alto and one soprano. Four percussionists. ONe of them plays wood, one plays metal and one plays skin drum type things, and each of them has some small things, medium sized things, and some big things, and the didgeridoo. That was all part of it. I was spending a lot of time in libraries in Europe and the US and reading Aztec codices. It was fanatically related to Aztec rituals and campaigns.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I was just curious because I thought, maybe after the first draft, I was going to ask-- &lt;em&gt;did you redo&lt;/em&gt; it after the first draft? Get it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Didgeridoo. Did you redo. I want to pour this on your head.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Sorry. Greg is asking: how secure is the communication between the Particle cloud and the Photons and would it be possible for someone to sniff my code and find out where the encryption keys are stored?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; It is very secured. This is something we cared about and I personally cared deeply about from the beginning. Now, here’s the one caveat. If someone has physical access to the device, if they’re holding it in their hand and they can touch wires to it and they can plug things into it, they can get whatever they want so we can’t prevent that. But if someone does not have physical access, and you’re talking about people just sniffing the airwaves, the connection between a Core or a Photon or a P1 or an Electron in the cloud is encrypted. For the hand waving, I’ll just say it’s encrypted with TLS.&lt;/p&gt;

&lt;p&gt;For those of you who want more detail, in the &lt;a href=&quot;https://github.com/spark/core-communication-lib&quot;&gt;communication library part of the firmware&lt;/a&gt;, there is a security overview. What TLS actually is, is it’s a negotiation protocol between 2 parties to say like, “Hey, I support these things.&amp;quot; &amp;quot;Oh, really? I support these things. Do you want to talk this?&amp;quot; &amp;quot;Yeah. I think that’s a good idea. No, maybe not. Let’s try this one.” There’s always negotiation to decide what cipher suite you want to use to encrypt the connection.&lt;/p&gt;

&lt;p&gt;We write the firmware and we write the cloud. There is absolutely no need-- It’s an utter waste to have all of that traffic for negotiation. We just pick one and it’s a reliable one. On the Core, and the Photon, and P1, right now, the device has a 1024-bit RSA key-pair. (I’ll go through this quick so we don’t bore too many people.) The cloud has a 2048-bit RSA key-pair. The private keys are private to those things, never leave them. The public keys are exchanged so the cloud has a copy of all the device public keys. The device has a copy of the cloud public key. You can go download the cloud public key. There are links to it around the community. We used RSA to get an initial handshake a way to send a small secret back and forth. And the secret that we send is an encryption key for an AES 128 CBC connection. There are more details than that. There’s a SHA-1 HMAC and there’s all these things. You can go read more if you dig in to the communication folder of the developed branch of firmware and see the security overview that’s in the &lt;a href=&quot;https://github.com/spark/firmware/blob/develop/communication/README.md&quot;&gt;readme&lt;/a&gt; but it’s encrypted as securely as your typical bank website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. That sounds pretty good. I feel safe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Feel safe and warm. I feel I’m wrapped in a snuggie.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; That’s what we want for you as a product creator. That’s what we want our customers to feel like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. We’re about 5:00 so I’m going to shut down the broadcast, but thank you so much for spending the time to talk to me and to the community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; Absolutely my pleasure. You have the awesomeness for doing these and you are the awesomeness for watching and listening.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; All right. Cool. Bye, guys. I will see you next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zachary:&lt;/strong&gt; See you around the community.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Particle Interactions: Sprint 42 with Richard Whitney (Transcript)</title>
      <link>http://spark.github.io/staging-blog/2015/08/31/particle-interactions-sprint-42/</link>
      <pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/08/31/particle-interactions-sprint-42</guid>
      <description>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/hNCLdrkRz-Q&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  All right. Hi everybody. Welcome back to another lovely Particle interaction. This time I&amp;#39;m hanging out with Richard Whitney, who is the Head of Product here at Particle. Super fun. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Hi, guys.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We&amp;#39;re trying to use a new method of displaying our lovely background images. It&amp;#39;s a little laggy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Winter is stuck loading at twenty five percent. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; For people who don&amp;#39;t really know what it means to be running product, can you tell us a bit about what you do at Particle? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Sure. The product role is different at a lot of different companies. It&amp;#39;s not really a uniform thing yet. At Particle I do a lot of design work, a lot of UI/UX for the tools that you interact with. To the &lt;a href=&quot;http://build.particle.io&quot;&gt;Build environment&lt;/a&gt; on the web, &lt;a href=&quot;https://www.particle.io/dev&quot;&gt;[Particle] Dev&lt;/a&gt;, &lt;a href=&quot;http://particle.io&quot;&gt;website&lt;/a&gt; design, graphic design, and a lot of other things. Some other things that are bit more behind the scenes are like, longer-term road map, and shorter-term decisions about what trade-offs we choose, both on the hardware and the software. My job is generally just to touch all of the things. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Sounds like you might be pretty busy a lot of the time. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I am quite busy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You are quite busy. Well, thank you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Except for this hour. It&amp;#39;s a vacation. We&amp;#39;re in &lt;a href=&quot;http://www.amazon.com/Winter-Wonderland-background-scenes-Television/dp/B00AMT8VI2&quot;&gt;winter wonderland&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s pretty important to sometimes take time out to walk in a winter wonderland, so they say. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I&amp;#39;ve heard that from other people. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. What does your day to day look like? It&amp;#39;s a lot of things. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Today was largely meetings. Just to take an example. Starting around eight in the morning, and my last meeting is tonight at 6:00. Internal meetings with various teams like the firmware team, hardware and software. Some external facing ones with potential partner companies, manufacturers and customers. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; How did you get started doing this?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I don&amp;#39;t know. &amp;quot;Product&amp;quot; was never a title that I really sought out. It&amp;#39;s not something that I tried to get into. I started out doing engineering. I was a biomedical engineer and undergraduate with work on material science. Went to the &lt;a href=&quot;https://www.media.mit.edu/&quot;&gt;MIT media lab&lt;/a&gt; for grad school. Fun, games, fabrication, electronics and software software. User experience, psychology and a bunch of other stuff. Ran a couple of R&amp;amp;D groups. Did a lot of product development and found myself with this odd confluence of skills which seems to work well here. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s great. We&amp;#39;re happy that you have your odd confluence of skills. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Thank you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It is helpful to us. Bearing that in mind when you have this wide reaching array of responsibilities and the things that you do-- I always ask everybody when we do this-- What does the next six months look like for your department? Your department&amp;#39;s kind of huge, but I&amp;#39;m going to ask you that question anyway. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Busy. Shipping &lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-electron-cellular-dev-kit-with-a-simple-data&quot;&gt;the Electron&lt;/a&gt; is going to be one of the big things. Optimizations on that and features that we’re adding to the election are all very big. Those loom quite large in the next three months or so. Going into the new year, adding some more features to &lt;a href=&quot;https://www.particle.io/manage&quot;&gt;Fleet Management (or device management)&lt;/a&gt;. More Electron stuff and then some research into future hardware things that we’re working on. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Very cool. You probably give the most succinct answers by the way. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I know. That&amp;#39;s just me. That&amp;#39;s the way I am. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let&amp;#39;s see. What else do we have? You developed the &lt;a href=&quot;http://particle.io/buttonstart&quot;&gt;Internet Button&lt;/a&gt;. I remember when I started at Particle about a year ago. When I was interviewing, I was asking everybody, &amp;quot;What are you working on? What&amp;#39;s cool and exciting?&amp;quot; You said, &amp;quot;Well, I&amp;#39;m building an Internet Button.&amp;quot; I said, &amp;quot;What does that mean?&amp;quot; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Should we do a reveal?&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/internet-button-cover.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Quite a while ago I started working on this little side project. This idea of a really simple demonstration of our platform that doesn&amp;#39;t require any electronics basically. It&amp;#39;s got the physical electronics, but you don&amp;#39;t have to do any wiring. You don&amp;#39;t have to understand what&amp;#39;s going on. Very powerful and addresses a pretty large set of use cases. Particularly for people who are non-technical just to get started fast. Ended up designing this little round button which has eleven LEDs at the clock positions one to eleven, and four buttons on the other side so it works like a game pad. A little buzzer which I don&amp;#39;t think we&amp;#39;ve actually announced yet. I don&amp;#39;t think people know that it can make music, but it can. Accelerometer, so it knows its orientation and if its been moved. Here&amp;#39;s the big reveal. The internet comes in it&amp;#39;s own little lovely metal can, comes in your own collector tin. Let&amp;#39;s  see if I can get that in there good. Yeah. &lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/internet-button-uncovered.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Has a clear plastic dome over the top so you can click directly down on it. A second plastic piece which works as a diffuser. 
Even at Particle the internet goes out sometime. I hope we&amp;#39;re still actually working here. Has this other little diffuser piece which is hard to see, but has little braille bumps on it so you know which button is which. On the underside, it has the four buttons and this little magnetic buzzer. It&amp;#39;s not a piezo. It&amp;#39;ll play a much wider range of tones than the whiny little piezo buzzers you&amp;#39;re used to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It is a really nice sound. I went from using my Radio Shack sale piezo buzzer to using this guy, and it was incredible. Big difference.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Nice. Glad you liked it. Of course, USB cable. I will get this thing set up while we talk and then run some code on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I really enjoy the design of this button like this little plastic cover over the cover. This doesn&amp;#39;t get thrown out. I was really worried that people would unbox it and then throw this out. Even though it&amp;#39;s sort of apparent that this goes to sit on top of here. Yeah. It looks really cool. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Thank you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We just put up some examples through this also. I know you wrote the &lt;a href=&quot;https://build.particle.io/libs/55e0a4256b6e3275580009ce/tab/1_Blink_An_LED.cpp&quot;&gt;entire library for this with some cool demos&lt;/a&gt;. Right? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. That&amp;#39;s true. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Let&amp;#39;s see. Sorry. I&amp;#39;m doing a setup process while this is a new, never opened one. I&amp;#39;m setting up Wi-Fi.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. Cool. You can look at it. It is flashing blue. Flashing blue is what it does when it hasn&amp;#39;t learned any Wi-Fi networks yet. That&amp;#39;s also known as &lt;a href=&quot;https://docs.particle.io/guide/getting-started/modes/photon/#listening-mode&quot;&gt;listening mode&lt;/a&gt;. There&amp;#39;s a list of all the modes on the docs. There are actually little videos that will show you what the modes are, if you ever get lost or confused. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Cool. Getting close and I&amp;#39;m doing this via the CLI. I am currently setting things up from the command line interface installed through the app. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It&amp;#39;s just a Photon, so you can set it up the same way that you would set it up &lt;a href=&quot;https://docs.particle.io/guide/getting-started/start/photon/#connect-your-photon&quot;&gt;with your phone&lt;/a&gt;. Or &lt;a href=&quot;https://docs.particle.io/guide/getting-started/connect/photon/&quot;&gt;serial&lt;/a&gt;, whatever, whichever way works best for you. I think that the phone app is really easy so I often do that. I often recommend to new users to do that. Once you get really into it, though, the command line is really slick.&lt;/p&gt;

&lt;p&gt;Oh man. There&amp;#39;s so many people with Photons right now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. There are a bunch of Photons at the house. I&amp;#39;m going to set up somebody else&amp;#39;s by accident. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; When you set up the Photon right now it gives you a network. The Photon makes its own little Wi-Fi network. You have to connect to it in order to do the setup process. When you set up a Photon-- this is actually part of the things you set up on your phone. It says, &amp;quot;Go to settings, switch to the Photon&amp;#39;s network and then come back.&amp;quot; If there&amp;#39;s five Photons in a room, they&amp;#39;ll all have unique Wi-Fi networks that they&amp;#39;re broadcasting. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Which if you look at the barcode on the bottom... Come on, crisp up. There you go. You see those four numeric digits right there? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That says 54SC.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. That&amp;#39;ll actually tell you what the Wi-Fi name is of the Photon. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It is in barcode in case you&amp;#39;re at a hackathon. Or you&amp;#39;re with a bunch of people and you&amp;#39;re trying to all set up your Photons at once. It is on the barcode. Now he&amp;#39;s just doing the setup. I wish that we could show that, but it is on Richard&amp;#39;s computer. Not my computer so I can&amp;#39;t do a screenshare. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Cool. We should be setting up now. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. Look. Okay. It&amp;#39;s still blue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. It went back to blue. I think our local Wi-Fi network&amp;#39;s being a little bit dodgy right now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It&amp;#39;s angry. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. My computer is trying to connect back to the Wi-Fi network and not connecting. We&amp;#39;re doing bad things here. I think streaming video is the bad thing that we&amp;#39;re doing here. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That could be. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Anyway that&amp;#39;ll get online eventually. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let&amp;#39;s keep talking while we&amp;#39;re waiting for that to come online. You&amp;#39;ve had a lot of interesting experiences in tech. You did the Media Lab. You&amp;#39;ve done a lot of R&amp;amp;D. Obviously you&amp;#39;re working for us here at Particle. What are you really excited to see built on the Particle platform? Is there anything that you&amp;#39;re excited to build? Or that you&amp;#39;re excited that other people are building?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. There are a few things. Let&amp;#39;s see. I am really excited for more advanced tools. One of the things that we&amp;#39;ve just started to build are... Let&amp;#39;s call them more professional tools. Things that have GDD equivalents. GDD is this very deep technical tool for talking to microcontrollers over a JTAG. There are a bunch of those things that I&amp;#39;d really like to have us build out. And then some other things that are related but simpler, like Serial over Wi-Fi. When you serial print on your device, it [could] just show up in the build IDE instead of connected to a serial terminal, or anything like that to make debugging easier. We&amp;#39;ve been talking about a bunch of things along those lines that are really going to accelerate the development process. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That would be really great. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I hope so. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; What about little projects and fun things that people hack around with? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Boy, it&amp;#39;d be a terrible idea for me to show a video on my phone to a video camera. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It would be not the best.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It would be embarrassing. Yeah. I&amp;#39;ve actually been working with these high voltage LED filaments recently. Just as a fun little side entertainment. They&amp;#39;re gorgeous. They look like incandescent filaments when they&amp;#39;re on, but they take sixty volts to drive. I built a little test circuit that lets me run patterns on them with a Photon. Just recently designed a board for them so I can drive something like thirty of these little ultra high voltage filaments at once. I can do nice little light shows and stuff on a tiny little board. The total thing is so small.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;https://vine.co/v/eItI2eXhXjw/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Mm-hmm (affirmative). That&amp;#39;s really cool. You&amp;#39;ve done a lot of art shows, displays and everything in the past too. Right? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; That is true. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. You also do art. That&amp;#39;s a part of being Richard Whitney, is doing art.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Art is an exaggeration. I&amp;#39;ve had things in a couple of galleries. I&amp;#39;m uncomfortable calling them art because I have friends who are actually artists-- really put in time and effort and produced these wonderful complex things. I&amp;#39;m more of a social hacker of artists. I do things that cost me much less time and effort, but have... I don&amp;#39;t know. Interesting impact. They use tech and so people are more enamored by them than if it were just oil and canvas. Generally participatory things, interactive art. &lt;a href=&quot;http://consolidatedpixel.com/punchbob/&quot;&gt;A punching dummy that when you hit it or slap it or kiss it or hug it, it takes a photo just in that instant and then projects it huge on a wall&lt;/a&gt;. It really is a social experiment which works phenomenally well. People like to play with it, but then the social pressures of their peers change what they do with it. Guys need to look strong, but not violent. Women need to look playful, but not strong. These really odd things that come out of the group interactions.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/punch-bob.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Huh. That&amp;#39;s pretty interesting. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Thank you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Good. You should build some weird Particle, interactive things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I know and I&amp;#39;ve been infecting some other artists with Photons. There are some people who are going to be building interesting things in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Do you have advice? Standard advice for artists who are trying to become more technical and well-versed in Internet-of-Things-type art?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Work with Photons. It&amp;#39;s way easier. By the way, someone-- community-- please help us. Someone should write us a good OSC library for the Photon. OSC is open sound control. It&amp;#39;s a communication protocol. It used a lot by artists to do control over various musical things and graphical things. There are a lot of really nice apps already out there for it. It&amp;#39;d be kind of a little thing that runs on your phone to your control... I don&amp;#39;t know. Complex stuff that&amp;#39;s really easy to rough out. It&amp;#39;s mostly visual programming for simpler artists, but then deeper control. You can enter it into SuperCollider if you&amp;#39;re doing generative music and some other things that we should really get on. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. We should do that. If we have more artists in our community, I&amp;#39;d love it if you guys were watching to make that kind of thing happen. Reach out to us and to Dick on the Community who is at @Dick on the community. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It&amp;#39;s true.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Easy to get ahold of him that way. Let&amp;#39;s see. Speaking of libraries, we are doing currently some work to identify libraries. Right? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. We&amp;#39;ve got a bunch of things coming together right now. We&amp;#39;ve gotten a script written that goes through, checks the examples and all libraries for Core and Photon compatibility. We now have a list of whose libraries don&amp;#39;t work with the core or the proton and what the compile errors were. If you get an email from me, I&amp;#39;m trying to solve that. There are a couple of broad categories that the failures fall into. I&amp;#39;m currently putting together emails. Running emails that&amp;#39;ll tell you how to fix that problem. Instead of just a general, &amp;quot;Your thing is broken,&amp;quot; I&amp;#39;m sending you very specific directions on, &amp;quot;It is probably this.&amp;quot; &amp;quot;You fix it by changing this code to this, so it should be really quick.&amp;quot; A few people have gotten pull requests from me over the last few days. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s great. Hopefully that whole issue gets resolved pretty soon. I&amp;#39;ll also make sure that I release a list as we go forward of the libraries, if there&amp;#39;s some that we can&amp;#39;t get fixed that have become orphan libraries, so that we can get everything up to date. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. We don&amp;#39;t want any sad little orphan libraries. They should all have wonderful, caring parents that really spend time with them. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Hey it looks like your button&amp;#39;s online. Look at this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It is. Did I flash code to that yet? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I don&amp;#39;t know. Here we go. Happy, breathing cyan. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Well. I should target it. Let&amp;#39;s see. What do I need next?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now we&amp;#39;re looking to see which one this guy is. You can usually tell this by who&amp;#39;s online. What Dick is doing right now is he&amp;#39;s refreshed his Build page so that he can see this device being online. There will be a little pulsing, cyan dot next to it when it is online. If you have five devices online, all of them will have pulsing dots next to them. If you just claimed one and you haven&amp;#39;t named it then your one would be the one that says, &amp;quot;New device,&amp;quot; with no name. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. I am the lucky owner of one of our test suites of devices. I tend to have a lot more devices online than other people, which takes a little bit more looking through. They all have cute names based on the emoji stickers that I&amp;#39;ve stuck to their cans. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. Yeah. You have one named MoneyBags, right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I do. I have MoneyBags which is like a little money sack. I&amp;#39;m currently looking at who&amp;#39;s online. Kitty&amp;#39;s online, Puppy&amp;#39;s online, Pineapples is online. Pow is not online, but should be. I think that&amp;#39;s just temporary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh look, purple. That&amp;#39;s the code coming in over the air?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yep. Yeah. That should be pulling the 0.4.4 update right now. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh yeah?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; This is going to take a little bit longer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Okay. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Since this is the first time I&amp;#39;ve flashed code to this new device, it&amp;#39;s also downloading our latest firmware. This is something we&amp;#39;ll probably change in the near future. Currently when it first comes online it&amp;#39;ll get the 0 update, which puts it on 0.4.2 maybe, from our version for our system firmware. Since I&amp;#39;ve just flashed code to it and it would really like to be running 0.4.4, it is now downloading new system firmware for that version. Which is our lovely, new modular firmware. This will probably take as many as like... Well with what we&amp;#39;re doing to the internet here and how its been behaving, it might take a little bit longer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Did I mess it up?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It&amp;#39;s fine. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It went really quiet all of a sudden. No. It&amp;#39;s fine. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. There&amp;#39;s a fun experiment you can do with your device. You absorb RF really well. If you wrap your hands around your device you can make it go offline. Because people are big bags of water and water absorbs 2.4 gHz really well. When I&amp;#39;m actually testing low connectivity like low signal strength behaviors, that&amp;#39;s one of the standard things that I do. I just wrap my hands around it, see if it drops out and see how it behaves.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s pretty good advice for when my-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; For doing bad things to your device?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I should definitely stop trying to give my Photon a hug when it&amp;#39;s not finding the internet. It&amp;#39;s not very encouraging for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Right. It&amp;#39;s not that it&amp;#39;s sad. It&amp;#39;s that you&amp;#39;re a big bag of water. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let&amp;#39;s see. What else do I have? Anything that you&amp;#39;re really excited to get fixed as a product person in the next couple months? Yeah. Everything? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. When you find things that annoy you, do let me know. Also assume that I&amp;#39;m already annoyed about them and that I&amp;#39;ve put it on someone&amp;#39;s road map. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. Yeah. You were working on a really big, beautifully laid out road map.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yep.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; So that everyone has visibility into everybody else&amp;#39;s stuff.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yep.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. That&amp;#39;s going to be really huge. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. That is together. I need to update it later this week. That&amp;#39;s to let everyone understand how the different parts of the stack interact because we have a very complex product. This isn&amp;#39;t a nice, compact thing all written in one language or running on one server. This is hardware design, firmware design and several different cloud services. Front-end and other services that we&amp;#39;re spinning up currently. Business deals that have to go through, contracts are being negotiated. All of those things really have to dovetail together at the right time for everything to work smoothly. Yeah. It&amp;#39;s a pretty important thing to make sure everyone understands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. That sounds very complex to handle and to display as information for everybody.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah, but then I put nice gradients on it and it&amp;#39;s less threatening.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I saw that when we were doing docs, you put together the graphic. Right? Of the update sequence for the Photon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yeah. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; There&amp;#39;s a nice graphic on the docs of what happens when you get your Photon because a lot of lights go off, once you get it online. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. There are quite a few different parts of the pattern. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. They did a really nice graphic showing the light sequence that you&amp;#39;re going see over time. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. The blink patterns. You get to blinking cyan and then it goes blinking pink again (or magenta).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah and same for the user modes. You can put into three different modes. There&amp;#39;s safe mode which is blinking pink. For those of you who don&amp;#39;t know, hold down the &lt;code&gt;SETUP&lt;/code&gt; button and then tap the &lt;code&gt;RESET&lt;/code&gt; button. Let go of the &lt;code&gt;MODE&lt;/code&gt; button or &lt;code&gt;SETUP&lt;/code&gt; button (we&amp;#39;ve changed [the button&amp;#39;s name] from the core [from &lt;code&gt;MODE&lt;/code&gt; to &lt;code&gt;SETUP&lt;/code&gt;]). When you&amp;#39;re on the mode you want the first mode is... a breathing magenta mode and that&amp;#39;s &lt;a href=&quot;https://docs.particle.io/guide/getting-started/modes/photon/#safe-mode&quot;&gt;safe mode&lt;/a&gt;. It&amp;#39;ll still get online. We&amp;#39;ll be able to flash code to it, but it won&amp;#39;t run your user code in case you put something on there that SOS&amp;#39;s. Or had some other problem where it&amp;#39;s blocking. That makes it a lot easier just to put fixed code on it. The next one is blinking yellow. That&amp;#39;s DFU which let&amp;#39;s you do low level programming and a couple of other interesting things. The next one is blinking green, which wipes the user code off. Wipes the user code, but keeps the Wi-Fi credentials. [This mode has been removed from the Photon. We recommend that you reset the wifi credentials &lt;a href=&quot;https://docs.particle.io/guide/getting-started/modes/photon/#wifi-network-reset&quot;&gt;this way&lt;/a&gt;.]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I&amp;#39;m pretty sure it does that as well. Alex just wrote that we forgot to Tweet about this. I am now putting this up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; On the Twitters?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; On the Twitters. All right. That looks like a reasonable Tweet. Right? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yes. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; All right. Let&amp;#39;s go Tweet. Cool. Looks good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Alex says, &amp;quot;Wi-Fi scan library please.&amp;quot; Yes. That is actually a thing that Matt has been working on. I believe there may be an improved design for that now. I believe that&amp;#39;s happening soon. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I would be delighted if that were a thing because I actually just got a message from one of my friends the other day. She&amp;#39;s doing development for this thing at Harvard Medical School. She said that they wanted to build the Wi-Fi connected Hobbit sword so that they can use it to see unsecured networks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. It&amp;#39;s funny because that meeting was yesterday morning at 8:00am. We definitely talked about how it would fix the Warsting library. That&amp;#39;s in the works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. Let&amp;#39;s see. All right. Your dude is now breathing magenta. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Let me see. You keep talking. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; If people want to post questions now you should feel free and welcome to do that. We will answer those and then play around with the Internet Button a little bit more, if we have time for that too. Yeah. Usually because there&amp;#39;s such a huge lag it takes a minute for any questions to pop up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Cool. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let&amp;#39;s see. Garrett wanted to know: Will you be sharing your LED filament project on Hackster or anything? Yeah, will you?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I&amp;#39;m not a sharing kind of person. Yeah. I&amp;#39;ll put those up once they&amp;#39;re together. There are a couple other things that I&amp;#39;d like to get built into it. It&amp;#39;s funny because I was looking at the design and realized that I hadn&amp;#39;t actually put in a power switch or a couple of other things. Minor tweaks before I actually do a run of some boards.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Will wrote, &amp;quot;Bring back Will.&amp;quot; Will, you get to do this in a couple months because we cycle everybody. We will bring back Will soon-ish. Yeah. Garrett said, &amp;quot;Needs more hats.&amp;quot; I did offer you a hat, to be fair.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; You did. Yeah. I subscribed to the David Attenborough school of hats, which is very much: Unless you will die without it, you should not wear a hat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Whoa. Is that an actual philosophy of David Attenborough? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Well yeah. Look at him in every extreme environment, never wearing a hat. &lt;a href=&quot;https://youtu.be/xR-yMiyquG4?t=11m42s&quot;&gt;The only time I&amp;#39;ve ever seen him with any kind of head gear on is in the dry dessert of Antarctica.&lt;/a&gt; You&amp;#39;re so far inland and it&amp;#39;s so cold, but there&amp;#39;s no snow or anything. That’s the only time he&amp;#39;s had head gear on that I&amp;#39;ve noticed. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s pretty intense. Oh. Alex is asking, &amp;quot;What are some ideas for multiple Photon projects?&amp;quot; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I really like David&amp;#39;s &lt;a href=&quot;/2014/12/12/holiday-lights&quot;&gt;Cheer Lights&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. That was fun. &lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/20141212/tree_crop.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It was of the simpler things, but it&amp;#39;s so great. It&amp;#39;s an Internet Button that when you click it, makes other Internet Buttons sparkle with Christmas color. You have one and your friend have them. When one person clicks everyone gets a little bit of cheer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That was really lovely. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It was nice. I also like some of the more practical projects. Automatic lock control and gate control stuff. You&amp;#39;ve got a gate that you have to buzz people in on at your apartment. You just have a button that does it. When somebody rings your doorbell you can just hit your Internet Button and it goes. There would be Photon down there that runs the electronic strike, the solenoid in there. Another one upstairs to receive your button clicks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;ll be useful. That sounds like something you might have experience in. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Denial knowledge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Previous life experiences. What is the best way to do batteries for development and production? How do I make a battery last its longest?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. That is a long and deep conversation. Batteries for development... For early prototypes I really just like to plug the USB into one of the phone batteries-- the USB phone charger battery things-- because it&amp;#39;s so quick. Actually one of the standard ways that I do demos now is to buy an OTG cable. I can plug it into my phone and then I plug another USB cable into this little adapter, which runs into my Photon. My phone&amp;#39;s battery provides my Photon with the power. I tether the Photon to my phone’s internet. Now I&amp;#39;ve got this thing where I don&amp;#39;t have to rely on any local internet or power.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That is probably the way that I should also be doing demos. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It&amp;#39;s really effective as long as you&amp;#39;re not in an interior room, in a concrete building. Then you&amp;#39;ll do pretty well. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s great. Yeah. I usually do carry a giant battery around with me. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I&amp;#39;ve got this monstrous brick that&amp;#39;s like ten thousand million amp hours.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Keeping the radio off is pretty important with Wi-Fi. Wi-Fi just as a protocol is extremely power intensive. I don&amp;#39;t know. No matter who&amp;#39;s chip you&amp;#39;re using, no matter what platform you&amp;#39;re on, Wi-Fi just likes power. It will pull it really as much as it can. By as much as it can I mean eighty to a hundred million amps, which is a lot over longer periods of time. [You should be] turning the radio off and only turning it on when you actually have something to publish, or when you want it to surface. Receive some data look or commands that are waiting and then go back down. That&amp;#39;ll really make the batteries last a lot longer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Will wants to know what&amp;#39;s your favorite part about your job? What is the most stressful part?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Can they both be Will? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I don&amp;#39;t know. Will, can they? I don&amp;#39;t know if he can hear me. He&amp;#39;s downstairs probably.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Well he may have his head phones on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s also true. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Let&amp;#39;s see. Favorite part of my job is actually my co-workers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Awww.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. No. It really is. Not even as a joke. It&amp;#39;s just like, &amp;quot;I really like the people I work with.&amp;quot; Most stressful part is manufacturing China. I know that just seems like it shouldn&amp;#39;t be that big a deal. Things always change and they always change in unexpected ways that you haven&amp;#39;t seen before. You are always QA&amp;#39;ing and covering for the problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Will just yelled, &amp;quot;No,&amp;quot; from downstairs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I assumed that&amp;#39;s when Will heard us from earlier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I think there&amp;#39;s pretty serious lag. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It&amp;#39;s a really long delay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let&amp;#39;s see.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; We did not crack the Amazon dash devices yet, but other people have. It seems likely that they&amp;#39;re software compatible with our platform, which is interesting. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. There are probably some links somewhere of all these. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. There are. If you look for “Amazon dash hack,” there are a couple of good tear-downs. And it&amp;#39;s a beautifully designed device. That is a really cleverly designed thing. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Julien wants you to post the OTG plus tether trick to the community forum.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Sure. Yeah. It&amp;#39;s like a two dollar adapter off Amazon and just totally great. Oh. By the way, this has been sitting quietly, waiting for our attention. You can kind of see the little LED&amp;#39;s dance around as I click things. Let&amp;#39;s see what other code is in this one. It&amp;#39;s one of my many little demos. I never know which ones have music or other stuff. There it goes. That&amp;#39;s rainbow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s pretty. Rainbows.&lt;/p&gt;

&lt;p&gt;Yeah. These are really easy to use. I was so excited when I was playing with this. Also they look so slick now because for a while, I had just the v1 button that was raw and it didn&amp;#39;t have--&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yeah. Well that&amp;#39;s also just a lot of the shiny plastic off too because, come on, if you’re listening to this, you&amp;#39;re interested in the nitty gritty part. Lovely new matte black silk screen. Come on camera, focus. Pretend like this is really here. There you go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Nice matte black. A few little hidden features. There were complaints about me not having an LED at twelve. I&amp;#39;m sorry. I can&amp;#39;t actually put one there and have the plastic fit. Here is an unpopulated neo pixel pad. You can just plop one down and it&amp;#39;ll work. On the back you can see that there&amp;#39;s an unpopulated JST, if you happen to want to plug a battery into it. There you go. You can also tap directly into the ground in VM lines through the header there. The hole in the middle is meant to let you screw it down to something. You can actually drop a hole through here, put the plastic back on and then put the Photon back into that. Leave it screwed to a surface so it&amp;#39;ll be permanently mounted or semi permanently mounted. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s so exciting. Yeah. I did get a lot of questions. Whenever I show these to people they ask, &amp;quot;Why this guy is empty?&amp;quot; The answer is you can put a thing there. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. The answer is this. The answer is you need to have that little channel that you really can&amp;#39;t see. Let me put my hand behind it. You have to have that little channel in the platform so that the USB can plug in. It&amp;#39;s just a combination of stack up thicknesses that require it to have that. The other cute little feature here is that if you plug your Photon in, then you still have that extra row of headers out to either side. Let&amp;#39;s see if we can make that focus. Come on, just for me. Yeah. You have these extra rows of headers which have dual headers underneath them. You can just plug jumper wires directly in and it mirrors out all the pins in the Photon. I actually use the buttons as a starting point for wider projects. I&amp;#39;ll plug a sensor directly into here. A distant sensor and then display the distance on the LED&amp;#39;s because I&amp;#39;m always trying to startup something. Or test some new sensor or some new actuator. &lt;/p&gt;

&lt;p&gt;I like having a quick way to get into it. Also buttons so I can interact with it and LEDs so I can see what&amp;#39;s really going on. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I like the buttons. This is a tangential, fun story of when I first started working at Particle. Dick and I were hanging out at the office. I had never really done that much stuff with electronics before. He handed me a box that was just all buttons. He was like, &amp;quot;Push all these buttons and tell me which ones you think are the best.&amp;quot; There was just an array of buttons laid out on the table, ranked by which ones were the most fun to press. It&amp;#39;s those kinds of things you think about when you do new product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yes. There&amp;#39;s a particular industrial button that is my favorite. It just feels the best. It’s got this crunch to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I remember that button. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. They&amp;#39;re big and they&amp;#39;re expensive. I&amp;#39;ve had previous art collaborators just take them and never give them back. I need to find a new source. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. It&amp;#39;s funny. Let&amp;#39;s see. There&amp;#39;s a comment about Slack team. We&amp;#39;ll get it up. I had a holdup for it other week, but I expect that to come up in the next month. I&amp;#39;ve had several people asking for that now. Let&amp;#39;s see. What else have we got? I don&amp;#39;t know. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I&amp;#39;m sorry. I&amp;#39;m overly succinct. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You&amp;#39;re very succinct. I didn&amp;#39;t have this problem when I interviewed Will. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. I know. Well it&amp;#39;s actually a thing that English teachers complained about in high school too. They&amp;#39;re like, &amp;quot;Uh no.&amp;quot; &amp;quot;Half a page is not enough.&amp;quot; &amp;quot;I asked you to write three pages.&amp;quot; I&amp;#39;m like, &amp;quot;But I was done.&amp;quot; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; “I was done at half a page.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I said the things I wanted to say. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I&amp;#39;m going to plug this guy back in. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Cool. I&amp;#39;ll make it play music if you want. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh! Oh my gosh! Kenneth is posting a question! When will you be heading over to China and checking out the manufacturing process? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh man. I was actually planning to back in January or something like that, but we were just so busy. I need to renew my visa. Sometime.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Sometime you will go over?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. I spent a lot of time in a different part of China for a different company. I hear that Shenzhen in all is just way more fun. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Why is it more fun? What are you hearing?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; The part that I was in is just way out in nowhere. There are no expats. There is no expat supporting community. You are the only non-mandarin speaker there. They had a very strong local dialect. Even other mandarin speakers have a lot of trouble with them. Which is really funny when you&amp;#39;re watching a negotiation between two people. It&amp;#39;s just very odd. A combination of terrible weather and the extremely high stress of trying to get a product out. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I know that Will wants us all to take a trip to Shenzhen. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; To hangout and see the manufacturing process. Maybe sometime.&lt;/p&gt;

&lt;p&gt;Look-- I plugged it back in because I was excited. The thing that I like about this demo is that remembers where the last LED that was pressed. That&amp;#39;s where the little light comes from. Didn&amp;#39;t somebody make a game with one of these?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yeah. There are a couple of little games and I sort of expected more. We had produced a thousand of the prototype ones and a batch for Instructables and for a couple of workshops and things. This is the first time that they&amp;#39;re really getting out to a wider audience. I&amp;#39;m expecting more fun, interesting things. Games are definitely one of those things I&amp;#39;m expecting. Yeah. Let&amp;#39;s see. Where&amp;#39;s my music code? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. Yeah. Flash that. Let&amp;#39;s see. Gary wants to know what is your favorite Particle story?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I don&amp;#39;t know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You don&amp;#39;t know?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; No. I really don&amp;#39;t. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; They&amp;#39;re all great?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Well I&amp;#39;m like mildly memory damaged now because I been in meetings all day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. That happens.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. It really does. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I have fond memories of lots of things, but no good stories that come to mind right now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Not really a story, but the fact that you basically created an unofficial reading list for everyone at Particle, by recommending the same two books to everyone. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Oh. Yeah. The next round of things... It&amp;#39;s starting. I&amp;#39;m infecting people with more books.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; More books?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. I read a lot and I&amp;#39;m particular about what I read. When I find something that&amp;#39;s really good then I just force it on a lot of friends. A lot of people at Particle have read this thing called &lt;a href=&quot;https://parahumans.wordpress.com/table-of-contents/&quot;&gt;Worm&lt;/a&gt;. And-- this is great-- &lt;a href=&quot;http://hpmor.com/&quot;&gt;Harry Potter and the Methods of Rationality&lt;/a&gt;. If you haven&amp;#39;t heard of it, laugh all you want, but it&amp;#39;s fantastic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; This was one of the first things that you said to me when we were hanging out was, &amp;quot;Have you read Harry Potter and the Methods of Rationality?&amp;quot; I was like, &amp;quot;What is that?&amp;quot; I thought it was like an explanation of Harry Potter which, it&amp;#39;s not NOT an explanation of it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; No. It&amp;#39;s not. It&amp;#39;s a retelling of the story with Harry Potter, the character, as a slightly different person. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It&amp;#39;s really good. I read through it really quickly after that. It&amp;#39;s great. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; You read through all two thousand pages or so really quickly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I did. I like to read. Kevin wants to know how hot is in here? It&amp;#39;s really hot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Kevin, it&amp;#39;s pretty warm. It is not the warmest I&amp;#39;ve ever been in a meeting, but it is not that cool. You notice I&amp;#39;m actually making really fast progress on my water. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; a2retro asks, &amp;quot;I just ordered two Photons and a programmer, how long until system threading is ready?&amp;quot; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Okay. You&amp;#39;re really looking for multi threading right? The current plan-- don&amp;#39;t hold us to this. Is that a beta of multi threading is likely to start at the beginning of next week. That&amp;#39;ll be a beta. It&amp;#39;s not full production. Yeah. You should be able to play with it pretty soon. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Does Particle attend and host hackathons often and do we do it outside of the Bay Area?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Depends on your definition of often. Every other month maybe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I feel like there&amp;#39;s a lot of events that we sponsor. We sponsor a lot of events. You see Photons and Cores floating around at a lot of events. In terms of ones where you might actually see somebody from Particle, it&amp;#39;s less often. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. If you count JS events. NodeJS and stuff. At least every other month. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Every other months sounds about right to me in terms of when we physically go somewhere. We do want to do more of that. That&amp;#39;s also something that I&amp;#39;ve been thinking about lately. If people have ideas of meetups that they&amp;#39;d want-- [starts laughing at Will’s question].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I don&amp;#39;t if Will&amp;#39;s question is for me or for Christine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It&amp;#39;s got to be for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I think it&amp;#39;s a nudge that I need a haircut because it is getting just way too long.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Maybe it&amp;#39;s not a passive aggressive question. It could just be that he thinks that your hair is amazing. The question was who cuts your hair it&amp;#39;s amazing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Will knows that I cut my own hair.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Wait, how do you cut your own hair?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; With my hands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Well, all right. I didn&amp;#39;t think that you built a magical hair cutting robot. Although I imagine if you did you would have built it on the Particle platform. An internet-connected hair cutting robot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yes. You just send it photos that you want it to look like and then it figures out what that hairstyles going to be. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Other people can upload instructions to the hair cutting robot. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Security implications of that are terrifying. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. They&amp;#39;re really scary. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. I&amp;#39;ve been cutting my own hair since college. I started to do it because I was cheap at the time. Since then I&amp;#39;ve never found a barber that I thought did as good a job as I did. About once a year I try a new barber and I&amp;#39;m just never happy with the results. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Wow. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Deep insights.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; How much do you guys play around with Particle for your personal projects?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. All the time actually.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; All the time. Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It&amp;#39;s one of those things that I&amp;#39;ve been thinking about a lot. Really trying to make sure that we get more Photons and things in people&amp;#39;s hands. I build a lot of projects at home. I really do. In part because I always have at least one Photon around. I&amp;#39;ve always got somewhere to work from. I&amp;#39;ve always got that starting point within easy arms reach and some old code that I can hack at to get started. I built a pull up bar sensor just recently. There is actually an internet button mounted on the door frame above the pull up bar, with a little distant sensor below. When you do a pull up it sees your face. It counts up and makes a little noise every time. It has multiple players.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pull-up-bar.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; My housemate and I actually have separate accounts with different colors. I just click the button to choose me or click the button to choose him. Do a set up pull ups and then it reports it to librato. There&amp;#39;s a graph of how many pull ups each of us have been doing. It&amp;#39;s a huge motivational tool. I actually went ahead and mounted the tablet next to it. We&amp;#39;ve always got the graph up so when you walk through that door you&amp;#39;re like, &amp;quot;Nyargh!! Aaron, you&amp;#39;ve been doing more pull ups while I was gone!&amp;quot; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We should probably do that in the office for something. I don&amp;#39;t know if it has to be pull ups. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Taking the trash out. I would be happy if we did it for that. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. You get five hundred satoshis every time you take the trash out. Let&amp;#39;s see. Yes, Garret I do watch Mr. Robot. Someone mentioned the Tyrell comparison recently which was really odd. Yeah. Anyway I was surprised.&lt;/p&gt;

&lt;p&gt;[Next question--] Fun stories about the &lt;a href=&quot;http://thingscon.com/&quot;&gt;trip to Germany&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It was fun. We went to a beer garden.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yeah. We went to the beer garden.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That was cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; What? Two or three times.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Well it was just the activity after the days when we were at the conference. Everybody went over to the beer garden. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It was really good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It was really good. This was ThingsCon which is just a awesome conference. Really smart people, interesting folks. Yeah. Enjoyed it a lot. Oh. What was the other story? Oh. Met a guy named Simone who talked about ethical things and how when you write code your personal biases really show up in your code. The decisions that you put into your code reflect your personal philosophies and I referenced them at a talk last week. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Hmm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; What&amp;#39;s an example of that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; The extremes are the interesting ones to look at. Imagine the programmer of your lights, let&amp;#39;s say, was extremely environmentally minded. They write in this bias where your lights aggressively turn themselves off. Or imagine if the Nest had this very green mindset. Instead of trying to set a comfortable temperature, it was trying to save energy and it was always biased in that direct. It was always turning the temperature down when it was cold out and up when it was hot out. I think it plays out in a lot of other subtle ways. There&amp;#39;s been a lot of discussion of morality and autonomous vehicles recently. That&amp;#39;s a really interesting debate. What is the correct choice for an AI to make? I think it comes out in other subtle ways. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Moors7, who everybody knows from the community as one of our wonderful elites, just asked if we have hackathons internally. If so, what is the most amazing thing that came out of that? I&amp;#39;m laughing because he has been to some of our internal hackathons. We don&amp;#39;t do it as much as I wish we did. There was another question on here about our dev evangelism and how we need to get better at it. It&amp;#39;s true. We should. The thing is that we have a really small team actually. People don&amp;#39;t realize we&amp;#39;re still less than thirty people on our team. It&amp;#39;s little. We don&amp;#39;t get to do the stuff that we think is the most fun as much as we want to because we&amp;#39;re always tied up doing twenty other things. Which you&amp;#39;re very experienced with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Well yeah. Sometimes we&amp;#39;re taking out the trash.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I did that earlier today.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Thank you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; You&amp;#39;re welcome. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I&amp;#39;ll give you five hundred &lt;a href=&quot;http://www.btcsatoshi.com/&quot;&gt;satoshis&lt;/a&gt; later. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Don&amp;#39;t play into the satoshi inflation. I was kidding. Yeah. In terms of internal hackathons there are a couple of things that we&amp;#39;ve been talking about doing. Yeah. Hopefully we&amp;#39;ll get to some of the fun group projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; At one of the internal hackathons, we built &lt;a href=&quot;/2014/12/17/warsting-a-wifi-scanning-sword-for-hobbits/&quot;&gt;Warsting&lt;/a&gt; actually.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yeah. During that one we built Warsting and this Photon counter. Which is this giant seven segment display over one of our windows, that shows how many Photons have been sold. Oh. Yeah. Actually we&amp;#39;re talking about sending a team to the TechCrunch Disrupt Hackathon. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I was just talking to Steph about that earlier today. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. Actually entering our own team as well as doing some sponsorship. I&amp;#39;ve been talking about doing that for a while. I think it&amp;#39;d be fun if a group of us, just for fun, went to hackathons and helped out the other teams. Also it&amp;#39;s something really cool that we&amp;#39;ve been thinking about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I would like that. I feel like it&amp;#39;s a good opportunity to just hangout as a team as well and do team bonding. A comment on the Photon counters. After the last Particle Interaction with Will, we had gone over all of the different-- I don&amp;#39;t know if you were here for this-- We had gone over all the different reposts that people can submit pull requests to. How you can actually go into them, check it out, see how it&amp;#39;s built and change things. Somebody who I will not name, but who knows-- Yeah. Okay. He actually commented, &amp;quot;The Photon counter was really easy to set to whatever I wanted.&amp;quot; It was Alex. Alex went in and set it to a random number. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Is he the reason I&amp;#39;m seeing weird numbers now?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It was amazing. We loved it. It was so funny. I was really pleased that someone was watching.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Well it&amp;#39;s one of those places that we don&amp;#39;t really spend security time on. I don&amp;#39;t really care what number you put up, as long as you can&amp;#39;t reprogram the device. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I would really like it if somebody would actually send us messages. You send out messages through the Photon counter and just be like, &amp;quot;What&amp;#39;s up?&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That would be kind of interesting. &lt;/p&gt;

&lt;p&gt;“Do we still have a giant L3D cube from Maker Fair?” Yes. Kevin answered that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. We do have the monstrous &lt;a href=&quot;http://lookingglassfactory.com/&quot;&gt;L3D cube&lt;/a&gt;. It is beautiful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It is very large. It is so cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; It&amp;#39;s four thousand ninety six LED&amp;#39;s. RGB LED&amp;#39;s. Multiply that three for the number of channels and it&amp;#39;s just sick. Yeah. We do actually need to find a better place to put it. Right now we have it in a hallway. Yeah. We need somewhere nicer for that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. We&amp;#39;re probably going to change offices as soon. Were in such a big transition period right now in terms of physical locations. I&amp;#39;m hoping that in our next office they won&amp;#39;t have to move the furniture around the conference room to do this every time. We&amp;#39;ll see. It will be exciting.&lt;/p&gt;

&lt;p&gt;“It was a different number every second - Alex.” Talking about what he did to the counter. The great thing about when we discovered that the counter was hacked is we were looking up and we thought that maybe there was just something wrong with it. We were like, &amp;quot;What happened?&amp;quot; &amp;quot;Why does it keep displaying weird numbers?” We kept resetting it, trying to figure it out. We&amp;#39;re like, &amp;quot;Oh. Oh okay. This is what happened.&amp;quot; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It was the greatest. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Yeah. Let me tell you guys the greatest accidental prank that I have heard recently from a Photon user. I was looking at a thing someone had built. Let me pull this apart again. They had a little light sensor. Actually the one that comes with the Photon kit. It&amp;#39;s plugged into A0 just like normal position. It totally makes sense. They&amp;#39;re doing an analogue read on it, bad data. Just couldn&amp;#39;t get it to change. They&amp;#39;d put some wires in differently and try to pull it to three point three volts. They get the maximum value down to the ground to get zero. Nothing. They said that it was working yesterday and all this other stuff. I&amp;#39;m probing with a multi meter. I&amp;#39;m hooking it up different ways and I&amp;#39;ve got it jumpered to another circuit. I&amp;#39;m like, &amp;quot;Well let&amp;#39;s connect directly to the Photon and see what&amp;#39;s up. Let&amp;#39;s just make sure that there&amp;#39;s no bad connection problem with the header or anything.&amp;quot; I pull it out and the header is in here pretty tight. It&amp;#39;s actually a little bit difficult to work it out because it should be like that. &lt;/p&gt;

&lt;p&gt;When I pull it out, it slips out easily like it&amp;#39;s just not even in. I&amp;#39;m like, &amp;quot;Oh.&amp;quot; &amp;quot;That was a little bit odd. I wonder if they got a button with badly soldered headers or something.&amp;quot; I look at it and the header pins in the Photon are shorter. They&amp;#39;re about half the length. For some unknown reason these people had cut the header pins shorter. They had cut the header pins down for some other thing that they were trying to fit it in or do something with. It wasn&amp;#39;t making any contact with the headers and it was just totally invisible. They basically short sheeted a Photon on me. So, just, do it to your friends. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That would be a pretty mean prank. If I just did that to all of your internet buttons when you were looking.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Please don&amp;#39;t. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I won&amp;#39;t cut all of the pins. I&amp;#39;ll just cut a couple of random ones. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Just some of them. Just so like my accelerometer stops working or something.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Just a couple.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh my God. It took forever to figure out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That&amp;#39;s fun times. Yeah. These are good little buttons. I hope that people do more projects with the internet buttons so that I can play with them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I hope that people do things with the tins that they come with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I still think that looks like a candy tin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I know. I understand that that&amp;#39;s your childhood.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I like it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. I really like the little matchboxes for the Photons. I really want us to be creating packaging that people use for other stuff. It&amp;#39;s not just junk. You use it to carry your device around later or to put parts in or to do something with. Stuff that&amp;#39;s not just garbage. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I like this. It feels strong. It feels lightweight. It has a little clear front panel. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. The window is really nice. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Kevin wants to know if you can offer advice for someone wanting to get into IOT or Particle, what advice would you offer?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Hmm. [Reading responses on the screen.] Yep, exactly Alex! My current advice is get going with the button. That&amp;#39;s really what I designed it for. It&amp;#39;s easy for other people to get started, especially when you&amp;#39;re using the library. The library abstracts a lot of the more complex functions. It has neopixels, but instead of making a bunch of the neopixel calls-- there&amp;#39;s usually several function calls you need to make just to turn the LED on. But with the button you say, &amp;quot;LED on, which LED and what color you want it to be&amp;quot; and it just goes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; What do you think is the next step after the Internet Button? Is there going to be an internet button&amp;#39;s older sibling kind of thing?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. That&amp;#39;s interesting. We got a couple of questions about if we&amp;#39;re going to make an internet button for the electron. That&amp;#39;s tough because the electron is seven pins longer. It&amp;#39;s a much bigger thing. About fifty percent again longer than the Photon, which would make a very large button. I don&amp;#39;t know. I&amp;#39;m thinking about that a bit. After these have been out in the wild for a little while, I&amp;#39;m sure we&amp;#39;ll get some really good suggestions about changes to make. Next generation button is up in the air. Let&amp;#39;s see.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Garrett wants to know if this is UV protected. If you could just put it in like a solar panel and see it? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I don&amp;#39;t know. I actually don&amp;#39;t know what plastics being used there. I couldn&amp;#39;t tell you. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It could be fine. You should test it, Garrett. Let us know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. It makes a pretty good seal when you screw it down. Yeah. Kevin says, &amp;quot;More LED&amp;#39;s.&amp;quot; The reason I didn&amp;#39;t put more is that the eleven RGB LED&amp;#39;s, the eleven neopixels at full brightness stayed just below-- plus the Photon and Wi-Fi-- It all stayed just below the USB standard for power consumption. You won&amp;#39;t have your computer complaining if you&amp;#39;re powering it off of your USB cord. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. I didn&amp;#39;t know that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. That&amp;#39;s one of the reasons that it&amp;#39;s the number it is. Also because clock positions, then it&amp;#39;s easy to talk about. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. That&amp;#39;s a funny idea. Garret says, &amp;quot;You should make a giant Internet Button kind of like the giant Spark Core,&amp;quot; which is outside. I&amp;#39;ll put a picture of this in the blog post if I can find one. We have a giant core that used to be used at demos and events. Where people could light up the different pins on the core which are represented by light bulbs.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/giant-core.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah, with these big Edison bulbs. It&amp;#39;s run off of four relay shields. It&amp;#39;s pretty funny.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That would be a good idea if we had a giant internet button. A Frisbee-sized internet button that you could just-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Oh. Frisbee-size is great. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That would be hard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; If it were the scale of the giant Core, it would be out of control.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; I like things that are easy to move. That giant Core is big enough to be a pain. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Oh. That&amp;#39;s a really good question. “Will the electron be sold as a separate module like the P1?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; That&amp;#39;s a good question Edward. It will not because the electron doesn&amp;#39;t have all of the components in one can. The P0 and P1 have both the microcontroller and the radio in a single component. With the electron it&amp;#39;s more similar to the design of the core, where there is a cellular module and a microcontroller separately. It&amp;#39;s a little tricky. It also means that the component count... Especially the things like the SIM card slot is higher. We could make the single sided board like we did with the Photon. For the immediate future electrons are going to be pretty much just plugged into sockets only. We&amp;#39;ll of course put you in touch with the suppliers if you want to buy all the components. You can make your own using our designs. You can take our eagle designs, drop them into your PCB and that&amp;#39;ll work great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. We&amp;#39;re at about 5:00 now. Usually that&amp;#39;s as much time as I take up. This was really fun. You should come back and talk to the community again. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yeah. I&amp;#39;ll talk to us. It&amp;#39;s really odd because what we see is live stream of ourselves on the laptop below the camera. Which is why I keep making eye contact with the wrong place because I&amp;#39;m looking at us, instead of at the camera. I was having that conversation with our doppleganger selves, slightly out of phase. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Let&amp;#39;s do that again. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dick:&lt;/strong&gt; Yes. Okay. Future selves, past selves.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Okay. See you next time future selves/entire community. Have a good one.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Particle Interactions: Sprint 41 with William Hart (Transcript)</title>
      <link>http://spark.github.io/staging-blog/2015/08/17/particle-interactions-sprint-41/</link>
      <pubDate>Mon, 17 Aug 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/08/17/particle-interactions-sprint-41</guid>
      <description>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/JnI2VjXEAiU&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Hi. Hi everybody.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Hello.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We are here on this opening up to talk to Will, the Head of Manufacturing and Hardware at Particle. He is an excellent fun person.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, I am hoping that this is working again. This is the second time we’ve done this. Hopefully, it will work. I think there is a little bit of a lag so it currently says that live stream is still starting in the other channel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Here we go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Will, why don’t you tell us a little bit about the world of hardware at Particle and what the next six months are looking like?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Sure. To really know where you’re going, you have to know where you’re from. Just a recap for everybody out there. Our first product was the Core. That was our first generation Wi-Fi kit. We shipped that at the end of 2014, I guess it was. The product we’ve been shipping out the doors over the last few months has been the Photon, which is the second generation Wi-Fi dev kit. It’s like the sequel to the Core in a lot of ways.&lt;/p&gt;

&lt;p&gt;We really focus on Wi-Fi. Going forward, we’re looking to expand the impact that we can have with respect to building connected devices, and not all connected devices are Wi-Fi devices. Up next, we’ve got the &lt;a href=&quot;https://www.particle.io/cellular&quot;&gt;Electron&lt;/a&gt;, which a cellular dev kit. Then, we launched &lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-electron-cellular-dev-kit-with-a-simple-data&quot;&gt;a Kickstarter for it&lt;/a&gt; back in the early part of the year and that is in just super active development right now and it’s something that we’re really, really excited about. We’ve been spending a lot of time and energy into solving all the different challenges that cellular has that Wi-Fi doesn’t have.&lt;/p&gt;

&lt;p&gt;Then, going forward, after that-- we always have a plan but it’s always a rough plan, because we always like to respond to new things as they come up. We’ve been doing a lot of investigating into things like Sub-GHz communication. Is it possible to attach a really, really cheap little node to the Wi-Fi or the cellular development kit so that it can communicate with other devices that have that radio on, and you can really increase the breath of your fluid of devices by having a bunch of sensors that all talk to each other, and then a single device connected to the internet that can relay it all back.&lt;/p&gt;

&lt;p&gt;That’s it right now. We haven’t committed to anything beyond the Electron but at the sides, continue to improve the Wi-Fi and cellular development kits. In the future, we’ll also be tentatively exploring other ways we can improve the wireless ecosystem of Particle’s platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Very cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, it’s cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That sounds really exciting, Will.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, it is exciting to all of us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Do you want to tell the folks at home a little bit about the day-to-day of Will?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Sure. Day-to-day, Will is divided into two different Wills. There is the Will that you are speaking to right now and then there’s China Will, who is a totally different Will and has totally different jobs. I will start with what I do in China because that was my first job at the company. I was basically the on-the-ground China guy. Every time we develop a new product, there’s a lot of work that needs to be done whether it’s sourcing, new packaging, or little things like breadboards and accessories, or electrical components for all the new dev kits and shields that we make. A lot of sourcing stuff going on, a lot of talking with manufacturers to improve existing production, solving problems that come up during manufacturing which there are just dozens of every single time you try to make something. Building out our supply chain. Key partners, a lot of them do manufacturing and distribution in China or around China. Having those kinds of relationship-building meetings. Then, just like, stuff with my hands. A lot of it is building prototypes, building test fixtures. Every time I go, I usually have a day or two where it’s just maybe 16 or 18 hours of straight-up assembly, usually before my flight to try to finish it all up. That’s China Will.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/will-assembly.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Then, United States Will-- which is who I am right now-- has a lot of the same concerns but has a very different workload in the US. It’s a lot of emailing and more project management instead of execution. Having to do things like building schedules, working with our hardware team, the firmware team in the US, India, and Norway, and then also with our hardware team and manufacturing team in China to make sure that all the pieces are getting pushed forward at the right speed so that when it’s finally time to manufacture something, we aren’t surprised and don’t suddenly have something that’s not ready to go. A lot more coordination and a lot more just management stuff. I like them both in different ways, but they’re definitely really different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, sounds different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, super different. Less lead in the US. More lead in China, prototype assembly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. You’ve been with the company for a while. You actually went through an accelerator in the past with Zach, and Zachary (Doc), and Steph was involved too around that time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yes, she was deeply involved. She was United States Stephanie. She never developed a Chinese alter ego yet but maybe one day, we’ll get her there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You’ve basically helped manufacture and ship two of the boards. What are some of the challenges of manufacturing and shipping a product?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; There are a lot of them, and I even struggle to try to describe them in any broad sense because one of the interesting things about manufacturing is that the problems are just so different every single time-- and hopefully they’re different because you learn something from the last run, the last time you did it, and carries those lessons into the next time. There’s never going to be no problems-- that’s really just unrealistic. But there can be fewer problems, and there can be problems that aren’t as serious.&lt;/p&gt;

&lt;p&gt;I think we have done a pretty good job of waiting these super serious problems and ones, I am talking about recalls. It is like, “No product recalls, great. No exploding batteries,” or anything like that because that happens. It’s crazy. That happens. It happened to-- not related to hardware but-- it happened to Dropcam a couple of weeks ago. They recalled the whole bunch of hardware that had been borked over the air-- our stream ended.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; The stream ended. The literal stream ended. Netflix is saying you should watch the Wet Hot American Summer show. That’s probably a good recommendation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I’ll just do that one again.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Starting over. That sounds good. Yeah, we had a fire last time but it’s sweltering in here so we thought it would help to have a cool stream instead. There’s flowers too, you can watch flowers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; All right, we will watch flowers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, flowers sound good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Wow, that’s great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Subtitles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Subtitles—“Birds Chirping.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Okay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Okay, so you were saying?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I was saying, just a lot of different kinds of problems. They range from organizational problems-- like most recently with the Photon, we had a miscommunication over parts with our contract manufacturer. This was like a management and purchasing error by our contract manufacturer that was unavoidable in a sense that there’s only so much you can do to confirm that your partners are doing their job. At the end of the day, your manufacturing partners are also just people and they make mistakes.&lt;/p&gt;

&lt;p&gt;An example of the Photon is like... There’s a certain part. I can confirm that it’s purchased. Yes, it’s purchased. Then, when the part doesn’t show up, and you go back, and you check, you say, “Actually, that part never got purchased from a correct distributor.” It can be just communication things. When you’re doing manufacturing in China, you have to watch out for quality. It can be inconsistent even if it’s not intentionally bad.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/core-reversed-headers.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Packaging is one where quality often times on first runs is really all over the place. Scattershot. Where 30% of the items in a production run from packaging may not be just packed. Even after golden samples have been approved, even after you have clear communication, in first runs, things go wrong. Sometimes, it’s just things turn out wrong.&lt;/p&gt;

&lt;p&gt;Sometimes, it is scheduling things like delays are caused by manufacturers who have availability this week but then, they have other customers who are using their equipment. It gets locked up and they don’t have the ability to schedule you into the time that you want to be scheduled into. It’s all sort of problems. Actually, I say it all the time, this is a working analogy, and actually, it’s a good time to put on my captain’s hat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Captain Will.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I think of manufacturing is a lot like trying to repair a boat that is racing around the world while it’s on the water. Which is to say that our supply chain has leaks in it, as does everybody’s. And the challenge is you can’t just stop the boat. You can’t just pull it up on to the land and spend three months working on it. You have to keep going. There are going to be issues, and you have to figure out how to plug them up, and patch them up while there are just new ones that are exploding all around you.&lt;/p&gt;

&lt;p&gt;It’s a lot like that. It’s a lot like trying to deal with issues that pop up and some of them are really easy to deal with, and some of them are not. And maintaining this longer term perspective of we need to be slowly improving things over time, we need to be making decisions that don’t increase our manufacturing risk. We need to make sure that at the end of the day, the thing that we’re delivering is something that we’re proud of and that we can stand behind.&lt;/p&gt;

&lt;p&gt;It’s complicated. There are a lot of different kinds of challenges, but that’s what keeps things interesting, frankly. It’s all the different headaches that you run into along the way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, even when you’re dealing with all this stuff, you come into the office, and you’re very like chipper and lighthearted about it. It must still, on some level, be fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, it is fun. China Will is a little bit more temperamental, you could say. He gets frustrated more easily but that’s usually because I am hungry more than anything. But yes, I would say that you have to have a good attitude. Actually, one interesting thing is that when things go wrong-- because things have gone wrong so often, you don’t freak out right away. It’s not like, “Oh no, something went wrong.” It is like, “Okay, another thing went wrong. What is it? Let’s figure it out and get to the bottom of it.”&lt;/p&gt;

&lt;p&gt;It is a good training for crisis management because it allows you to quickly resolve issues. It teaches you got to quickly resolve issues and also gives you the experience to basically project which things are going to become problems if they’re not dealt with right away. That’s actually a lot of what I do too, is preventing future problems from happening.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. It sounds like you’re very busy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; As we all are.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; As we all are. That’s a lot of information about how to ship a product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, sorry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; No, it’s great! But if you could give one piece of advice to some of our young product creators out there who are maybe very much like Will from several years ago, what would that be?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; The one piece of advice that I would give is to not be intimidated by the concepts and the challenge of manufacturing. Which is to say that I know a lot more than I did three years ago, which is in the context of things still not even that much. But there are very few things in terms of education and an occupation that can prepare you for manufacturing anyways. Even if you know nothing, you’re more or less as prepared as anybody else to just jump into it and learn a lot. Me, for example. I really had no idea what I was doing. As a part of that sentiment, don’t be intimidated by it, not because it’s not scary but because like, hey, that’s the best way to learn. By jumping in.&lt;/p&gt;

&lt;p&gt;Also, it means that you don’t necessarily have to hire an expert. It’s good to have informed opinions to help you learn. We have had tons of advisers that are way more experienced than we are who help shape our opinions on things, but you shouldn’t assume that you can’t do something. In fact, you being involved in the manufacturing process as hands-on as possible is the single best way to make sure that the thing you want to build turns out the way that it looks in your head.&lt;/p&gt;

&lt;p&gt;For you to be individually involved on the ground, talking with people and helping to make that happen, because just all these little things that can take it off track for good reason or for bad. Being hands-on, involved, and an active participant in your development and manufacturing process is a scary thing, but something that product creators can do and can learn how to do even if it’s not your background.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, that’s my advice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s good advice, Will.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Thanks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I also wanted to talk about the new docs because we released GitHub, and I know that you’re involved in this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I was.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You were a big part of this whole How To Build A Product section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; How To Build A Product, right.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Some people on here have been asking if we can show them how to contribute, not just to the docs, but to other repos for those who are unfamiliar with &lt;a href=&quot;http://github.com&quot;&gt;GitHub&lt;/a&gt;. Will, I know that you use the &lt;a href=&quot;https://desktop.github.com&quot;&gt;GitHub GUI&lt;/a&gt; (Goo-ey).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yes, the GUI. A lot of people out there on the Particle team are very good. They’re engineers. They’re very good at active development. They contribute to our repositories many times a day. They’re good at command line things, and their text editors are mostly neon colors and have lots of paints that are separated and don’t have a lot of regular words in them. I don’t consider myself in that category although I am familiar with the command line tool. One thing that has improved my ability and my comfort with contributing to our open source stuff is the GUI because it’s a really good one. We’re going to show you how to use it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, let me do a screen share here. I think that I have closed all of the things in my screen might be distracting. Let me just close this. iMessages, yeah, I should close that. Quicktime recording.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; All the things you mean.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; So, not nothing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I removed some of the things. This is a Quicktime recording of Will and Christine narrating the &lt;a href=&quot;https://www.youtube.com/watch?v=-sP5hn6VDgE&quot;&gt;Electron video&lt;/a&gt; to test the microphone. Close that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; You guys were not kidding, it gets warm in here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It does. I know, this is a big problem last time. Ok. I can just share the GUI but I am going to share the entire screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I’m worried that this [flowers video] is distracting for people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Maybe we should switch to a different interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Let’s switch back to the water.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, let’s go back to the water.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; The water was nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; The water was really great. Here’s GitHub.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Cool, yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; All about GitHub. You can download the GitHub app which I actually already have it. I am not sure how one does that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Look at that, the new GitHub desktop is now available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; New GitHub, yeah. You click on this if you don’t have it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It gives you a bunch of information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It gives you an explanation, yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; We’re also going to give you some information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You can download it here if you want, &lt;a href=&quot;https://desktop.github.com&quot;&gt;desktop.github.com&lt;/a&gt;, cool. The first thing will be a little bit more complex than the second thing. I am going to go over this, which is super easy. This is when you download GitHub desktop. It’s going to actually have a little tutorial that you can walkthrough that’s probably going to tell you exactly how to do what we’re going to show you right now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; We’re just going to show you the actual repositories that we use for determining the documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Let’s say that you want to do something with docs. Let’s say what you would actually want to do is first go here, &lt;a href=&quot;http://github.com/spark&quot;&gt;github.com/spark&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; &lt;a href=&quot;http://github.com/spark&quot;&gt;github.com/spark&lt;/a&gt; which is...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It’s still Spark because it will take some more to change everything over to Particle and that’s a pain. We’re waiting until we have a little more latitude to do that. Let’s see. You can see, for example, &lt;a href=&quot;http://github.com/spark/firmware&quot;&gt;firmware&lt;/a&gt;. Somebody asked to go through these repositories. Firmware is obviously for firmware. Other ones that you might want to know about like &lt;a href=&quot;http://github.com/spark/docs&quot;&gt;docs&lt;/a&gt;, which is what we just built for the new documentation. There’s a couple of libraries you might see scattered through here such as &lt;a href=&quot;http://github.com/spark/InternetButton&quot;&gt;InternetButton&lt;/a&gt; and &lt;a href=&quot;http://github.com/spark/RelayShield&quot;&gt;RelayShield&lt;/a&gt; that are actual official Particle libraries for these shields.&lt;/p&gt;

&lt;p&gt;There’s also the &lt;a href=&quot;http://github.com/spark/electron&quot;&gt;Electron&lt;/a&gt; which is right now hardware files. Also Particle Dev which is listed currently as &lt;a href=&quot;http://github.com/spark/spark-dev&quot;&gt;spark-dev&lt;/a&gt;. These are all open source. You guys should definitely come in, and play with them, and make pull requests the way that we’re about to show you. There is two sections for iOS and Android. If you search iOS, oops that’s the wrong place. Let’s &lt;a href=&quot;https://github.com/spark/?utf8=%E2%9C%93&amp;amp;query=ios&quot;&gt;search iOS&lt;/a&gt;. You can see we have these three iOS repos, one for set up, one for the SDK, and one for the Tinker app. You can actually create or edit these if you see fit. There’s also one for &lt;a href=&quot;https://github.com/spark/?utf8=%E2%9C%93&amp;amp;query=android&quot;&gt;Android&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, I know it’s so great. There’s a bunch of them to be aware of. I will do &lt;a href=&quot;https://docs.particle.io/guide/getting-started/contributing&quot;&gt;a little write up&lt;/a&gt;. There’s so many here. There’s the &lt;a href=&quot;http://github.com/spark/particle-cli&quot;&gt;CLI&lt;/a&gt; right here. I’ll do a little write up of stuff that could be helpful to know in terms of places where people can make contributions and I’ll put it on the community. There’s &lt;a href=&quot;http://github.com/spark/sparkjs&quot;&gt;spark-js&lt;/a&gt;, otherwise known as ParticleJS, the JavaScript SDK. This is the &lt;a href=&quot;http://github.com/spark/PowerShield&quot;&gt;PowerShield&lt;/a&gt;, which is one of our internal libraries that we were just talking about. This (&lt;a href=&quot;http://github.com/spark/spark-server&quot;&gt;spark-server&lt;/a&gt;) is the local cloud. People ask about this a lot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It is spark-server local cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, spark-server is local cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; This is the &lt;a href=&quot;http://github.com/spark/photon-counter&quot;&gt;photon-counter&lt;/a&gt; that sits in our office that counts how many Photons have been sold. Hypothetically, you can make a pull request to that if you want.&lt;/p&gt;

&lt;p&gt;All right, back to GitHub. I want to edit the docs. I am going to go back over here to the repos. &lt;a href=&quot;http://github.com/spark&quot;&gt;GitHub.com/spark&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-1.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I am going to go to the &lt;a href=&quot;github.com/spark/docs&quot;&gt;docs&lt;/a&gt; because that’s the one that I want to edit.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-2.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You can see here, this is just a list of all the files that are here and you can navigate through this. There’s also a section that’s just current pull requests and issues. You’re welcome to create issues if you see something that’s wrong.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-3.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You can say “new issue.” Title: This is an issue...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; &amp;quot;...Christine isn’t wearing a hat.&amp;quot;&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-4.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; &amp;quot;Christine is not wearing a hat and that makes me sad.&amp;quot; All right, submit new issue. You can see that this now appears in this listed issues. It has the name of the user which the name of this user is &lt;code&gt;hunterthedog&lt;/code&gt;. That is our mascot in the Spark house, Particle house, Particle loft. I don’t know what we call it these days but anyway. Now, you can go back here and you can actually see this issue was created, and it’s sitting here. These issues are looked at and reviewed by people on the Particle team. You’re welcome to do that, and go back to docs.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-5.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now, I am going to say that I want to fork this guy. This will actually create a copy of the entire docs repo in my GitHub accounts and I can see there’s now a fork for hunterthedog in docs living in hunterthedog’s GitHub. I think actually if I click on this, I can see where all the forks are, right? Yeah. You can see I have fork of docs here. I also forked firmware earlier as a test. I can show you guys that later. Here, I have forked the docs.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-6.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now, I can say clone in desktop. It’s going to say, “Hey, you want to open your GitHub on desktop?” and I say, “Yeah, I’d love that.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Launch that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now, I can save this. I created a little folder called git-test so I can clone the docs into there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. Now, it’s going to do that and it’s going to take a little while to clone it. While we’re doing that, I am going to switch it back to... I was going to switch it back to the regular camera, and we can talk about other things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We can go back and check on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Part A and part B.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; What I should actually instead, hold on, back to screen share. What I am going to do instead is I am going to show you how to do this process super, super fast. Let’s say that I just wanted to make an edit and I don’t really care about forking this or anything like that. Then, I am just going to go to Spark. I am going to say, this thing in the docs, I really want the page on... I am navigating here which is probably going to be confusing for people. Just go to the docs, docs.particle.io. Let’s load that. Let’s wait for that to load. Here it is.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-7.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s say, in Getting Started, I really don’t like this exclamation point. It scares me so I am going to edit and wow, it’s going to just automatically open this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-8.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now, I can actually just do an edit in my own fork of this project. It will create a fork as well if I don’t have one. Now, I can go down and say, “Hey, here’s this caption here. It’s the exclamation point I don’t like.” Now, I can put a period instead of an exclamation point.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-9.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, it’s better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Then, I should definitely say what I did because otherwise, the people at Particle would be like, “What did you do?” I don’t want to use that so I can say, “Removed exclamation point. That exclamation point is too enthusiastic. Also this is a test PR and do not have to merge it.” Propose file change.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-10.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Boom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now, that’s automatically going to propose that file change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That is cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I can actually create this as a pull request also.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Pull request, Christine. Now, what is that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; A pull request allows us at Particle to review all of the changes that you’ve made. It’s like you can comparing your fork with our actual docs repo. Then, we can look and say, “Yeah, you would like to put this as the real changes now. Let us go through that and see if that’s a good idea.” Then, we can comment on your pull request if you want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; We can talk about it.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-12.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; We can talk about it. You can leave a comment saying...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow, that is great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; “Hey, I like puppies.” Really, you shouldn’t comment random things. You should probably comment things that are relevant to your pull request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, there it is.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-11.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; There it is. All right, let’s go back to the GitHub app and see if that [repo cloning from earlier] is done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It’s working.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. You can see that this has now been added to your little space on GitHub, and this is hunterthedog’s...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Fork.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Fork, yeah. Where did I put this? Let’s actually go. Under git-test, I have this little folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; You’re going actually, to be clear, to a folder on your computer where that fork was downloaded to your computer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; This is a folder on your computer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You’ve chosen where to put it. I chose to put it in git-test in my home folder but you could really put it anywhere.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You could put it on the desktop, you could put it in your bin, you could put it wherever you want to. You could imagine that this is especially useful for things like firmware or stuff where you might actually want to play with, test, and make it your own, and then push all your changes back to the master branch. Let’s make that same change here. We’ll make the exact same change. That’s going to be in content: src &amp;gt; content &amp;gt; guide &amp;gt; getting-started &amp;gt; start.md&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-13.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Here, we’re going to open this guy. It’s going to open in my text editor. I highly suggest using a text editor like &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime&lt;/a&gt; or &lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Or &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Or Atom, yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That is what I use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You can see here, here is the same exclamation point. Let’s change that to a period. Here’s the GitHub before.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Save that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I am going to save.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-14.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Boom, and now it’s like, “Hey.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Doesn’t know?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Second one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; You check out that little period.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; See, it knows. Now, this is great because it will actually show you the difference between before and after. I can say...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; The same summary in here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, took out the...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Exclamation point.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Exclamation point.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-15.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Then, I can commit this to master. And keep in mind that because this is a fork, you can see it’s in hunterthedog/docs. It’s going to be committed to master within my version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; The fork, right.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Not within Particle’s master.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Not within Particle’s master.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Then, when you do that...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Right. Now, this has been added there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Boom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I can say pull request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Hey, I want to pull request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Hopefully, that ends up working.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Hypothetically that should work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Usually, what you’re going to see is basically the description of changes between our version, our master version and your fork of that repository. Then, you can submit your pull request through the desktop application here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. Anyway, that should be how it works. Also, if you follow this little tutorial, they’ll tell you how to do the exact same thing. It’s really super nice. This is just doing it for our stack specifically. In any case, here we go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah. Now, we’ll be able to do it. There it is.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pi-docs-16.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Look at that. Now, I can say, send pull request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; You get a nice little illustration at the top of the page about when you forked it and how many commits there had been to the master branch, the Particle master branch before you try to remerge it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; This is the Particle version of it. Then, we forked it here. Now, this was ours. Then, we made this commit. Now, we merge it back in. This is a dotted line because it hasn’t happened yet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It hasn’t been approved yet. Moral of the story, you don’t have to be a command line master or a program wizard to participate in the open source community. How about that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s pretty exciting, Will.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That’s pretty neat. Thanks to the nice folks at GitHub...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; At GitHub.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; ...for doing great work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; All right, cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now, that’s really exciting there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It was nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Now, we’re at about 4:30, and this is usually the time of the interview where I like to take questions from everybody out there in the audience. Let’s see if anybody has written anything. Let’s see. Alex Swan is here. He’s a cool person. He did the hamster thing, the hamster fitness tracker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, it was so exciting. Dr. Zachary Crockett is here. California State flower, just showing on the screen there for a moment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It is nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Okay. Alex had a question about WarSting. Can we get it updated to work with the Photon? The Wi-Fi scan library is not currently functional. As an alternative, the suggested/hinted Wi-Fi scan function would also be great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That is a great suggestion, Alex. And—oh. That is exactly what Zachary Crockett, our CTO, said. I agree that that is a great suggestion. Sure, why not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I think that sounds great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I think that sounds great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; This is actually a great question for Will too because Will did the WarSting video.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah. I did. I did. Yes, I’m not exactly sure what the current status of incompatibility is, so we’ll look into it. We will, yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, that sounds great.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Great suggestion, Alex.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see what else. Yes, I can wait for my questions. In the meantime, know any good jokes, Will?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Oh my, gosh. I was just talking about how I’m the kind of person who doesn’t have a bunch of jokes, just like sitting around. Man, I know you do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I have some jokes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; You have lots of jokes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I have lots of jokes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I just don’t have jokes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I have a joke about-- Why did the scarecrow get promoted?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Why did the scarecrow get promoted?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Because he was out standing in his field. I kinda like it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That’s a really good joke.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I think it’s funny.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That’s a tremendous joke. Wow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Do we still have any buttons here. I was going to ask you to talk about the packaging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Sure. I’m sure we have one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let me get it there over there. I’ll be right back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I’ll just hold down the fort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You should hold down the fort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; See if I can find any...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; There’s so many things in the closet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; See if I can find any additional comments. I’ll field this one just while we’re waiting for buttons to be found which is...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I found the thing that it used to live in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Maybe they’re all gone. There should be one out in the main office.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I think I actually have one that I took for like dev purposes, something like that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; “Dev purposes.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. I think it’s a really cool thing with it. I built the doorbell. I used the Internet Button to make a doorbell where, depending on when somebody is coming home and how far away they are, it will play a theme song personalized for them. Let’s say that you are ten minutes away. Then, maybe it will play like one snippet of a song. As you’re five minutes away, it’s longer. Then, it plays the whole thing as you walk in the door.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That’s awesome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Then, your theme song is playing when you walk in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow. I didn’t even know you made that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I did. It was really exciting. I was actually going to make it happen for the Particle house. Good, more questions. What are the big hurdles for going from prototype to production, and how does Particle help?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; We talk about all this all the time which is that if there are 500 hurdles from going from prototype to production when you’re building a connected product. We try to help you solve as many as we possibly can. Right now, maybe that’s only 80 of the 500. Next year, hopefully, it’s 180 of the 500. But the things that we’re doing right now to try to help-- first of all, the infrastructure side, we’re trying to provide people with tools that you don’t have to start over with when you’re trying to go from that prototype to product. That’s one thing: providing tools that are continuously useful throughout that whole process.&lt;/p&gt;

&lt;p&gt;With the dev kits, we picked parts that you can actually get at scale. We pick parts that are low cost, that are really effective. With the modules, we provided radios so that the P0 and the P1-- modules are on the Photon-- we provided modules that you can actually buy at medium volumes, so that you don’t have to talk to some really, really large silicon provider or module manufacturer, and have to try to get special pricing, and you’re on delivery terms. We have them on stock, we can just sell them to you.&lt;/p&gt;

&lt;p&gt;The biggest thing that we always try to do is with education. And that’s part of the reason why we built the guide, the &lt;a href=&quot;https://docs.particle.io/guide/how-to-build-a-product/intro/&quot;&gt;How to Build the Product with Particle guide&lt;/a&gt;. It’s to just help educate people on the kinds of problems that we run into and the kinds of things that will make your life so much easier down the road if you’re a product creator. For us, the thing that helps in preparation for manufacturing, as I said, is just having people as resources that we can talk to and ask for advice. That is a role that we will play with anybody, frankly-- is drawing on our experience that we gained over the last couple of years to just provide helpful advice about common problems because, again, until you jump in, you really don’t know what you’re up against.&lt;/p&gt;

&lt;p&gt;The short answer to the question is that we try to help in any way we can and there are a lot of different kinds of challenges, and so it means helping out in a lot of different ways.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see, what else do we have? This is a question from Stephanie Rich. If you could go back to young Will right before he got on the plane to meet these guys in China, what would you tell him?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I ended up getting there but definitely to just embrace the craziness of everything, a lot of different kinds of craziness. There’ the craziness of working on a startup where your plans change all the time. The craziness of living in a foreign country where you don’t speak the language and have to learn it. The craziness of just the world of manufacturing where everything goes wrong and the best case scenario is expectations are met. To be comfortable with that and to not let it stress you out.&lt;/p&gt;

&lt;p&gt;I am the team worrier. Everything always makes fun of me because I have no nails left and I am always the one stressing about things and making plans just so that I feel better, not necessarily because anybody else needs them. Believe it or not, I have really worried less over the last few years rather than more, and I think a lot of that has to do with just embracing the craziness of things and becoming more comfortable not having the answer to every problem. I would give that advice to myself-- just to remember that it’s okay if things are stressful. It just means you’re probably learning new things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, that makes sense. Let’s see. We have a question from Alex Kushner. Can you talk a bit about how you guys coordinate supply chain challenges with the customers that are shipping products based on the Core, e.g. Luna, Cleverpet, etc.?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Sure. That’s a really good question. I think it’s something that we are trying to improve as we become a more mature company. Correct me if I’m wrong, but it sounds like the crux of the question is-- you run into problems sometimes, and there are people who depend on you to build products. So how do you go about coordinating or working together with customers who are shipping products with our technology inside of it to make sure that our problems don’t become their problems?&lt;/p&gt;

&lt;p&gt;It’s something that we’re getting better at. Communication is the most important thing, and that’s internal and external communication. Internally, we need to make sure that everybody has the most recent updates about manufacturing, about what’s going on, the challenges we’re running into. Externally, with our customers, it means setting expectations and hopefully consistently exceeding those expectations instead of consistently disappointing them.&lt;/p&gt;

&lt;p&gt;I think that that’s something that we can continue to get better at as a company-- continually striving towards transparency is important, but also continually striving towards consistency and making sure that the things that we’re communicating are aligned, and that there are very clear expectations set up at the beginning of a relationship with the customer who is a building a product with our technology. The things that we promised to do for them and the things that we will do in a situation where things don’t go as planned, the things that we will do for them to make it right. I think that’s something that is really, really important to us-- customer happiness and making sure we’re doing everything that we can to support people who are building products with our stuff.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s a good answer Will.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Thank you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Alex has noted: “Particles IRC was dead last time I hopped in. Maybe a public slack channel would help the Particle dev community to communicate.” Alex Swan, I am so glad you brought that up because I’ve been thinking the exact same thing. Keep an eye on the community in, I would say, the next week or two. I’m going to try and do a thing. We’ll see. What else? Garrett Bartley, one of our wonderful Elites, is asking, “How did you get into Particle (formerly Spark)?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; This is a funny story actually. To me. I hope it’s funny to you also. I was at graduate school, and I was looking for a job. I thought I wanted to be a design engineer. I thought I wanted to sit behind the Solidworks desk and just do that all day because that was really cool. But it turns out that in order to apply for a design job, you need a design portfolio, and my first question was, “What’s that?” It turns out, a design portfolio is basically like a nice little presentation of all the stuff you’ve worked on, design stuff you worked on. I didn’t have that because nobody at my school told me I needed that to do that job.&lt;/p&gt;

&lt;p&gt;I was taking the summer to build it so that I could apply to these jobs. In a moment when I was not working on my portfolio, I was on Facebook and-- I knew Zach previously because we were both in the same singing group in college funnily enough. He posted about the Kickstarter campaign for the Socket which I saw because it showed up on my newsfeed because we were friends. I went and checked it out, and thought it was really cool. Then, at the bottom, I still remember this, it said, “If you’re interested in joining our team, just send us an email” or something like that. “We’re always looking to grow out team. If you’re interested in Spark, send us an email.”&lt;/p&gt;

&lt;p&gt;I was like, “I will.” I was like, “I got all these job applications out. One of them is going to work out, but I might as well just send another one.” I was looking for jobs. I started doing some modeling stuff for the Socket which of course never existed beyond the Kickstarter that we did for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; &lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-upgrade-your-lights-with-wi-fi-and-apps/&quot;&gt;The Socket&lt;/a&gt; was the original idea for Spark as a product. It was what we now call the Spark Socket, which is a connected lighting system: a light socket that you would screw in, and then screw the light bulb into that, and then it would allow you to control your lights from anywhere and also preprogram them. Eventually, the early Particlites realized that it was going to be a cool thing to just sell the thing that they are making to power this rather than the lighting system itself. Anyway, that’s the background on that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I emailed Zach and was getting involved a little bit with the mechanical side of the socket. Then, they got accepted into the HAX, into the incubator program and he was basically like, “Hey, you want to come?” I was like, “Sure. Why not? This will be weird, and fun, and crazy but why not.”&lt;/p&gt;

&lt;p&gt;I still remember showing up at the airport meeting with Zachary and Zach. Then, even in the first couple of days leading up to it thinking, “We’ll see how this goes. Then, afterwards I can make a decision of whether I want to do this.” Honestly, within a week of being there, I felt like I was a part of the team and I stopped saying things like, “What are you guys planning for the Socket after this?” and started saying things like, “What are we going to do after?” It happened really quickly. That’s how I joined the team because I was an intern at that time. After that, I got a job offer. Yay!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yay!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah. I’ve just been doing that ever since.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see, we have a question from Carston Dressler which is, “How did you get started with hardware?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I was a mechanical engineer when I was in school and had taken one analog electronics class. That is it. That is how I got started, by being really bad at electronics. When we were in China, I learned how to do electronics assembly and I was an intern. I was like the assembly monkey. Actually, Zach put together a ton of boards himself as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; What is Zach’s claimed record on Spark Cores?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I don’t even know if we should talk about it here. I don’t want to publicize it. But I think his claimed record is, I can’t remember, what was it? I think he said like a 100. No, no, no.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It was a large number in a small period of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It’s something like 50 Cores in a day. Which, you know, it’s a long time since we’ve done that assembly work and it sounds like a lot to me, but who am I to judge? [Laughs] Anyway, the long story short is that the way I got started with hardware was just by getting thrown into it and having no idea what I was doing, and it started with just electronics assembly. Then, I got involved into the generation of the parts. So, bills of materials, ordering things so that I could assemble them and getting the PCBs ordered.&lt;/p&gt;

&lt;p&gt;Then, I became more familiar with Gerber files and how to make them in Eagle. Then, all of a sudden, I was in Eagle. I started poking around in the schematics and understanding the relationship between the board file and the schematics. Then, I took a first pass at the shields for the Core which, if you are at the Kickstarter campaign, they turned out great. So, I am glad that that wasn’t my permanent role. But then, I got into a little bit of PCB design.&lt;/p&gt;

&lt;p&gt;Then, just being hands-on and just having to deal with functional obstacles that are actually in your way. It’s such a good way to learn things. My entire hardware training has been on the job, outside of a textbook, just trying to figure it out so that we could not catch somebody’s house on fire when we were doing the Socket. That was all high voltage stuff. That was crazy. I electrocuted myself twice. Once prototyping with the Socket stuff and once unplugging a rice cooker in my apartment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That second one didn’t actually have anything to do with manufacturing?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Not at all. What I learned is that the center pole, the ground pole on US sockets, is longer than the other two so that it stays grounded for a longer period of time as you withdraw it from the electrical socket. But in China, they’re all the same length. And so if they’re really in there-- I just had grabbed it and was pulling it out, and made contact with the metal prongs as they were still partially in the electrical socket, and it gave me a nice little zap but here I am, still alive today.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I’m glad that there was no permanent damage from that. That we know of.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, nobody can tell. Yeah, we know. Oh man.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see if there are any other questions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; If there’s none, I can always talk about some of the funny things that happened during production of the Photon because, of course, there are some issues that people are aware of, and then there are other issues that just got fixed very quickly before we shipped. People would have no idea that they existed, and it helps to describe all the funny little things that happened during manufacturing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I think that would be a great idea.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; One of the funny ones is-- depending on which batch of the hardware you got, you either had a unique tractable barcode or you didn’t. You would know if you didn’t because there’s a little square for where it goes and it says something along the lines of, “If you can read this and somebody forgot the barcode sticker.” Which is by intention. But the first few shipped that didn’t have our tracking infrastructure set up but the ones afterwards do.&lt;/p&gt;

&lt;p&gt;They have these little stickers that are unique for every single Photon that we send out and they are printed with a thermal printer. These are inkless printers that basically use heat to expose test on a little sticker page. Then, we used those, put it on a box, and boom. We can print out a unique sticker for each one. We also heat shrink them. We take a little plastic wrapping, and fold it up. Then, we use heat to seal it into the little gum stick plastic wrapping.&lt;/p&gt;

&lt;p&gt;One thing that happened that we didn’t anticipate-- this is just another example of this kind of stuff-- is that the sticker was a little long. It wrapped around the edge of the box. That also helped keep it closed during handling, which is good. But when you heat shrink them, again these stickers use heat to expose the test. All the first units we put out, when you heat shrink them, the ends of the matchbox packaging, the stickers turned black because, of course, they were being exposed by the heat used to seal the plastic wrapping on the outside of the matchbox.&lt;/p&gt;

&lt;p&gt;Then, all of a sudden, every single sticker that we put on the boxes were all coming out black under plastic wrapping and just, a lot of crap. We still have to re-source stickers that are of different size, but we ended up having to trim them off so that they wouldn’t get blackened during production, but we could still actually take advantage of the tracking work that we put in for each individual unit. Stuff like that, guys. Just, you can never expect it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. It’s a good story, man.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Thanks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Christine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; [Laughs.] We have a couple of other questions. Let’s see. “What is the craziest developer project you’ve seen?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Oh man. Craziest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; The follow-up question is, “Are there any Particle-enabled products we should be looking out for or that you’d like to see?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; You’d like to see.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s start with the ones that you’ve seen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Okay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Okay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Craziest, man. There are sort of two kinds of crazy. There is the crazy which is crazy impressive and then, there’s the crazy which is like this is silly but awesome. Still to this day, one of my favorites is the &lt;a href=&quot;https://www.hackster.io/neo-phreak-3/warkitteh&quot;&gt;WarKitteh&lt;/a&gt;, the open Wi-Fi network collector. Very similar in fact to WarSting but really, really clever. I also really, just for nostalgic purposes because I worked a lot with him-- we had an intern a couple of years ago who made a project called the &lt;a href=&quot;https://www.hackster.io/maxeust/the-foo-bar&quot;&gt;foobar&lt;/a&gt;, which is an automatic cocktail maker. You had a little web app, you slide or direct the proportions of the different mixers and drinks that you want. Then, press go, and it would use all these pair of salted pumps to pull everything into your cup, and mix up, and everything. Those are some of my favorites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; It is called the foobar which is the best.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It’s called the foobar which is hilarious, yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah. This is a question both from Moors7 and ScruffR, the Elites. Are there any Particle-enabled products we should be looking out for or that you’d like to see?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; The ones that are coming up in the pipeline are either very visible and on Kickstarter...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Yeah, and on &lt;a href=&quot;http://particle.io&quot;&gt;our website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; On our website, yeah. Or they are top-secret under NDA and we can’t talk about it. As far as ones that are coming up in the pipeline, they’re pretty visible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s go there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, let’s go there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s go to our website. I like our website. I was excited when we did our website. I thought it was a big improvement. Now, people can tell what it is that we do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Wow, we have mobile with that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Do you know that now—Ah yeah, “Go Mobile With 3G.” Anyway, let’s go down there. Let’s go all the way down to the bottom. Here we have listed Luna, the smart mattress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; One interesting thing about Wake which is the Dawn of Bedroom Robotics, Wakē.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Is it Wake or is it &lt;a href=&quot;https://www.kickstarter.com/projects/58395680/wake-welcome-to-the-dawn-of-bedroom-robotics&quot;&gt;Wak&lt;font face=&quot;helvetica&quot;&gt;&amp;emacr;&lt;/font&gt;&lt;/a&gt;? I thought it was Wakē.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I don’t know. It just spelled like Wake.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s click to that. It has a thing over it so it is Wak&lt;font face=&quot;helvetica&quot;&gt;&amp;emacr;&lt;/font&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; It has a thing over it so it’s Wak&lt;font face=&quot;helvetica&quot;&gt;&amp;emacr;&lt;/font&gt;. Anyway, but my freshman year college engineering project was that exact thing. It was a directional speaker that could wake you up if you have a roommate. I am really glad to see somebody actually making that because that was exactly what we did, and it used a parabolic reflector to concentrate the sound and it was really, really cool. It’s always nice to see something that you thought of being executed on in an effective and good way because then, you can get behind them and be like, “Yeah, I agree. That should exist. Nice. Good work.” I think that’s really cool.&lt;/p&gt;

&lt;p&gt;As far as products that don’t exist that I would like to exist, I think-- Put it this way, the hack that I want to do right now is a little vibration sensor that sends me a text message when my laundry is done, because I forget every single time I do it. I don’t hear the little buzz and then, my wash just ends up sitting overnight.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You should do that with the button. You can do that with the &lt;a href=&quot;https://docs.particle.io/guide/getting-started/button/photon/&quot;&gt;Internet Button&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah, I can do that with the Internet Button so easily. I don’t know. I think there’s something there. I bet you can sell internet-connected washing machines in public places too where you just have it send you a text message or something when your wash is done but you can also see how many minutes are left just like sitting there watching a movie or whatever they do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; I don’t know what this magical laundromat/movie theater is that you go to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; No, no, no, no. People bring their laptop. That’s like the classic thing, right? People bring their laptop, and just sit around, and watch a movie while their laundry is being done but instead...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Instead.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; you could... I don’t know, there is something there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; You could. The other thing that you could do is-- There’s a little LED that goes off usually on washing machines when your laundry is done, you could just get photons and photoresistor from the Photon Kit, and put the photoresistor in like a suction cup or something and be like, [sticking-suction-cup-to-LED noise].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Then, it will just tell you when the light is on, and you can have it text you through &lt;a href=&quot;https://ifttt.com/particle&quot;&gt;IFTTT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That’s good, through IFTTT.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Maybe we should do that. Actually, that sounds like pretty easy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; We can do right after this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; All right, cool. Let’s see what else. Look, other people have had the laundry machine idea as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; That’s nice. Good question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Hardware-wise, how is the Amazon dash button different from the Photon?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Good question. It is very similar. The biggest similarity is that it uses the same Wi-Fi module. It’s got the same Broadcom radio and the same family of microcontroller as the Photon. In a lot of ways, it’s very, very similar. It like the simplest use case for a photon which is, I have a button. When I press the button, detect that, and then make a web request so that we order something.&lt;/p&gt;

&lt;p&gt;Interestingly enough, there are bunch of people who have hacked these little buttons. Among them, members of the Particle family. And we are racing to try to get one onto the cloud. It has been a side project for a couple of the engineers here, but I know we’re close. I think we got the bootloader on it and now, we just have to provision it and get it on to the cloud. But we are recognizing those similarities because again, they are super similar... Yeah, just without a button and an LED thing mostly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Let’s see. “How much would you pay for that washing machine idea?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Are you going to mail it to me? Is it like... Are you doing this?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Garett has a lot of magical projects. I wouldn’t be surprised if he already has it done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; I think I would want to invest it myself rather than invest in somebody else’s work. Really invest in my own future and my own knowledge and because that’s priceless I think. I will not pay you, Garett. I will not pay you for that idea.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; That’s it. It’s wrapping up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Yeah. It’s wrapping up. It’s sad to see it go, but here we are.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Any closing thoughts, Will?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Closing thoughts? Sure, one closing thought, for the nine of you watching out there, but most importantly for anybody in our community who hops on upon this-- a big thank you from everybody at Particle, but also for myself specifically as the Head of Manufacturing, with the patience that everybody’s had with the Photon. Things certainly did not go smoothly as they could have. Believe it or not, it went more smoothly than the Core. There were just few of you out there to notice when we made mistakes. Mostly, just thank you for being patient and understanding.&lt;/p&gt;

&lt;p&gt;As we mentioned at the beginning of this segment, we are always improving and always figuring out how to do a very hard job better. I personally, am very, very excited for the development effort of the Electron. It’s going well. I think we’ve learned from a lot of the challenges we ran into with the last two projects and I think this one will be really, really excellent. Most importantly, things are moving on schedule as of now.&lt;/p&gt;

&lt;p&gt;Again, we really hope that you enjoy using the Photon. It’s certainly built by a lot of people who have a lot of love for this space and making things, and for all of you guys, frankly. We will always strive to do our best to live up to the highest standards that we have for ourselves and that you guys have for us. Thanks again and we appreciate it. Thanks for watching.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt; Cool. All right guys, I’m going to sign off now but we’ll see you next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will:&lt;/strong&gt; Bye.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Particle Interactions: Sprint 40 with Zach Supalla (Transcript)</title>
      <link>http://spark.github.io/staging-blog/2015/08/05/particle-interactions-sprint-40/</link>
      <pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/08/05/particle-interactions-sprint-40</guid>
      <description>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/sB6WR0qwwno&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Hello everyone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  All right. We&amp;#39;re going to have one of these every couple of weeks. We&amp;#39;re going to do them per sprint. As I explained on one of the threads on the Community, we have been doing these 2 weeks sprints since the inception of Spark, now Particle. So, we&amp;#39;re going to kick this off with our wonderful CEO Zach Supalla in this incredibly sweltering room.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   It&amp;#39;s really warm in here. San Francisco is not supposed to be this hot, but it is warm and we are baking in our office, yeah. It is warm. Hunter is now passed out because of how warm it is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Hunter is our mascot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Hunter is our mascot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Zach, I would love if you could just give us a rundown of where we are right now in the world of Particle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   The big thing for us is we are now shipping the Photon. The Spark Core came out mid-2013 on Kickstarter. We shipped at the end of 2013. This is our big second product. We just started shipping it about a month ago. We&amp;#39;re getting them out into the world. Some tens of thousands of them are out there now. Shields are just starting to ship out too. We&amp;#39;ve got a whole bunch of stuff being manufactured in China, getting out the door, and lots of new people joining the community. A lot of people who have been using Cores are now transitioning over to Photon, which is great, super exciting. A lot of new people are showing up that are just getting started with Photon, it&amp;#39;s their first interaction with Particle. That&amp;#39;s fun. That&amp;#39;s all happening, that&amp;#39;s great. Photon is a big step forward for us.&lt;/p&gt;

&lt;p&gt;The second thing is the Electron is in development. The Electron is our cellular platform. It launched on Kickstarter a couple of months ago. We&amp;#39;re shipping in October, 2G and 3G for everything. That&amp;#39;s deep in development now. We&amp;#39;re getting really close to finalizing hardware. We&amp;#39;ve already ordered a lot of components and we&amp;#39;ll be doing a beta pretty soon in August. That&amp;#39;s happening in parallel.
We&amp;#39;re also doing really cool things. We&amp;#39;re just getting some people started using our Fleet Management tools to oversee larger fleets of devices they are running on our platform. That&amp;#39;s just starting to happen. Our private beta, just started with that yesterday. A lot of things all happening at once. So, that&amp;#39;s some of the big important things happening at Particle right now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Sounds pretty fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, we&amp;#39;re busy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I like my pretended ignorance that all this going on by the way. I&amp;#39;m excited for the second half of the interview when other people are going to ask questions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Are you done Hunter, you want to go down? All right.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I&amp;#39;ve seen a lot of people on Twitter and on the forums engaging and making really cool things with Photon, and a couple of people who are getting stuck, as always happens when you ship a new thing. A lot of people are asking about some timelines for updates for the Photon, when are they going to see the new firmware. What&amp;#39;s in the works?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   The Photon is very young as a product and I think it&amp;#39;s a really important step forward for us because it&amp;#39;s a better hardware architecture. There is a lot we&amp;#39;ve done on the software side to create a compatibility layer. What we want to be able to do is pick up on the hardware as we go—adopt new hardware solutions and have our software work the same all throughout. That is the goal.&lt;/p&gt;

&lt;p&gt;The challenge is that the Core doesn&amp;#39;t currently run what we call the Hardware Abstraction Layer, the HAL. We have to do this, hopefully one time thing, of transitioning people off. Most of the code run is the same. The core code is there. The libraries work a little bit differently. We&amp;#39;re working through some of that now. For anyone is bumping into this stuff, like, “This works on the Core, this doesn’t work on the Photon,” we&amp;#39;re working through that. Definitely our apologies that you are getting stuck.&lt;/p&gt;

&lt;p&gt;One of the things that we&amp;#39;re also trying to do is start to get to a regular schedule of releasing firmware regularly. We do two week sprints, so hopefully, what we get to is: every sprint we can start to release some firmware. But in order to do that we also want to let people pick firmware versions so that they don&amp;#39;t have to follow along with the development. They can lock something down if they want to. There is a bunch of stuff happening in parallel to make the whole experience a lot better. &lt;/p&gt;

&lt;p&gt;The big thing is that next week we&amp;#39;ll be releasing a major firmware update: Version 0.4.3. Right now a lot of people are running 0.4.0, which is what the first Photon when out with. There is a lot of bug fixes that will come out next week. Along with that is a major refresh in documentation. We&amp;#39;ve rebuilt the docs from scratch. Christine actually did a lot of that. Do you want to feign ignorance on that too? Should I interview you?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Maybe that will be next week. [Laughs]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, so, that will help document a lot of the differences and some of the new stuff that&amp;#39;s happening with the Fleet Management tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Great, very cool. I know that one of the things that I have seen a lot as well is people asking how the Photon is different from the Core and if we&amp;#39;re not going to support the Core anymore. They are worried about the End-of-Life-ing of the Core.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   That&amp;#39;s a good question. I mean the Core is definitely something we want to keep supporting. A big part of what I just described is that we implemented this Hardware Abstraction Layer. We will soon be bringing the Core up to the HAL. It&amp;#39;ll be running the same software stack with some modifications to the hardware, but it&amp;#39;ll be up to what&amp;#39;s running on the Photon. Then, we can get to this point where the Core, the Photon, the Electron, whatever comes next, are all running variations on the same version of software. Then, when we make improvements it happens to all of our hardware, all at the same time.&lt;/p&gt;

&lt;p&gt;I think this is something that we take for granted when we&amp;#39;re working with products that have operating systems. That the OS— whether you&amp;#39;re running Windows or Mac or Linux— gives you this hardware compatibility layer that lets you run the same operating system on all these different bits of hardware. When you are working with microcontrollers and embedded systems, you don&amp;#39;t typically get that. This HAL will go a long way to doing that, but the Core is definitely coming along for the ride. We have to do some work to catch the Core up. That&amp;#39;s happening right now.&lt;/p&gt;

&lt;p&gt;The Core is out of stock, and we are not planning on manufacturing anymore. A big part of the reason is if the Photon is designed to be a complete sort of improvement on the Core in every way, it&amp;#39;s cheaper, faster, better. We wouldn&amp;#39;t typically stop manufacturing of product within that time frame. I think the Core we were selling for a total of about 2 years. You might look and say well, 2 years isn&amp;#39;t that short. I think that in the long-term, we definitely planned on extending, or continuing to manufacture our products longer. &lt;/p&gt;

&lt;p&gt;If you look at Arduino’s development, you get a great example of this, the original Arduino I think it was called, my Italian is terrible, duemilanove. It had a long name and it&amp;#39;s not really around anymore because the Uno came out. The Uno came out and became sort of like the Arduino forever. I see the Photon as being that. It&amp;#39;s a big step forward for us and something that we feel we have a lot more control over the experience of. We think it is great and we can make it even better. We plan on supporting the Photon for a longer period of time.&lt;/p&gt;

&lt;p&gt;We will keep making hardware iterations, but we will continue to support our hardware. Of course, the software will come along with all of this. The Core is not being left behind.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Cool. There is also a blog post about the Photon and how it&amp;#39;s different from the Core, for people who are wondering. We&amp;#39;re hoping that we might release another blog post that has maybe even more details and maybe a video for people who might want to upgrade and swap out their Cores for Photons.
What do you see about maybe the next 6 months to a year?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Sure. I think about what&amp;#39;s kind of happening with us right now, and some of how our business is changing. I think that what we&amp;#39;re seeing right now with the Photon versus the Core is, I definitely see a lot more people who are starting to think about using the Photon in a production environment than were using the Core. For us, as a business, that&amp;#39;s an important step forward. We really want to support people who are going to scale. We don&amp;#39;t want it to just be a development tool. We want it to be the beginning of scaling. But it doesn&amp;#39;t have to be. It&amp;#39;s not to say if you are just prototyping, or just building a project for yourself that it wouldn&amp;#39;t be a great platform. &lt;/p&gt;

&lt;p&gt;I want the Particle community to look like, the community for something like, what&amp;#39;s a good example? Ruby on Rails and NodeJS. Rails and Node are professional tools. They are used in production all the time. The major web programming languages and the frameworks around them are used by professionals all the time, but if you&amp;#39;re making a weekend project they&amp;#39;re there for you in exactly the same way. I see that happening with the Photon. That affects our business in ways we&amp;#39;re just starting to learn. We have people moving into production and there is a lot of questions about, “How do I do X on the manufacturing line?” And we kind of knew how to do that, but we forgot to write it down. We&amp;#39;re documenting a bunch of stuff that we didn&amp;#39;t even realize that people were going to bump into. There is a whole bunch of new documentation stuff we have to make.&lt;/p&gt;

&lt;p&gt;There are new problems that we&amp;#39;re tackling, things that happen when you ship a product at scale. With Fleet Management, you can do over the air firmware updates, that&amp;#39;s always been a part of our product, but now if you have a thousand things that are all running the same firmware, you can hit a button and update them all to new versions of software. That&amp;#39;s really cool and really different. It&amp;#39;s a really interesting opportunity. It could change how products get shipped. It also means we have to build a whole bunch of stuff to support it and support it so that anyone from a weekend hobbyist to a professional will be able to use it. That&amp;#39;s a really important step forward for us.&lt;/p&gt;

&lt;p&gt;I think the Electron is huge because—and I&amp;#39;d be really curious to get peoples opinions on this out in the world—when I think about the Photon and the Core, versus the alternatives, the Core wasn&amp;#39;t the only thing out there that did what it did. It was better, I think, then a lot of the alternatives. It was more affordable. It was easier to use. It was open source, whereas a lot of the others were proprietary. It wasn&amp;#39;t the only thing out there. There were alternatives and so you had choice.&lt;/p&gt;

&lt;p&gt;With the Electron it&amp;#39;s different. There is nothing else out there. If you want a cellular solution and you&amp;#39;re not a big company-- or even if you are a big company and you want something that you don&amp;#39;t have to go negotiate with a carrier for and you don&amp;#39;t just want to go buy a SIM card from the T-Mobile store around the corner-- there are really no good alternatives to the Electron. It opens up a whole new area of products. The customers that are starting to come to us about the Electron are in some ways similar to the Photon. It&amp;#39;s a lot of people are the same people from the community, but we&amp;#39;re also dealing with more industrial customers. &lt;/p&gt;

&lt;p&gt;Wi-Fi is typically consumer products. People are building smart home stuff and that kind of thing. With the Electron, it&amp;#39;s a lot more industrial, agriculture, municipal, oil and gas, mining, smart energy, smart-grid and all this stuff that is really interesting for us as a business. It’s also very new to us. It&amp;#39;s a new area for us, and our customers are the same-- it&amp;#39;s engineers and people building products-- but then the end consumer is a little different. I think that&amp;#39;s really exciting. I think there are really cool opportunities in the industrial space and I’m really excited to support that. When we think about our product map into 2016, we want to try and solve more problems for industrial customers. When I say industrial I mean the broadest sense of non-consumer stuff.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s cool and pulling us in a totally different direction. So that brings us to early 2016. I think we&amp;#39;ve got our hands full with the stuff we&amp;#39;re already working on. The Photon just getting out there now. We&amp;#39;re going to spend a couple months reeving up the software and getting all the features in their that everybody needs. Getting all the libraries working and putting the Photon into place where it&amp;#39;s really ready for prime time. When the Electron comes out, we&amp;#39;ll be doing the same thing for the Electron. &lt;/p&gt;

&lt;p&gt;Inevitably, we will be figuring out all sorts of things about how cellular networks work around the world, because it works in a hundred countries. We&amp;#39;ll spend October through the end of the year figuring out a lot of that. I think then early 2016, is when I think we&amp;#39;ll be in this place where the Photon and Electron are both fully baked and a lot of people are using them. We will understand how people are using them and what products they’re building with them. &lt;/p&gt;

&lt;p&gt;Then, we&amp;#39;ll start to think about what the future looks for us. We have some ideas about where we want to go next, but it&amp;#39;s still pretty hazy at this point. Right now we&amp;#39;re just focused on getting these products out and delivering on the promises that we started with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  A lot of people who ordered Photons-- and many of them have their Photons now-- may have also ordered Electrons. I also know that some people are wondering, “Well Photon was kind of late, is the Electron also going to be late?”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   We gave ourselves more time with the Electron. So far, we&amp;#39;re sticking to our timelines. I think that&amp;#39;s really exciting. After the Spark Core campaign, and I think for the Photon, a couple of months after the announcement we already had to announce a delay. We haven&amp;#39;t yet for the Electron. We&amp;#39;re still on track for October. That feels really good. I think if you talk to Will, who runs hardware and manufacturing for us, he feels like the progress on the Electron shows that we&amp;#39;re growing up a little bit. It&amp;#39;s a little bit more systematic. We have a better understanding of how long things take. We gave ourselves enough time. &lt;/p&gt;

&lt;p&gt;There are some software complexities that we haven&amp;#39;t really dug out yet. We&amp;#39;re still working on carrier integration. There is a lot of stuff about managing the SIM cards and accurately tracking data that we&amp;#39;re hoping will just work when we start to deal with the carriers, but it&amp;#39;s possible that we might find some dragons there. When I think about what&amp;#39;s spooky for me in terms of what might create delays, it&amp;#39;s a lot of this stuff on cellular that&amp;#39;s kind of new and weird that we haven&amp;#39;t totally explored yet. &lt;/p&gt;

&lt;p&gt;There is some uncertainty there. There always is; new product development always has a lot of uncertainty there. But I am happy with where we are now compared to October. We have no reason to believe we&amp;#39;re going to get delayed yet. I think that our development process has gotten a lot more rigorous and clear-cut. We&amp;#39;re growing up. We&amp;#39;re becoming a real company.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Capital R, capital C, real company.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yep.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Did you want to maybe talk a little bit about Fleet Management? I&amp;#39;m not sure that everybody out there in the nebulous possibly-one-person-possibly-more audience knows what Fleet Management is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Oh sure, yeah. Fleet Management, we&amp;#39;ve had this idea for a while and it&amp;#39;s now starting to come to fruition. Let’s say I&amp;#39;m creating a product. Let&amp;#39;s say I&amp;#39;m creating a Wi-Fi connected toaster, because we all know that our toasters really need to have Wi-Fi in them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  So that you can print on toast.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   So that you can print on toast. Still waiting for somebody to figure that out. &lt;/p&gt;

&lt;p&gt;Okay, so here&amp;#39;s my product. It&amp;#39;s a Wi-Fi connected toaster and every morning when I make toast it prints today&amp;#39;s weather forecast. It burns today&amp;#39;s weather forecast into the side of the toast. Great. Cool product. As I&amp;#39;m developing my product and use a Photon or a Core, or an Electron (in this case probably a Photon), I&amp;#39;ll design the circuit around that. The Photon will connect to the relay, the relay will connect to the circuit that heats the toast. I&amp;#39;ll use all of the Particle development tools to write all the software and deploy it over the air, that&amp;#39;s great.&lt;/p&gt;

&lt;p&gt;Now, I move from one toaster-- we&amp;#39;re going to call it Toasteriffic, because that&amp;#39;s a good name for a Wi-Fi toasting brand. Is there a thing already called Toasteriffic? Would somebody trademark check for me?&lt;/p&gt;

&lt;p&gt;Toasteriffic. I made my first prototype and now I&amp;#39;m making 10. Now I make 100, and then 1,000 and then 10,000. What do I need? What are the problems I&amp;#39;m going to run into?&lt;/p&gt;

&lt;p&gt;There is some stuff on the manufacturing side. I need to find a contract manufacturer. I need to optimize my build materials and create a custom circuit board and manufacturing plan, and all that. Put that aside for sec.&lt;/p&gt;

&lt;p&gt;What do I need on the software side? I need a lot of the same tools that I have with Particle. I want that API. I want to be able to interface with a product through the Particle cloud. But, I also want things to work in a bit of a different way. I have a group now. I have, what I sometimes call a homogeneous group. It&amp;#39;s sort of an army of toasters. My product, when it&amp;#39;s an internet of things product, is not just a single device. It&amp;#39;s a fleet of devices.&lt;/p&gt;

&lt;p&gt;Fleet is kind of a funny word. When you talk about fleet people either think about military or they think of trucks. “Fleet Management”-- you think, I&amp;#39;ve got a map of all my 18-wheelers around the country and they are all driving around. I can see their dots and where they are. It&amp;#39;s kind of the same concept, but applied to toasters. I can theoretically have a map of all my toasters and who&amp;#39;s using them and what they’re doing right now. Are they toasting? Are they not toasting? Are they online? Are they offline? Did one of them explode? All of that. Hopefully their not exploding. I could have all that information available to me. &lt;/p&gt;

&lt;p&gt;Then I need a tool, as the product creator or product manager of the toaster. (Toasteriffic, trademark.) I need a place where I can log in and see what&amp;#39;s happening with the toasters. Is there a problem? Can I fix the problem? That&amp;#39;s Fleet Management. What we want to do is give people a way to say, here&amp;#39;s all your devices, here&amp;#39;s what&amp;#39;s happening with them. Drill down to an individual device. If someone calls in and says their toaster is not working, I can actually click on their device and see what&amp;#39;s going on, maybe pull some diagnostic information off of it, or try and toast it remotely and see if the toaster is working or not. If a toaster does something wrong, like it tries to heat but it can&amp;#39;t, or it tries to heat and it bursts into giant flames, then I could see that and maybe trigger a message, or something along those lines. Then, when I fix the problem that causes the toaster to go up in flames, by writing a firmware update, I can hit one button and I can distribute it out to the entire fleet.&lt;/p&gt;

&lt;p&gt;All of that is part of what we call Fleet Management. We just have a private beta that started this week. If you&amp;#39;re interested in participating in the private beta, if you haven&amp;#39;t already, you can go to dashboard.particle.io and go to the upper right. There is a button, I think it&amp;#39;s “request invite,” to create an organization. You can check that out. As an individual I can use these tools to see all my Cores, Photons, Electrons, whatever. But when I create an organization, now I can see all of my customers’ devices and what they are all up to.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s a huge step towards the production grade tooling that is now part of our platform and will be released publicly at the end of August.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Hopefully that gives people a sense of what fleet management is. That&amp;#39;s going to be really fun to transcribe later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Toasteriffic go out and make it if it&amp;#39;s not out already.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I&amp;#39;d like to give a free Electron to anybody that actually makes Toasteriffic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Toasteriffic.io. I&amp;#39;m sure that&amp;#39;s available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Cool, what else do we have?
We have new docs, I know that people have questions about that. I don&amp;#39;t know if one can actually do a screen share on a hangout, but I was wondering if maybe you wanted to show people what that looks like?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   For sure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Let me check to see what I can do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Hey, people are talking. We should ask them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  So many people are talking.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Let&amp;#39;s see if people are saying anything we can address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Okay, let&amp;#39;s see.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Hold on, we&amp;#39;re reading your comments so give us a sec to see.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Somebody noticed the fireplace-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, there&amp;#39;s a fireplace. That&amp;#39;s good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  That&amp;#39;s good.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   People are just chatting with each other. You guys are all making friends in there. That&amp;#39;s fun, that&amp;#39;s fun. David said it, Arduino 2009, duemillenove. Something like that. Anyway, all right thanks David.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  All right.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Okay. Now, let&amp;#39;s talk about documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Do you want to do a little demo?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, I&amp;#39;m going to do a little demo. Okay, we redid our docs. We&amp;#39;ll be publishing this next week. It is super exciting. There is a lot of really cool stuff in here. For us, documentation is a really important part of the experience because it&amp;#39;s what allows you to get started. If you&amp;#39;re working with either straight up normal unconnected hardware or even connected to hardware, there are things that are challenging for a newcomer to grasp, such as datasheets. We&amp;#39;re trying to create a really nice onboarding process here, and we&amp;#39;ve made some really nice improvements.&lt;/p&gt;

&lt;p&gt;One of the things that we&amp;#39;ve done is: we now have sections. Previously there was one massive place where you go for all of the content. That was nice in that you knew where to go for all that stuff, but the downside is as the quantity of content grew, it outgrew the navigation. We now have different sections. We have a guide, which is where you will show up if you go to it the first time. We have reference, which is the firmware documentation and the API documentation. It&amp;#39;s where you can go if you&amp;#39;re writing something you need to look-up, like a function call.&lt;/p&gt;

&lt;p&gt;You have datasheets. These are hardware datasheets. The nicest datasheets I have ever seen. Thanks to Brett for those.&lt;/p&gt;

&lt;p&gt;And then support which is just general troubleshooting. Some of the things relate to placing an order on our website. Some of it relates to troubleshooting of the platform.&lt;/p&gt;

&lt;p&gt;Okay, great we have these sections. This allows us to create a bunch of new content. We can put more stuff in here without it all getting lost. We also have a search bar which is super nice. You say I want to learn about listening, if I just type in “listening,” you can see that I get a bunch of results that relate to different platforms. It tells me where I can go, and I can click on these and end up in different parts of the documentation. Searchable docs, super nice.&lt;/p&gt;

&lt;p&gt;Also, I might be using the Core, I might be using the Photon. In the future I might be using the Electron. The documentation might be a little bit different, because they do work a little bit differently. I can pick what device I&amp;#39;m running and the docs will remember this. I can then make sure that I&amp;#39;m reading the correct documentation for the correct product.&lt;/p&gt;

&lt;p&gt;Now the guide, we&amp;#39;ve changed how it&amp;#39;s laid out. It&amp;#39;s a lot more linear; it&amp;#39;s more of a story. You can start at the beginning of the guide and read through chapter by chapter, leveling up as you go. You can see that I can actually move onto the next page and this is more a long form written out, here&amp;#39;s what I do, step-by-step. It kind of fits with the flow that you expect of a guide. Also, as I scroll I can see where I am at the left, and the navigation unfolds. It&amp;#39;s much easier to figure out where you are in this massive content. That&amp;#39;s all really nice. We have a Getting Started section, and Tools and Features (which walks through all the major tools that are part of the Particle platform).&lt;/p&gt;

&lt;p&gt;Then we have a whole new section called How to Build A Product. We&amp;#39;re trying our best with this to describe every single thing that you need to think about in the transition from prototype to production. It goes from hardware-- so what are the things you need to keep in mind in the design of your hardware-- to what are the hardware design requirements for our platform, how do you use the dashboard that we just talked about (the Fleet Management tools). How do you build your web app for your product? How do you build a mobile app for your product using our mobile SDKs for iOS and Android? How do you manufacture, program, and test your devices on manufacturing line? How do you also order large volume hardware from us? Then things to think about as you scale. &lt;/p&gt;

&lt;p&gt;This is awesome for us, because we field a lot of questions about “How do I do X?” This is the first time we&amp;#39;ve actually sat down and written out the entire process. Here are all the things you need to know about how to build a product. Since I&amp;#39;m screensharing, you probably can&amp;#39;t see that I&amp;#39;m gesticulating wildly as I talk through this. All this stuff is great.&lt;/p&gt;

&lt;p&gt;Then, of course as before, I can hit edit and can actually contribute back to the documentation by creating a pull request on the documentation. That&amp;#39;s super, super cool. This is going to go out publicly next week. You should get excited. It&amp;#39;ll change how you interact with our documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  We are just about at 4:30. I told myself that I was going to reserve the last half hour for questions. I know that I didn&amp;#39;t get down my entire list, but I&amp;#39;m sure that some of the wonderful people that are listening will be able to write in any questions that they think might need to be answered at this point. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Write in your questions if you&amp;#39;ve got some. While you do that, and Christine reads the questions, I will see if I can get Hunter to do a dance for you. Hunter, come here buddy. Come here. Okay, he&amp;#39;s not very interested in doing a dance. All right, well I&amp;#39;m going to entertain you while Christine looks for questions and talk about random things.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re in Particle house right now. We&amp;#39;re in San Francisco in The Mission. It&amp;#39;s warm because we don&amp;#39;t have air conditioning, which is mostly okay except right now when it&amp;#39;s super, super hot. We have a fire, which is probably contributing to the problem, although it is on an iPad. It&amp;#39;s not that warm of a fire. You may have noticed that sometimes it has captions, and sometimes it says “crackling” in brackets. It is making sound.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I really think that hearing-- and if not hearing that reading-- the fire is a really big part of the experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, yeah, exactly. It is crackling wherever it may be. All right I&amp;#39;m out of things to say. Do you have any questions from the world out there?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Can you tell us about some of the non Particle produced hardware running the Particle platform, such as Bluz, Oak etc.?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, sure. This is a cool new thing. We are not no longer the only company that makes hardware that runs on our platform. This was something that we kind of hoped and envisioned for a while. I&amp;#39;ll tell a little bit of a story. It started with Eric from Bluz. Previous to Bluz, he was creating a product called GoGlove. GoGlove is a glove that is Bluetooth connected. He reached out to us just for his own product. Many of you may have followed this thread on the forums. He wanted to essentially extend the Particle platform, because he liked all of our tools and the cloud, and he wanted to extend it into Bluetooth products. He ported over our stack for GoGlove. &lt;/p&gt;

&lt;p&gt;When he did he thought this was kind of cool, what if I created a development kit for this? So he did, and called it Bluz. At some point he contacted us and was like, “How do I do this guys?” We were like oh, that&amp;#39;s really interesting. We&amp;#39;d love to see Bluetooth on our platform. How do you do it? Go ahead and we&amp;#39;ll support you. We didn&amp;#39;t really know. We didn&amp;#39;t have a model figured out for it at that point. We just basically said yes, we&amp;#39;re super supportive, we&amp;#39;ll do whatever we can to help. He went ahead and he built it. He had a Kickstarter campaign and was successful. He&amp;#39;s now deep in production. I think he&amp;#39;s shipping in October. That&amp;#39;s super cool.&lt;/p&gt;

&lt;p&gt;After that, probably I guess it&amp;#39;s probably a couple of months later many of you may have seen Oak launch on Kickstarter. Oak is a new Wi-Fi development kit from a company called Digistump. Digistump made the Digispark and they&amp;#39;ve made a bunch of great development tools. They have great community. Erik-- also named Eric, there is 2 Eric&amp;#39;s-- Erik with a K created Oak. He liked our API and decided that he was going to create a Spark compatible API, so that you could run software that could run against our API or his API, and basically was like, “Well these are good ideas here, so let&amp;#39;s implement them together and follow the same paradigms.” And we said, this is great. Thank you for liking this stuff, and we love what you’re up to. Is there anyway that we can be helping you more? Can we actually host your cloud? Or would you be interested in running your stuff on our cloud?&lt;/p&gt;

&lt;p&gt;We talked about it. We had a good conversation about what his business goals were and worked out a model that made sense for him and for us. He, at the end of the day, was like “Okay, yeah, let&amp;#39;s do it, let&amp;#39;s run on the same platform.” I think both of us are really excited because the Oak runs on the ESP8266, which is a chip that&amp;#39;s getting a lot of traction coming out of a Chinese company called Espressif, which is a cool new chip. For us, we were excited about the Broadcom chip that&amp;#39;s in the Photon because it&amp;#39;s battle-tested now. It&amp;#39;s been on the market for awhile. It is the product that is in most of the consumer products out there. Nest Protect, LIFX, Amazon Dash, Honeywell thermostats, and more. We were really excited about taking something that&amp;#39;s battle-tested. Especially as our customers get a little bit more professional, that&amp;#39;s great.&lt;/p&gt;

&lt;p&gt;The ESP8266 is exciting for a different set of reasons. It&amp;#39;s really cheap. It&amp;#39;s got huge community growing around it. It&amp;#39;s kind of a leading-edge thing. That&amp;#39;s super cool. By Erik supporting it through Digistump and Oak, but working together on a cloud platform, it means that we can have a variety of hardware solutions. If you want the Broadcom solution we can provide that to you directly. If you want a ESP8266, then Erik and Oak have that. We hope to see this to continue to expand into different chips, different wireless protocols. Essentially, we are very open to supporting other companies that want to build hardware and don&amp;#39;t want to deal with the cloud. &lt;/p&gt;

&lt;p&gt;If you look like that, let us know. We&amp;#39;d love to chat. I think it&amp;#39;s one of the interesting ways that we will see our community grow, it’s not just the hardware we produce, but hardware that our partners produce. Yeah, that&amp;#39;s happening it&amp;#39;s super cool. We call them Compounds because we&amp;#39;re now called Particle and we try to make as many puns related to the name as we can. Such as this Particle Interactions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Particle Interactions. That was actually Peekay123&amp;#39;s suggestion.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Oh yeah? Thanks Paul.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah, my original thought was Particle Dynamics, but I like Particle Interactions a lot better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   That&amp;#39;s good. Between Two Atoms. No? Anyone?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  We have two plants in the office. They&amp;#39;re sort of fern like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   They&amp;#39;re very fern like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  We could have put one there and one there and had Particle Interactions between two ferns. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   A different vibe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  We have people wondering if Core will still be in prod since they need it for existing product support, and are not intending to switch to Photons for now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   If Cores will still be in production?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Yeah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   We don&amp;#39;t have currently have plans to manufacture any more Cores. If you need Cores, especially if you need them in quantity, let us know immediately. We do have some still floating around, a small number. There are some in Maker Kits. Right now if you go on our website, the Core is sold out. There are Maker Kits available. We can help people out in smaller quantities, we can scrunch them together. There are also some in retailers. Some of our distribution partners still have Cores. We can help people get a hold of them. If you need larger quantities we can work with you to figure out the right way to make that happen. We want to make sure we can help people move forward with whatever it is they&amp;#39;re working on. If you&amp;#39;re in that position, basically just come talk to us. You can either email hello@particle.io or you can email or sales team and Dan, our Head of Sales, would be happy to help you work through that. That is sales@particle.io. Yeah, we&amp;#39;d love to see if we can help.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Cool. One question was why don&amp;#39;t you change from fireplace for your home to ice place for your home? I just did a search for that on Netflix and unfortunately, it does not exist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Ice places. This is the next connected device. We have a Wi-Fi connected ice place. I think that just means that you have an icebox and you just open it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  It&amp;#39;s like a refrigerator for your home.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, exactly. You just put refrigerator here and you open it, or an air conditioner I suppose would solve a similar problem. Air conditioner would be a great idea.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Another person is asking will I one day be able to update my Photon through the online IDE?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yes. Today, is that day! Where you can update the Photon through the online IDE. The IDE works with the Photon right now. Next week, we&amp;#39;ll be pushing out a new firmware version, auto-updating people to the latest version. That&amp;#39;ll happen soon. I&amp;#39;m guessing the question might relate to the fact that there are some new features and bug fixes that have gone out that people want access to, like, yesterday. &lt;/p&gt;

&lt;p&gt;In the short term what we&amp;#39;ve been saying is “Hey, you can do this, you have to compile locally to be able to use the latest versions because we haven&amp;#39;t yet released it to the cloud.” Next week that will change. Next week you&amp;#39;ll be able to get the new stuff in the cloud, and in the meantime if you want to you can do local development. It is a little bit more work and not our happy path, clean process. But it&amp;#39;s there. It&amp;#39;s an open-source platform you can always explore those firmware releases that are still in development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  We have a question that&amp;#39;s asking: What are the limits of the Electron, SMS versus MMS capability, can one build a cellphone with Particle Electron?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Theoretically, yes. In reality, there are some limitations, because for us-- this is something we debated when we released the Photon-- How much do we want to see if people access to? It&amp;#39;s an open source platform, so at a high-level you can do whatever you want. The next question is what do we support as a direct thing. A big part of the Electron is it&amp;#39;s hardware. It also comes with a SIM card and a data plan. &lt;/p&gt;

&lt;p&gt;When we went out to get data plans from carriers, what we found is data is affordable. Text messages were super expensive. The way that these companies charge for text messages was what they call M to M plans, which is machine to machine. What they refer to as the cellular internet of things. Pricing looks like 1997 text message pricing. It&amp;#39;s kind of absurd when you look at it. So, our preferred solution if you want to send a text message would be to send a data message and then send a webhook to Twilio and use Twilio to send a text message. That&amp;#39;s something we hope to at some point adopt as a first-class citizen where we can actually provide a text message support through Twilio as a feature of the platform. In the meantime, it is totally possible to send a text message by using something like Twilio.&lt;/p&gt;

&lt;p&gt;As for phone calls, the hardware connections to make a phone call are not exposed on the Electron. Part of the reason for that is that it&amp;#39;s a really tiny board and there wasn&amp;#39;t very much room. To make it as small, as close to the size of the Photon as we could, we had to make some sacrifices one of them was voice, because it&amp;#39;s not really a feature that we want to primarily support. If you can hack it to do it, that&amp;#39;d be super cool, I&amp;#39;d love to see somebody do it. It&amp;#39;s also from a certification perspective we will be pursuing certification as a data platform, but not for voice because it makes the regulations significantly more challenging. &lt;/p&gt;

&lt;p&gt;You have to deal with things, like if it&amp;#39;s a voice product, you have to get it regulated to be near your face. The rules for this stuff is crazy. I mean it&amp;#39;s not that crazy. There’s radiation, if you&amp;#39;re supposed to put it right here. The powers-that-be have different expectations for the radiation than if it&amp;#39;s out here. We&amp;#39;re designing it for use cases that are out here and not next to your face, but it is still a development kit and it is hackable. Do whatever you want with it. It&amp;#39;s not going to melt your brain, it&amp;#39;s just that we&amp;#39;re not pursuing a certification. We&amp;#39;re not going to spend the money to certify it for that.&lt;/p&gt;

&lt;p&gt;All that is to say, open-source, do what you want. Hack it. Have fun. Explore whatever you can. The things that we will be supporting are data and data only. We will definitely pursue ways that we can make it really easy to do other cool stuff using the data levels.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I have a couple of other Electron questions here. How secure is the communication on the cellular networks with the Electron, and how hard would it be if someone wanted to intercept some code being sent to the Electron?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Good question. Secure and hard. Our protocol is encrypted. We encrypt all the communication from the device to the cloud. In addition, the cellular networks themselves are also encrypted. It is very difficult, if not impossible, to basically intercept a message in a cellular network at all, just by design of the cellular network.&lt;/p&gt;

&lt;p&gt;Now, it&amp;#39;s not something I&amp;#39;m a very deep expert in, so I don&amp;#39;t know a lot of the details, but I know that network is encrypted, but that we don&amp;#39;t just rely on encryption. We add our own layer, which is the same encryption that is on Photon and the Core. All those communications are secured. You can open up a TCP socket to another service. At that point, it&amp;#39;s up to you to secure those communications. As long as you are sending a message to our cloud we handle all the encryption, and you’re more than welcome to send messages to other places as well. At that point, implementing an additional security layer is kind of on you.&lt;/p&gt;

&lt;p&gt;In general, I think the overall statement is: as long as you&amp;#39;re using the tools that we provide, security is taken care of and you don&amp;#39;t have to worry about. That is also true for over the air firmware updates because I know that&amp;#39;s important, that&amp;#39;s one of the most important reasons that this stuff has to be secured.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  The last question about the Electron that I saw was: will I get access to a baseband radio on the Electron?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   No. Now, that&amp;#39;s not us. Open-source, we love to open-source whatever we can. The baseband radio is within the module, which is a U-blox module. As far as I&amp;#39;m aware, they do not provide access at that level until they give you an AT commands interface, which we&amp;#39;ll use to communicate with the towers. That&amp;#39;s the level of access that they provide. I know that might feel like, “I really want access! I really want to have full control of everything.” The reality of open-source hardware is that all of our open-source hardware is built on some proprietary layers by other companies. We have to accept what we&amp;#39;re given.&lt;/p&gt;

&lt;p&gt;There has been some really interesting work. Any of you out there familiar with Bunnie Huang, he is one of our advisors. He&amp;#39;s done some really cool work, reverse engineering the base bands on a MediaTek chip, which is super cool. We had some conversations back when we were developing Electron about actually using the work that he was doing in the Electron. He was like, “This is super experimental. It maybe quite sometime before we&amp;#39;re ready to use it in production.” I&amp;#39;m really curious to see where that goes. I&amp;#39;d love to see more open source stuff in this area. &lt;/p&gt;

&lt;p&gt;One of the challenges that we have to balance is we want to be as open as we can be, but also comply with regulations because we&amp;#39;re basically going to be putting a lot of devices on these towers. As far as I&amp;#39;m aware, this will be the first time that there is a mass-produced development kit being sold in the quantity, in the short period of time, and with data service, that we&amp;#39;re doing. Development kits can typically get around regulations because they&amp;#39;re being used by professionals. You&amp;#39;re not doing it en masse. But when we ship ten thousand of them the rules change a little bit. We have to make sure that we comply with the rules and regulations so that the carriers are cool with what we&amp;#39;re doing because we do use their towers and the certification bodies-- FCC, CE, IC, PTCRB-- everyone is sort of happy with the way things work. That is something that we have to factor in to the way we do things. Given that, we try to be as open as we can within the constraints that are out in the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Are we expecting any cool new shields made specifically for Particle?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yes. You may have seen SparkFun has now adopted Particle, the Photon, into their ecosystem. They have a bunch of shields for the Photon. That is super cool! Go to sparkfun.com and check it out. Those will be available for sale soon. We are super excited about SparkFun and SparkFun is super excited about us. We will be continuing to work with them. I expect, I hope and expect to see them developing more shields for the Electron too. Adafruit also has a neopixel kit that they have developed. We should see that out in the world pretty soon. Seeed Studio has a Grove Kit. So, that&amp;#39;s kind of like, “best hits.” Everybody has got their best thing on the Particle platform right now. &lt;/p&gt;

&lt;p&gt;We definitely want to see more. We&amp;#39;ll be exploring this with all the people out there that make shields. If you want to make shields we&amp;#39;d love to help. We&amp;#39;d love to see more good community-developed stuff along these lines. We will keep making shields for all the things that we think are most broadly useful. There is a lot of shields that we won&amp;#39;t make and we&amp;#39;d love to see you create them and support you in doing so. We have a program for doing that. If you&amp;#39;re interested contact us again, hello@particle.io and we&amp;#39;d love to chat with you about that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  As a side note, I was browsing the community the other day and I noticed we actually have a community member was actually building a shield called the Q-Shield, it is a quadcopter shield.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   It is super awesome. I&amp;#39;m really happy about it because I once said that I was going to build something like that and then I totally failed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I was about to bring that up. I think now it would actually be really, really easy for you to build yours, just pop it in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   I&amp;#39;m a huge supporter of Q-Shield because they made my failure less bad. I&amp;#39;m really busy guys so I never got around to making Charm which is my Photon-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  What does Charm stand for?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   It doesn&amp;#39;t stand for anything. Charm is a kind of quark. Particles, right? Got to use all the names. My idea was that I first wanted to create a quadcopter and name it Charm. Then, make a hexapod and name it Strange. Those of you out there who know the 6 types of quarks, are Up, Down-- crap, somebody write me what they are. Up, Down, Strange, Charm, and then there are two more. I want to say Left Right, but I&amp;#39;m pretty sure that Left and Right are not names of quarks. Since Strange quark and Charm quark are 2 kinds of quarks, I thought that Charm would be a great name. Can you imagine, it would be a quadcopter and it would have a smiley face and be really cute and called Charm. Then, you make a hexapod with an ugly face and teeth, you name it Strange. They would be a really nice little pair of robots that fly around.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  They could be friends.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Or walk around, they could be friends. That&amp;#39;s what I had envisioned. I got as far as the vision statement then I got pulled into other things. It&amp;#39;s still in my backlog. I haven&amp;#39;t made much progress. I&amp;#39;m really excited about Q-Shield. I would love to follow the people who are eagerly awaiting Charm. Hopefully other quadcopters that will be coming out on the Photon platform in the future. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  One question: does Particle plan to continue the development of the Spark server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Yeah, Spark server is definitely still in development. Right now you can do some of the things on the Photon and some you can&amp;#39;t. Mostly because the team that&amp;#39;s working on Spark server also works on the other tools. A lot of the other tools, like the CLI, have been going through some major improvements to make sure it works with the Photon as well as the Core. We just haven&amp;#39;t gotten to the Spark server yet. That&amp;#39;s not to say that we&amp;#39;re not supporting it. It&amp;#39;s just mostly a lot of the pressure, the people that we need the most to get that going have been focused on the other tools. We&amp;#39;ve worked on those first. We will be getting to the Spark server and updating it, so the full set of features that are available on the Photon work. &lt;/p&gt;

&lt;p&gt;Also, probably at some point we&amp;#39;ll probably change them from Spark server to Particle server, which is just one of the things, you may see we&amp;#39;re still Spark, because we didn&amp;#39;t want to break all the dependencies from all the naming of things. We will at some point make that change from Spark to Particle. We haven&amp;#39;t quite gotten there yet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  One question I think is pretty good: With release of the thread standard will we ever see any low power mesh products from Particle?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   It&amp;#39;s definitely something we&amp;#39;re thinking a lot about. I think it&amp;#39;s super cool. Thread is really interesting. I&amp;#39;ll give my perspective on the whole low power mesh side. ZigBee and Z-Wave have never really took off the way they were supposed to. They&amp;#39;re kind of the home automation protocols. ZigBee got closest. It doesn&amp;#39;t feel like it got widespread consumer adoption. &lt;/p&gt;

&lt;p&gt;I think a big part of that is that protocol to be successful, especially in a consumer context is not just about having a good protocol it&amp;#39;s also about building a great brand. This is something that Wi-Fi-- the Wi-Fi Alliance, I forget the name of the Bluetooth group, it might be the Bluetooth Alliance-- have kind of figured out Wi-Fi is a brand and also Bluetooth. Bluetooth in particular is a really strong brand these days.&lt;/p&gt;

&lt;p&gt;If you look at BLE for instance, BLE is a very different protocol from Bluetooth. In fact, there is a lot more similar I think to ANT, which is not as widely used, but has a lot of the same characteristics of BLE. I sort of look at BLE, and I don&amp;#39;t know the real history behind this, but it sort of feels like Bluetooth looked at ANT and was like, “That&amp;#39;s a good idea. We&amp;#39;re going to take parts of that and build BLE.” You can imagine if the same thing had been true for ZigBee, like if Wi-Fi Alliance had looked at ZigBee and said, “That&amp;#39;s cool. We&amp;#39;re going to use that, or something like it and call it Wi-Fi low power, or Wi-Fi low energy or something like that.” It probably would have taken off. I think there actually is a Wi-Fi spec like 80211.AH, I think is a low power thing, but I don&amp;#39;t know how far along it&amp;#39;s gotten.&lt;/p&gt;

&lt;p&gt;Thread is great because, the guys behind thread, it’s a mix, it&amp;#39;s nest, 3scale, Samsung, I think they have really strong technical confidence with a really good understanding of brand. I think that thread has the capability of being super successful in the context of the home if they pull everything off. &lt;/p&gt;

&lt;p&gt;All that is to say, what about non-home solutions? I get a lot of questions about what do you think of Thread in an industrial setting, or agriculture or something like that. I think what I&amp;#39;ve seen is if you talk to the Thread team about this, they say, “Super cool. Sounds interesting. We&amp;#39;re really focused on the home right now.” With this general “maybe we&amp;#39;ll get to that one day” kind of thing. The spec, the protocol, there is nothing that necessarily excludes you from using it for a non-consumer context, but the Thread group is very focused on winning the home with Thread. &lt;/p&gt;

&lt;p&gt;I&amp;#39;m really interested in low power mesh in a lot of cases for the non-home application. I&amp;#39;d love to see more low power mesh in cities, in farms. Some of its there. Then, the question is, is Thread applicable in those cases? This is an area where we are starting to think really heavily about what our solution there might look like. It&amp;#39;s something I&amp;#39;m really interested in exploring more deeply. Is Thread the right solution or not, I don&amp;#39;t think we&amp;#39;ll be the first people to adopt a new protocol.&lt;/p&gt;

&lt;p&gt;If we&amp;#39;re going to do a Thread thing, we&amp;#39;d probably want to see Thread get some pretty strong traction around it and then have customers come to us and say we need Thread. Then at that point say, yeah, okay, we&amp;#39;ll build a Thread. Otherwise, if we do go down that path we may choose to use some of the protocols that are more established that have been around for a little while, like and it might just be something like 6lowpan. Something along those lines. We are exploring the protocols, the standards that are coming out. We&amp;#39;re keeping our eye out on it. It is something that we think is very exciting. We&amp;#39;d love to figure out how we can participate and how we can best support our customers in creating products that fit into that world of low power mesh.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   You guys ask these really short questions, and I give these really long answers. I hope that&amp;#39;s all right. I&amp;#39;m a talker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  All right let&amp;#39;s see. We are pretty much close to the end I think. I&amp;#39;m looking to see if there are any questions that are really short-answer. I think probably none of these are probably two minute questions. I&amp;#39;m going to close this one on out. Thank you very much Zach for taking the time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   Thank you Christine for inviting me into the conference room and setting all of this up, especially the fire-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  I thought the fire was a nice touch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zach:&lt;/strong&gt;   ... and the pipes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Christine:&lt;/strong&gt;  Okay, cheers. Thank you everybody for joining us, and we&amp;#39;ll be doing another one of these in 2 weeks. I will be posting that on the community. Thanks so much, bye y’all.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Photon Changelog</title>
      <link>http://spark.github.io/staging-blog/2015/05/15/photon-changelog/</link>
      <pubDate>Fri, 15 May 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/05/15/photon-changelog</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/photon-panel.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Today, after long last, we&amp;#39;re shipping the Photon!&lt;/p&gt;

&lt;p&gt;Over the past two years, we&amp;#39;ve shipped 50,000 Spark Cores to customers all over the world. We learned a lot from our first product, and we&amp;#39;ve fed those learnings into the development of the Photon. The Photon is better than the Spark Core in every way, and we couldn&amp;#39;t be more excited to share it with you.&lt;/p&gt;

&lt;p&gt;The Photon is designed to be backwards compatible with the Spark Core, but there are some differences that you should be aware of if you&amp;#39;ve been using a Spark Core. Most of these changes are dramatic improvements, but they are differences nonetheless.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s a lot of content here, so if you want just the summary, here you go:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Photon includes a &lt;strong&gt;more powerful and more reliable Wi-Fi module&lt;/strong&gt;, and you&amp;#39;ll have a lot more RAM and processing power at your disposal.&lt;/li&gt;
&lt;li&gt;There are a bunch of &lt;strong&gt;new hardware peripherals&lt;/strong&gt;, and the Photon can be surface mounted (if you buy it without headers).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;We now have our own modules&lt;/strong&gt;, the PØ and the P1, for sale alongside the Photon. Great for when you want to scale up manufacturing.&lt;/li&gt;
&lt;li&gt;The firmware &lt;strong&gt;includes a full RTOS&lt;/strong&gt; (Real Time Operating System), and the Wi-Fi connectivity code will soon run alongside your code in a more intelligent way than it did on the Spark Core.&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve made some awesome changes to our firmware to separate your code from the system code so that &lt;strong&gt;over-the-air firmware updates are BLAZING fast&lt;/strong&gt; (a couple seconds to update).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;We fixed lots of bugs&lt;/strong&gt;. Most of those fixes (and many of the improvements) will be available on the Spark Core as well in a few weeks, including significant reductions in memory consumption (both FLASH and RAM).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok! Now, for those who want all the details, let&amp;#39;s dive into what&amp;#39;s changed:&lt;/p&gt;

&lt;h3&gt;Hardware&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;From Texas Instruments to Broadcom.&lt;/strong&gt; The Spark Core used a Wi-Fi module from Texas Instruments called the CC3000. The Photon includes an upgrade to our own Wi-Fi module - the PØ - which includes a Broadcom Wi-Fi chip (BCM43362) and a souped up microcontroller (STM32F205). Broadcom makes the Wi-Fi chips in most routers and phones, so their chips are best-in-class. Expect big improvements in stability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Power consumption has been dramatically reduced, and you have access to better low power modes.&lt;/strong&gt; Simply due to hardware changes (a better Wi-Fi chip and a switch-mode power supply), average power consumption has dropped from ~150mA on the Spark Core to ~80mA on the Photon. In addition, the Photon has many more options for low power modes, including modes where you can trade off Wi-Fi latency for power consumption, bringing your power consumption down closer to ~15mA. And if you&amp;#39;re creating a battery-powered product, you can put the Photon entirely to sleep and achieve power consumption as low as 160uA.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Photon is surface mountable&lt;/strong&gt;. Most of you have ordered Photons with headers, which fit into a breadboard and are great for prototyping. We also sell Photons without headers, which can be soldered directly to a circuit board either with a soldering iron or with a reflow oven (using castellated edges). When you mount the Photon down to a PCB, you also have access to the USB data lines, the LED pins, and the SETUP button pin so that you can expose those features on your own circuit board.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Photon has two different antenna options on every board.&lt;/strong&gt; Every Photon includes both a chip antenna and a u.FL connector (for external antennas). By default, the Photon will use the chip antenna, but you can switch to the u.FL connector with one line of code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Photon has lots of new peripherals available&lt;/strong&gt;. The Spark Core had UART, SPI, and I2C peripherals exposed, as well as ADCs (analog pins) and timers (PWM pins). The Photon has the same capabilities, plus a second SPI bus, two Digital to Analog Converters (DAC), a CAN bus, and I2S. These peripherals are not all supported in software yet, but they will be supported soon. The WAKEUP and VBAT pins are also exposed, which helps with low power modes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cleaner layout and fancy colors&lt;/strong&gt;. We did some fancy footwork with the hardware design to make it extra pretty. The most noticeable changes are that the LED on D7 is exactly where you&amp;#39;d expect it to be, and we&amp;#39;ve adopted a new color scheme: matte black soldermask and cyan silkscreen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A few things were removed&lt;/strong&gt;. We took off the external flash to save space (since we had a lot more internal flash to work with), and removed the A6 and 3V3* pins to make room for other new features. If you want external flash, check out our P1 module, which includes external flash inside the Wi-Fi module.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We&amp;#39;ve got our own Wi-Fi modules for manufacturing at scale.&lt;/strong&gt; The PØ, the module inside the Photon, is available for $10/unit (cloud service included). We also sell a variation called the P1 which is a tad bigger than the PØ but includes an antenna and external flash; the P1 is available for $12/unit (cloud service included). Both of these modules include the STM32F205 microcontroller, so you don&amp;#39;t need an additional processor to run your device.&lt;/p&gt;

&lt;h3&gt;Firmware&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;We decreased the time to do an Over-the-Air firmware update from more than a minute to just a few seconds.&lt;/strong&gt; One of the biggest issues with the Spark Core was that over-the-air firmware updates could be somewhat slow, taking a minute or more. This slows down development, so people would do their development locally and program over USB. We&amp;#39;ve made some improvements (detailed below) that &lt;em&gt;dramatically&lt;/em&gt; increase the speed of an OTA update so most updates now take just a couple of seconds. We hope that will speed up your development and make the cloud a bit more useful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We built a Hardware Abstraction Layer (HAL).&lt;/strong&gt; In order to compile one firmware application against two different target architectures (the Core and the Photon), we built a Hardware Abstraction Layer, or HAL, that makes it much more straightforward to port our firmware libraries to any hardware! This HAL also made possible &lt;a href=&quot;http://www.bluz.io&quot;&gt;Bluz&lt;/a&gt; and will be used heavily in the Electron. We can&amp;#39;t wait to see which hardware platforms you&amp;#39;ll adapt our firmware libraries to next!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We combined and simplified our firmware libraries into one repository.&lt;/strong&gt; Our firmware used to be broken up into three libraries: the core firmware library, the communication library, and the library of common drivers. We&amp;#39;ve now combined all of our firmware &lt;a href=&quot;https://www.github.com/spark/firmware&quot;&gt;into one repository&lt;/a&gt; and reorganized the firmware so it&amp;#39;s easier to pull out separate bits and pieces if you need them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We added an RTOS (FreeRTOS) to provide scheduling for the Wi-Fi connectivity code.&lt;/strong&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Real-time_operating_system&quot;&gt;Real-time operating systems&lt;/a&gt;, or RTOSes, provide some of the features of a full operating system but with a very small amount of overhead. Professional engineers working with microcontrollers will typically use an RTOS to add multithreading and lightweight memory management while still allowing real-time hardware interactions that a system with a full OS (e.g. Linux) would not be able to do. We&amp;#39;ve implemented FreeRTOS on the Photon so that we can run the system code (mostly connectivity stuff) and your application in two separate threads. You can also use the RTOS for your own multithreaded code; as we iterate on our firmware, we&amp;#39;ll be providing simple APIs to help you do this in an Arduino-y kind of way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We separated the system code and your application code into three separate binaries that are dynamically linked and can be reprogrammed separately.&lt;/strong&gt; A lot of the improvements in OTA speeds came from separating system and application code. The system code can be hundreds of kilobytes, whereas your application code might only be a few KB. If an OTA update requires rewriting the entire program as it does on the Core, that means we&amp;#39;re spending a lot of time downloading the same system code that&amp;#39;s already on the device. By splitting the system and application, we can provide a faster and lower-risk over-the-air firmware update.&lt;/p&gt;

&lt;p&gt;We made lots of smaller improvements to performance and stability. These improvements will be released as firmware v0.4.0, which will be available on the Spark Core as well in a few weeks. Here&amp;#39;s a comprehensive list of the improvements we&amp;#39;ve made:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enhancements:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;loop()&lt;/code&gt; iteration rate increased by 1000 times - from 200 Hz to over 200 kHz!&lt;/li&gt;
&lt;li&gt;Compiler: Removed all warnings from the compile (and made warnings as errors) so compiler output is minimal.&lt;/li&gt;
&lt;li&gt;Debugging: SWD Support, thanks to Elco Jacobs. &lt;a href=&quot;https://github.com/spark/core-firmware/pull/337&quot;&gt;#337&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spark.publish()&lt;/code&gt; returns a success value - &lt;a href=&quot;https://github.com/spark/firmware/issues/388&quot;&gt;#388&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spark.process()&lt;/code&gt; as the public API for running the system loop. &lt;a href=&quot;https://github.com/spark/firmware/issues/347&quot;&gt;#347&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sleep no longer resets (on the Photon) &lt;a href=&quot;https://github.com/spark/firmware/issues/283&quot;&gt;#283&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for application code outside of the firmware repo. &lt;a href=&quot;https://github.com/spark/firmware/issues/374&quot;&gt;#374&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MAC Address available in setup via &amp;#39;m&amp;#39; key. &lt;a href=&quot;https://github.com/spark/firmware/issues/352&quot;&gt;#352&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SoftAP setup on the Photon&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spark.sleep()&lt;/code&gt; changed to &lt;code&gt;System.sleep()&lt;/code&gt; and similarly for &lt;code&gt;deviceID()&lt;/code&gt; &lt;a href=&quot;https://github.com/spark/firmware/issues/390&quot;&gt;#390&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Listening mode uses existing serial connection if already opened. &lt;a href=&quot;https://github.com/spark/firmware/issues/384&quot;&gt;#384&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spark.publish(&amp;quot;event&amp;quot;, PRIVATE)&lt;/code&gt; shorthand - &lt;a href=&quot;https://github.com/spark/firmware/issues/376&quot;&gt;#376&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improved integrity checks for firmware images&lt;/li&gt;
&lt;li&gt;Added additional safe/recovery mode in bootloader (&amp;gt; 6.5 sec : restore factory code without clearing wifi credentials)&lt;/li&gt;
&lt;li&gt;Enabled CRC verification in bootloader before restoring/copying the firmware image from factory reset, ota downloaded area etc.&lt;/li&gt;
&lt;li&gt;Added &amp;#39;program-serial&amp;#39; to build target to enter serial ymodem protocol for flashing user firmware (Testing pending...)&lt;/li&gt;
&lt;li&gt;Cloud string variables can be re-defined &lt;a href=&quot;https://github.com/spark/firmware/issues/241&quot;&gt;#241&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Removed hard-coded limit on number of functions and variables &lt;a href=&quot;https://github.com/spark/firmware/issues/111&quot;&gt;#111&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parameterized function callbacks, lambda support for functions &lt;a href=&quot;https://github.com/spark/firmware/issues/313&quot;&gt;#311&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++ STL headers supported&lt;/li&gt;
&lt;li&gt;Can duplicate the onboard RGB LED color in firmware. &lt;a href=&quot;https://github.com/spark/firmware/issues/302&quot;&gt;#302&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WiFi.selectAntenna()&lt;/code&gt; - select between internal (chip) and external (u.FL) antenna on Photon: &lt;a href=&quot;https://github.com/spark/firmware/issues/394&quot;&gt;#394&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WiFi.resolve()&lt;/code&gt; to look up an IP address from a domain name. &lt;a href=&quot;https://github.com/spark/firmware/issues/91&quot;&gt;#91&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System.dfu()&lt;/code&gt; to reboot the core in dfu mode, until next reset or next DFU update is received.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bugfixes:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SOS calling &lt;code&gt;Spark.publish()&lt;/code&gt; in &lt;code&gt;SEMI_AUTOMATIC&lt;/code&gt;/&lt;code&gt;MANUAL&lt;/code&gt; mode&lt;/li&gt;
&lt;li&gt;Subscriptions maintained when cloud disconnected. &lt;a href=&quot;https://github.com/spark/firmware/issues/278&quot;&gt;#278&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix for events with composite names. &lt;a href=&quot;https://github.com/spark/firmware/issues/382&quot;&gt;#382&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WiFi.ready()&lt;/code&gt; returning true after &lt;code&gt;WiFi.off()&lt;/code&gt; in manual mode. &lt;a href=&quot;https://github.com/spark/firmware/issues/378&quot;&gt;#378&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Serial.peek()&lt;/code&gt; implemented. &lt;a href=&quot;https://github.com/spark/firmware/issues/387&quot;&gt;#387&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mode button not working in semi-automatic or manual mode. &lt;a href=&quot;https://github.com/spark/firmware/issues/343&quot;&gt;#343&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Time.timeStr()&lt;/code&gt; had a newline at the end. &lt;a href=&quot;https://github.com/spark/firmware/issues/336&quot;&gt;#336&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WiFi.RSSI()&lt;/code&gt; caused panic in some cases. &lt;a href=&quot;https://github.com/spark/firmware/issues/377&quot;&gt;#377&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spark.publish()&lt;/code&gt; caused SOS when cloud disconnected. &lt;a href=&quot;https://github.com/spark/firmware/issues/332&quot;&gt;#322&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TCPClient.flush()&lt;/code&gt; discards data in the socket layer also. &lt;a href=&quot;https://github.com/spark/firmware/issues/416&quot;&gt;#416&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;More to come&lt;/h4&gt;

&lt;p&gt;We still consider our platform a work-in-progress, and while this is a huge step forward for us, it&amp;#39;s still just one more step on the journey. We&amp;#39;re eager for your feedback; if you encounter bugs or want to request new features when you receive your Photon, &lt;a href=&quot;https://github.com/spark/firmware/issues&quot;&gt;create a Github issue&lt;/a&gt; or contribute a Pull Request; we&amp;#39;d love your help!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Spark is now Particle</title>
      <link>http://spark.github.io/staging-blog/2015/05/13/spark-is-now-particle/</link>
      <pubDate>Wed, 13 May 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/05/13/spark-is-now-particle</guid>
      <description>&lt;p&gt;&lt;em&gt;So which Spark are you, exactly?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I started Spark in 2012... actually, let&amp;#39;s step back further.&lt;/p&gt;

&lt;p&gt;The first company I started in 2011 was called Hex Goods. We (well, I) sold designer products (decor, accessories, etc.) online - I imagined it as a curated Etsy.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/hexgoods.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Two things remain of Hex Goods. First is a single coffee mug with the &amp;#39;Hex Goods&amp;#39; logo on it that my supportive wife bought for me when I launched the site. Second is the corporation Hex Goods, Inc., which became Hex Labs, Inc., and then became Spark Labs, Inc., the corporate name of Spark IO. And now it&amp;#39;s about to change again.&lt;/p&gt;

&lt;p&gt;In early 2012, I shut down Hex Goods and started Spark. Actually, I started &amp;quot;Switch Devices&amp;quot;, which was the original name of Spark. Spark started as a connected lighting company, not an Internet of Things platform. I thought &amp;quot;Switch&amp;quot; was a fun name because of its double meaning: a lightswitch, but also a &amp;quot;switch&amp;quot; in perspective for connected products. Unfortunately, some other folks had &lt;a href=&quot;http://www.forbes.com/sites/michaelkanellos/2014/12/02/its-lights-out-for-led-startup-switch/&quot;&gt;a thing called Switch&lt;/a&gt; (although it looks like they went out of business), so I started looking for a new name.&lt;/p&gt;

&lt;p&gt;Spark was one of a handful of names I was considering; the others were Torch and Candle. I picked Spark because I felt like it provided more flexibility going forward, and again I liked the double meaning: this time, a &amp;quot;Spark&amp;quot; of light plus a &amp;quot;Spark&amp;quot; of inspiration. Switch Devices became Spark Devices.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-upgrade-your-lights-with-wi-fi-and-apps&quot;&gt;Spark Socket&lt;/a&gt; launched on Kickstarter in late 2012, and was unsuccessful. Over the following six months, we pivoted from a consumer IoT product to an IoT platform for engineers and developers. The name Spark still felt appropriate (now it&amp;#39;s a &amp;quot;Spark&amp;quot; of electricity instead of lighting), but we bought a new domain and changed from Spark Devices to Spark IO shortly after our Kickstarter campaign for the Spark Core, because we weren&amp;#39;t really in the business of devices any more.&lt;/p&gt;

&lt;p&gt;Spark IO served us well for a while. It was a great brand with strong meaning and lots of positive connotations; it&amp;#39;s short, easy to remember, and easy to pronounce.&lt;/p&gt;

&lt;p&gt;Unfortunately, lots of other people feel the same way about Spark.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/allthesparks.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;If you search &amp;#39;Spark&amp;#39; on the USPTO&amp;#39;s &lt;a href=&quot;http://tmsearch.uspto.gov/&quot;&gt;Trademark Electronic Search System&lt;/a&gt;, you will find 681 live trademarks that include the word Spark. These trademarks are typically not in conflict with one another because each covers a narrow industry, and those narrow industries theoretically don&amp;#39;t overlap. Except when they do.&lt;/p&gt;

&lt;p&gt;In our case, there are four Sparks that create confusion for us:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spark.apache.org/&quot;&gt;Apache Spark&lt;/a&gt;, a popular tool for working with big data&lt;/li&gt;
&lt;li&gt;Autodesk&amp;#39;s &lt;a href=&quot;http://spark.autodesk.com/&quot;&gt;Spark 3D printer platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sparkfun.com/&quot;&gt;SparkFun&lt;/a&gt;, one of the top retailers for hobbyist/DIY electronics&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.spark.co.nz/&quot;&gt;Spark NZ&lt;/a&gt;, a cellular carrier in New Zealand.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these Sparks creates confusion in a different way. We frequently get people popping into our IRC channel #spark and asking questions about big data. Autodesk will soon be selling 3D printers to the same customers that we sell IoT development tools to: R&amp;amp;D groups and design firms. SparkFun is an amazing company that we&amp;#39;ve wanted to work with forever but the concern about brand confusion was too great. And now that we&amp;#39;ve got a cellular platform with the &lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-electron-cellular-dev-kit-with-a-simple-data/&quot;&gt;Electron&lt;/a&gt;, I&amp;#39;ve been expecting Spark NZ&amp;#39;s lawyers to be calling us any day.&lt;/p&gt;

&lt;p&gt;As we&amp;#39;ve grown as a company, the scope of our business is growing, and we&amp;#39;re bumping into more Sparks. So rather than trying to fight it, we&amp;#39;re making a change. As of May 13, 2015, Spark is now Particle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/particle.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Our new name Particle gives us plenty of room to grow. Once again, we&amp;#39;ve got a double meaning: a &amp;quot;particle&amp;quot; is a single discreet unit within a larger system, just like our dev kits and devices on our platform are single units in a greater whole. It also suggests that we make physical things. We&amp;#39;ve named our new dev kits after elementary particles — Photon and Electron — and we&amp;#39;ll continue that naming scheme as we come out with new products.&lt;/p&gt;

&lt;p&gt;Expect to see changes in our platform to reflect the new name over the next few weeks. You can now find us at &lt;a href=&quot;http://www.particle.io&quot;&gt;www.particle.io&lt;/a&gt;, and our API is available at https://api.particle.io (although the old API at api.spark.io will still work for quite some time). We&amp;#39;ll be switching our Facebook/Twitter/Github/IRC/etc. accounts in the next week or two. When changes are to be made in software, we&amp;#39;ll give you plenty of advanced notice, especially when we&amp;#39;re deprecating old things.&lt;/p&gt;

&lt;p&gt;Thank you again for all of your support, and thanks for joining us on our journey from tiny start-up to... whatever it is we&amp;#39;ll become next.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Zach and the... Particle team&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Defeat Ultron with your own Iron Man Arc Reactor</title>
      <link>http://spark.github.io/staging-blog/2015/05/05/spark-reactor/</link>
      <pubDate>Tue, 05 May 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/05/05/spark-reactor</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/spark-reactor.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Last week, the Avengers: Age of Ultron premiered in the US. We were pretty excited about it, so we decided to honor our favorite heroic maker, Tony Stark.&lt;/p&gt;

&lt;p&gt;(Like a true DIY-er, Tony builds things with what he has, in a cave, from a box of scraps.)&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/iron-man-cave-suit.gif&quot;&gt;&lt;/div&gt;

&lt;p&gt;In honor of Iron Man and his Avengers buddies, we built the Repulsor and Arc Reactor - or as we like to call it, the Spark Reactor.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Ljun-rWNOmE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Want to build one of your own? We’ll break down how to build and program the Repulsor, the servo, and the Spark Reactor. &lt;/p&gt;

&lt;h4&gt;The Repulsor&lt;/h4&gt;

&lt;p&gt;The Repulsor is made of a &lt;a href=&quot;https://store.spark.io/?product=spark-core&amp;amp;utm_source=blog&amp;amp;utm_medium=product&amp;amp;utm_campaign=ironman&quot;&gt;Core&lt;/a&gt; and &lt;a href=&quot;https://store.spark.io/?product=internet-button&amp;amp;utm_source=blog&amp;amp;utm_medium=product&amp;amp;utm_campaign=ironman&quot;&gt;Internet Button&lt;/a&gt;. This project will also be easy to replicate with the new &lt;a href=&quot;https://store.spark.io/?product=spark-photon&amp;amp;utm_source=blog&amp;amp;utm_medium=product&amp;amp;utm_campaign=ironman&quot;&gt;Photon&lt;/a&gt;. You can solder a JST connector onto the back of the Button if you don&amp;#39;t want to deal with wires.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/repulsor.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Repulsor uses the &lt;a href=&quot;https://store.spark.io/?product=internet-button&amp;amp;utm_source=blog&amp;amp;utm_medium=product&amp;amp;utm_campaign=ironman&quot;&gt;Internet Button&lt;/a&gt;&amp;#39;s built-in accelerometer to determine what position your hand is in. It sets its colors and sounds based on the button&amp;#39;s orientation. Therefore, it will only &amp;quot;charge&amp;quot; when your hand is holding it, USB-port down, at about a 30 degree angle from the ground. It will only be &amp;quot;fully charged&amp;quot; when your hand is at a 90 degree angle from the ground. It will only &amp;quot;discharge&amp;quot; when fully charged and thrust forward.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;https://vine.co/v/eZ5KXKQxEew/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Upon discharge, the Repulsor publishes a &lt;code&gt;fire_repulsor&lt;/code&gt; event to the cloud. Basically, it notifies the cloud that something happened, and any devices or websites listening in for that event get the word. You can see the code for the Repulsor below:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/cmsunu28/f06e213f12389e08374f.js&quot;&gt;&lt;/script&gt;

&lt;h4&gt;The Servo&lt;/h4&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/spark-reactor-servo.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;While I was building the Repulsor, my good buddy-- Office Manager James Jarvey-- was building simple servo that would listen in for the &lt;code&gt;fire_repulsor&lt;/code&gt; event.&lt;/p&gt;

&lt;p&gt;James wired the servo up like this...&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/spark-reactor-servo-fritzing.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;...And loaded the following code to his own Spark Core:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/cmsunu28/6476e253d7a2b93d333c.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The servo is subscribed to the cloud, listening specifically for the &lt;code&gt;fire_repulsor&lt;/code&gt; event. Note that even though the Core was claimed to James&amp;#39;s account, it can still listen for a &lt;a href=&quot;docs&quot;&gt;public event&lt;/a&gt; published from someone else&amp;#39;s Core, in this case, mine. We could also have made the event private and loaded this code to a core on my account instead. If you want to do that, then uncomment and comment the indicated code in each app to change the privacy of subscribe and publish.&lt;/p&gt;

&lt;p&gt;When I fire the repulsor, the &lt;code&gt;fire_repulsor&lt;/code&gt; event is published. The servo gets wind of that event and triggers the `` function, which in turn tells the servo to spasm.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;https://vine.co/v/eZ5qI0I2TWE/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h4&gt;The Spark Reactor&lt;/h4&gt;

&lt;p&gt;We also made what we&amp;#39;re calling the Spark Reactor, a chest piece to wear when you fire your repulsor.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;https://vine.co/v/eZ5q2zLIbBV/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The Spark Reactor breathes blue-tinted light, and it flashes yellow when the repulsor is fired.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;https://vine.co/v/eZ5he1BVPJX/embed/simple&quot; width=&quot;600&quot; height=&quot;600&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;https://platform.vine.co/static/scripts/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The basic principle behind the Spark Reactor is similar to the servo-- it is subscribed to the cloud for the &lt;code&gt;fire_repulsor&lt;/code&gt; event. When it hears that that event is published, it triggers the &lt;code&gt;lightResponse&lt;/code&gt; function, which changes the state of the Spark Reactor so that it flashes yellow.&lt;/p&gt;

&lt;p&gt;Because math is awesome, this program uses a sin function to calculate the color and brightness of the LED as it breathes, and a linear function for the flash response. This means you can change the parameters a bit if you need the LED to be faster, slower, or a different color.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/cmsunu28/9beab454c7db8f43a838.js&quot;&gt;&lt;/script&gt;

&lt;h4&gt;Including the Spark Button Library&lt;/h4&gt;

&lt;p&gt;When you create these apps, don&amp;#39;t forget to include the Spark Button library.&lt;/p&gt;

&lt;p&gt;After you paste the code into your &lt;a href=&quot;http://build.spark.io/?utm_source=blog&amp;amp;utm_medium=build&amp;amp;utm_campaign=ironman&quot;&gt;build environment&lt;/a&gt;, save the app and go to the library drawer on the botton left. Select the Spark Button library.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/library-select.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Then, select &amp;quot;Include In App.&amp;quot;&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/library-include.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Select your app.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/library-include-app.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;An &lt;code&gt;#include&lt;/code&gt; statement will get added to your app:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/library-include-statement.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Feel free to delete this if it is already there; the important thing is that the library is now a part of your app.&lt;/p&gt;

&lt;h4&gt;In Conclusion...&lt;/h4&gt;

&lt;p&gt;Put it all together, and you&amp;#39;re ready to defeat Ultron and reclaim your bananas. Guaranteed defeat of action-figure-sized Ultron only. Have fun!&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn&quot; href=&quot;https://store.spark.io/?product=internet-button&amp;utm_source=blog&amp;utm_medium=button&amp;utm_campaign=ironman&quot;&gt;Buy an Internet Button&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Announcing Bluz, Spark's first Compound</title>
      <link>http://spark.github.io/staging-blog/2015/04/15/announcing-bluz/</link>
      <pubDate>Wed, 15 Apr 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/04/15/announcing-bluz</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/bluz.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Spark ecosystem is growing. Announcing Bluz, a Spark-powered BLE dev kit for creating Bluetooth Low Energy connected products. But this time, we didn&amp;#39;t make it - one of you did. Bluz is the first Spark Compound - a product in the Spark ecosystem created not by us, but by you. And we hope it&amp;#39;s the first of many.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn&quot; href=&quot;https://www.kickstarter.com/projects/264813863/bluz-bluetooth-made-smarter?utm_source=Spark&amp;utm_medium=blog&amp;utm_campaign=Bluz&quot;&gt;Back Bluz on Kickstarter&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Bluz: the first Spark Compound&lt;/h4&gt;

&lt;p&gt;Back in summer 2014, a gentleman named Eric Ely started a thread about &lt;a href=&quot;https://community.spark.io/t/sparkle-a-bluetooth-le-powered-spark-core-clone/6108&quot;&gt;SparkLE&lt;/a&gt; in our forums, and quickly got some great feedback for a BLE-powered Spark Core clone. To date, the thread has 109 posts and 2.2K views, and 26 community members have leaned in to provide feedback. Lots of people wanted SparkLE.&lt;/p&gt;

&lt;p&gt;A few months later, Eric and his cousin Ben launched &lt;a href=&quot;https://www.kickstarter.com/projects/264813863/goglove-life-has-a-soundtrack-control-yours/&quot;&gt;GoGlove&lt;/a&gt;, a SparkLE-powered wearable remote, on Kickstarter. Once the campaign was successfully funded, Eric approached our team about commercializing SparkLE. We gave him the go ahead. He renamed it Bluz and started generating some buzz for the project.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/bluz_diagram.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Eric has been fantastic to work with. He&amp;#39;s a talented engineer, and he&amp;#39;s done a great job of porting the Spark &amp;quot;experience&amp;quot; to BLE while adding a unique set of features that make Bluz really compelling on its own. Bluz can run for months on a coin cell battery. It can communicate with a computer, a smartphone, or directly to the cloud (using a Core/Photon/Electron as a gateway). Because Bluz is part Spark, it will integrate completely and seamlessly into the Spark environment. You can use the same Web IDE, Webhooks, Dashboard, Tinker app, SparkJS, and all the other Spark tools. And it hits all the criteria for a great dev kit: it&amp;#39;s easy to use, affordable, and open source. You should seriously consider grabbing a few.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn&quot; href=&quot;https://www.kickstarter.com/projects/264813863/bluz-bluetooth-made-smarter?utm_source=Spark&amp;utm_medium=blog&amp;utm_campaign=Bluz&quot;&gt;Back Bluz on Kickstarter&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;A call for Compounds&lt;/h4&gt;

&lt;p&gt;Bluz is the first-ever &amp;quot;Compound&amp;quot; - a board that joins the Spark ecosystem but is not of our making. Bluz is part us and part Eric - a &amp;quot;compound&amp;quot; of the two. It&amp;#39;s a better product than either of us could have made on our own, and we hope to see more of them.&lt;/p&gt;

&lt;p&gt;We&amp;#39;d love to see other Compounds, and if you&amp;#39;re interested in making one, we&amp;#39;d love to support it. Consider this a call for Compounds.&lt;/p&gt;

&lt;p&gt;If you want to make a dev kit that&amp;#39;s powered by Spark, here&amp;#39;s what you should do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a &lt;a href=&quot;https://community.spark.io&quot;&gt;thread on our community forum&lt;/a&gt; to present your idea&lt;/li&gt;
&lt;li&gt;Collect feedback to see if it has legs&lt;/li&gt;
&lt;li&gt;If there&amp;#39;s clear interest from the community, come &lt;a href=&quot;mailto:hello@spark.io&quot;&gt;talk to us&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We&amp;#39;ll help with your Kickstarter campaign and provide advice on supply chain, manufacturing, logistics, and distribution&lt;/li&gt;
&lt;li&gt;We charge a flat $2/device to provide access to our cloud platform (a one-time fee which covers the device for its entire lifetime)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you want to see Spark in new environments? Ethernet? Mesh? Sub-ghz? Come &lt;a href=&quot;https://community.spark.io&quot;&gt;tell us about your ideas&lt;/a&gt; and we&amp;#39;ll help you bring them to life!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Meet the Electron: a cellular dev kit with a simple data plan</title>
      <link>http://spark.github.io/staging-blog/2015/02/25/meet-the-electron/</link>
      <pubDate>Wed, 25 Feb 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2015/02/25/meet-the-electron</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/electron_city.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Dearest Spark Friends,&lt;/p&gt;

&lt;p&gt;Today is a very exciting day! We’re proud to announce the newest addition to the Spark family — the Electron, our cellular development kit that we hope will open up the Internet of Things to a whole new category of connected products. Best of all, we’re going back to our roots and launching the Electron on Kickstarter, the same crowdfunding platform where we first met so many of you way back in May of 2013.  Visit our Kickstarter campaign to pre-order an Electron and be one of the first to own this amazing addition to the Spark lineup.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kickstarter.com/projects/sparkdevices/spark-electron-cellular-dev-kit-with-a-simple-data?utm_source=KSUpdate&amp;utm_medium=Post&amp;utm_campaign=Electron&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/back-button.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Electron works a lot like our other development kits, the Spark Core and Photon, except it connects to the Internet using a 2G or 3G cellular connection instead of Wi-Fi. This means it works anywhere your phone does, and can go wherever you need it to — your backyard, your bicycle, or your banana grove.&lt;/p&gt;

&lt;h2&gt;Back to Kickstarter&lt;/h2&gt;

&lt;p&gt;Throughout the past two years, we’ve grown our team from 4 to 24, raised venture capital, and shipped tens of thousands of Spark Cores to engineers, designers, and product creators all over the world. We’re grown up a bunch since our tender years, which begs the question —why Kickstarter?&lt;/p&gt;

&lt;p&gt;The reason we’re so excited about the Electron is that we think the world of builders and creators really needs it. The cellular version of the Internet of Things (often called &amp;quot;Machine to Machine&amp;quot; or &amp;quot;M2M&amp;quot;) has quite a few barriers, and it&amp;#39;s not set up for the little guys (or even the medium-sized guys). For most companies outside of Tier 1 handset and automative manufacturers, building a cellular-connected product is nearly impossible due to opaque pricing, drawn out negotiations, high volume expectations, and complicated certifications.&lt;/p&gt;

&lt;p&gt;We’re back on Kickstarter to change all that. Our hope is that by rallying support around a development experience that is affordable, easy to use, and open, we can disrupt the cellular industry and open up the floodgates to a new generation of incredible connected products. The best way to disrupt an industry is to raise a rumpus, and we think that Kickstarter is the perfect venue to do just that.&lt;/p&gt;

&lt;p&gt;The campaign is now live, and we’d love if you helped us spread the word by sharing with your friends and family!&lt;/p&gt;

&lt;h2&gt;Forward looking, backwards compatible&lt;/h2&gt;

&lt;p&gt;We’re also happy to announce that the Electron provides a whole new way to connect to the world while maintaining compatibility with the accessories, software, and development tools you’re already familiar with.&lt;/p&gt;

&lt;p&gt;With the introduction of Spark OS, the Photon, and now the Electron, Spark has become much more than the development kit we launched in 2013. We’ve got our sights set on changing the way people and things everywhere connect with one another, which is only possible with the help, enthusiasm, and support of you all.&lt;/p&gt;

&lt;p&gt;Bottom line: we love you guys, and we’re proud and excited to take this leap into unexplored territory together.&lt;/p&gt;

&lt;p&gt;If you have feedback, please send it to our way — we’d love to hear from you :-)&lt;/p&gt;

&lt;p&gt;High fives all around.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/highfives.gif&quot;&gt;&lt;/p&gt;

&lt;p&gt;Cheers and Spark love,&lt;/p&gt;

&lt;p&gt;Zach and the Spark team&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>WarSting: A Wi-Fi scanning sword for Hobbits.</title>
      <link>http://spark.github.io/staging-blog/2014/12/17/warsting-a-wifi-scanning-sword-for-hobbits/</link>
      <pubDate>Wed, 17 Dec 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/12/17/warsting-a-wifi-scanning-sword-for-hobbits</guid>
      <description>&lt;p&gt;Today, &lt;em&gt;The Hobbit: The Battle of Five Armies&lt;/em&gt; hits the theaters. Bilbo, our favorite hairy-footed protagonist, will face formidable foes armed with his mythical sword, Sting.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/bilbo-sting.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Sting&amp;#39;s particular magic is that it glows blue whenever orcs or goblins are nearby. This is useful for hobbits, but in today&amp;#39;s day and age, a real Sting would be unfortunately boring.&lt;/p&gt;

&lt;p&gt;But what if Sting could detect unsecured Wi-Fi networks?&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/sting-meme.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;To celebrate the launch of the new &lt;em&gt;Hobbit&lt;/em&gt; flick, we made a version of Sting that turns blue near unsecured Wi-Fi networks. And when you slash the sword, Sting will jump on the network, and publish a message: &amp;quot;{YOUR WI-FI NETWORK} has been vanquished!&amp;quot;&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;iframe width=&quot;750&quot; height=&quot;422&quot; src=&quot;//www.youtube.com/embed/rmjkUv5OtLM&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&amp;nbsp;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;This hack is inspired by one of our favorite recent projects, &lt;a href=&quot;http://www.wired.com/2014/08/how-to-use-your-cat-to-hack-your-neighbors-wi-fi/&quot;&gt;WarKitteh&lt;/a&gt;, in which a Siamese cat named Coco was enlisted to wardrive his owner&amp;#39;s neighborhood. Hobbits are known to travel further than the typical housecat, and therefore make great wardrivers.&lt;/p&gt;

&lt;h2&gt;Step 1: The ingredients&lt;/h2&gt;

&lt;p&gt;To make your own WarSting, you&amp;#39;ll need two things: a &lt;a href=&quot;http://www.amazon.com/The-Bridge-Direct-Hobbit-Deluxe/dp/B008914XZA/&quot;&gt;toy Sting&lt;/a&gt;, and a &lt;a href=&quot;https://store.spark.io&quot;&gt;Spark Core&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/knolling-sting-topdown.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;A toy company named &lt;em&gt;The Bridge Direct, Inc.&lt;/em&gt; sells (next to Power Rangers and Justin Bieber action figures) &lt;a href=&quot;http://www.amazon.com/gp/product/B008914XZA/&quot;&gt;a $29.99 plastic replica Sting sword&lt;/a&gt;. &lt;em&gt;WITH LIGHTS AND SOUND!&lt;/em&gt; This is a great hack because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It has &lt;em&gt;lights and sound&lt;/em&gt;. When you press a button, the sword lights up blue, and when you slash the sword, it makes fun slashing sounds. These functions are hackable.&lt;/li&gt;
&lt;li&gt;It&amp;#39;s pretty cheap.&lt;/li&gt;
&lt;li&gt;It&amp;#39;s a sword.&lt;/li&gt;
&lt;li&gt;It&amp;#39;s held together with screws, which gives us access to the internals.&lt;/li&gt;
&lt;li&gt;There&amp;#39;s a bit of extra space in the hilt that we can cram stuff into.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The other thing you&amp;#39;ll need is a &lt;a href=&quot;https://store.spark.io&quot;&gt;Spark Core&lt;/a&gt;, a Wi-Fi development kit - sort of like a Wi-Fi connected Arduino. It&amp;#39;s a reprogrammable chip that has a Wi-Fi module on board and can interact with sensors and actuators, like the ones in the sword.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/core-and-hilt.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;This is what we do, so we have a whole bunch of them sitting around. If you want a Core, you can get them on &lt;a href=&quot;https://store.spark.io&quot;&gt;our website&lt;/a&gt; for $39 each.&lt;/p&gt;

&lt;h2&gt;Step 2: Disassemble the sword&lt;/h2&gt;

&lt;p&gt;All of the electronics in the sword are contained in the hilt, which can be accessed by unscrewing a couple of screws. Here&amp;#39;s what you&amp;#39;ll find inside:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/closeup-hilt.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;There are basically four components that matter here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Two AA batteries, which power the electronics. Every AA battery provides 1.5V, so when two are placed in serial, you&amp;#39;ve got 3V. If you use &lt;a href=&quot;http://www.amazon.com/Energizer-L91BP-8-Ultimate-Lithium-Battery/dp/B0000DC4EL/&quot;&gt;Energizer Ultimate Lithium batteries&lt;/a&gt;, which run at 1.7V out of the box, you&amp;#39;ve got 3.4V, which is enough to get a bright blue light from the LEDs (3V will work but the light will be quite dim).&lt;/li&gt;
&lt;li&gt;A couple of blue LEDs that are pointed up into the sword to make it glow&lt;/li&gt;
&lt;li&gt;A button on the front that turns on the sword&lt;/li&gt;
&lt;li&gt;A &amp;quot;vibration switch&amp;quot; that detects when the sword is swung. This is basically a spring inside a metal tube; when you swing the sword, the spring bends and hits the tube around it, which completes a circuit&lt;/li&gt;
&lt;li&gt;A tiny sound system that makes one of a few tinny &lt;em&gt;SLASH&lt;/em&gt; and &lt;em&gt;CLANG&lt;/em&gt; sounds when you swing the sword&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Step 3: Splice in the Core&lt;/h2&gt;

&lt;p&gt;We want the Core to be in control of whether the LEDs are on and whether the little sound circuit is making a sound. We also want it to detect the signal from the vibration switch. Here&amp;#39;s a diagram of our circuit:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/warsting-schematic.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;This is an overly simplistic diagram, and isn&amp;#39;t a totally accurate picture of what&amp;#39;s going on here. We&amp;#39;re not hooking up to a single LED; we&amp;#39;re hooking into a pre-existing subsystem which actually includes multiple LEDs. And we&amp;#39;re also not hooking up to a speaker; we&amp;#39;re hooking up to a whole system for producing sounds where simply sending voltage to a black box of a circuit will create a &lt;em&gt;SLASH&lt;/em&gt; sound.&lt;/p&gt;

&lt;p&gt;This hack is pretty straightforward; it&amp;#39;s simply a matter of cutting the wires in the sword and soldering the wires to the pins of the Spark Core.&lt;/p&gt;

&lt;h2&gt;Step 4: Reprogram the Core with network-vanquishing firmware&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve written a firmware application designed for the WarSting that scans for unsecured networks, makes sounds, blinks the LEDs, and publishes messages from the unsecured network. All in, it&amp;#39;s about three hundred lines of code. Here&amp;#39;s a sample in a gist:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/zsup/bfa7726adf375f4a744f.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;In addition to this firmware application, you&amp;#39;ll have to include the &lt;code&gt;wifiscan.h&lt;/code&gt; library, which scans for networks. The complete firmware can be found on our Github repo for WarSting:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.github.com/spark/warsting&quot;&gt;www.github.com/spark/warsting&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Step 5: Reassemble the sword&lt;/h2&gt;

&lt;p&gt;Put the sword back together. This is the opposite of step 2.&lt;/p&gt;

&lt;h2&gt;Step 6: Vanquish Wi-Fi networks&lt;/h2&gt;

&lt;p&gt;Power up your new WarSting, and when the sword turns blue, start slashing! If you have a few unsecured networks nearby, WarSting will vanquish them one at a time, until they&amp;#39;ve all been vanquished, after which the sword will no longer glow blue.&lt;/p&gt;

&lt;h2&gt;In conclusion&lt;/h2&gt;

&lt;p&gt;So there you have it! If you want to build your own WarSting or create your own wardriving product, fork our Github repo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.github.com/spark/warsting&quot;&gt;www.github.com/spark/warsting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get a Spark Core (or our recently announced Photon), visit our store here:&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn&quot; href=https://store.spark.io/?utm_source=SparkBlog&amp;utm_medium=blog&amp;utm_term=PreOrder&amp;utm_content=Button&amp;utm_campaign=WarSting&gt;Buy a Core or Photon now&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy your hobbit journey, and if you&amp;#39;re interested in more fun projects, check out the &lt;a href=&quot;http://spark.hackster.io&quot;&gt;Spark project site on Hackster&lt;/a&gt; for all kinds of inspiration!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Holiday Cheer Lights</title>
      <link>http://spark.github.io/staging-blog/2014/12/12/holiday-lights/</link>
      <pubDate>Fri, 12 Dec 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/12/12/holiday-lights</guid>
      <description>&lt;p&gt;Happy Holidays from Spark!&lt;/p&gt;

&lt;p&gt;Although Spark Headquarters is in San Francisco, CA, our team is usually spread out all over the globe. Last week was the first time that every single Spark team member was in the same room at the same time - an occassion which called for our first big holiday party and hackathon!  It was awesome, and we&amp;#39;ll be posting more fun projects from the hackathon soon.  In decorating for the party, Christine naturally insisted our tree be internet connected, and so we excitedly set off to work, creating something worthy of a Spark holiday party.  Here&amp;#39;s what we built:&lt;/p&gt;

&lt;h2&gt;Internet connected cheer lights and buttons!&lt;/h2&gt;

&lt;p&gt;Since it was a party, the lights needed to be something that would engage everyone and be interactive.  &lt;/p&gt;

&lt;p&gt;We had plenty of Spark Cores, so naturally the decorations could react to input from anywhere in the world. But what should we use as input? If only there were something worldwide...something contagious...something appropriate for the season...But of course!  The decorations would be powered by and generate Holiday Cheer.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;
&lt;a href=&quot;http://www.hackster.io/middleca/holiday-cheer-lights&quot;&gt;
    &lt;img src=&quot;http://spark.github.io/staging-blog/images/20141212/tree_crop.png&quot;&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;I hope if you&amp;#39;re reading this that you&amp;#39;re feeling inspired to make your own Holiday Cheer system!  Jump over to the &lt;a href=&quot;http://www.hackster.io/middleca/holiday-cheer-lights&quot;&gt;Holiday Cheer Lights build post on Hackster to read more about how we put it together.&lt;/a&gt;&lt;/p&gt;

&lt;iframe class=&quot;full&quot; width=&quot;750&quot; height=&quot;422&quot; src=&quot;//www.youtube.com/embed/qrIeK0qqG94&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;p&gt;Happy Holidays!&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Introducing the $19 Photon</title>
      <link>http://spark.github.io/staging-blog/2014/11/12/introducing-the-19-dollar-photon/</link>
      <pubDate>Wed, 12 Nov 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/11/12/introducing-the-19-dollar-photon</guid>
      <description>&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/photon-banner.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Dearest Spark friends,&lt;/p&gt;

&lt;p&gt;Our new hardware is here! In case you&amp;#39;re not feeling the length of this post, here&amp;#39;s the short version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Today we&amp;#39;re launching &lt;strong&gt;our new development kit, the Photon&lt;/strong&gt;! It&amp;#39;s the spiritual sequel to the Spark Core (backwards compatible), and it&amp;#39;s faster, better, and cheaper. You can pre-order it now for $19, and we&amp;#39;re targeting March 2015 for delivery.&lt;/li&gt;
&lt;li&gt;We&amp;#39;re also selling &lt;strong&gt;our own Wi-Fi modules - the P0 and P1 - for $10 and $12&lt;/strong&gt; respectively, in low volumes (10 units). These modules come with free cloud service, so they&amp;#39;ll do everything the Photon does, and they&amp;#39;ll come pre-programmed with our firmware. We&amp;#39;re doing this to help you transition from a prototype to a manufacturable product.&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve got accessories from our friends at &lt;strong&gt;IDEO, Adafruit, Seeed Studio, and Fritzing&lt;/strong&gt;! They love us, and we love them.&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve also launched &lt;strong&gt;&lt;a href=&quot;http://www.github.com/spark/spark-dev&quot;&gt;Spark Dev&lt;/a&gt;, our professional IDE&lt;/strong&gt; built on Github&amp;#39;s open source Atom project. Available today!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a class=&quot;btn&quot; href=https://store.spark.io/?utm_source=SparkBlog&amp;utm_medium=blog&amp;utm_term=PreOrder&amp;utm_content=Button&amp;utm_campaign=BlogButton&gt;Pre-order a Photon for $19&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now for the long version:&lt;/p&gt;

&lt;p&gt;A year ago we began shipping Spark Cores to our Kickstarter backers and our community. We&amp;#39;ve now shipped tens of thousands of Cores, and our platform has grown significantly. We built web development tools for hardware; we built a cloud back-end and open sourced it; we&amp;#39;ve iterated on our firmware, and have accepted dozens of pull requests from the community to improve our software.&lt;/p&gt;

&lt;p&gt;Our community of developers, engineers, designers, students, and artists has grown to more than 20,000. Our team has grown to more than 20 people, including a number of our top community members, and spans the world, from our headquarters in San Francisco and office in Minneapolis to Norway, Poland and Shenzhen.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ve learned a ton, and we&amp;#39;ve had the opportunity to build that knowledge and the amazing feedback we&amp;#39;ve received over the last year into a new product, which we&amp;#39;re launching today. Please welcome to the Spark family our newest addition: &lt;strong&gt;the Photon!&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/Photon.jpg&quot;&gt;&lt;/div&gt;

&lt;h2&gt;The Photon: $19 of betterness&lt;/h2&gt;

&lt;p&gt;The Spark Core was a great beginning for us, and was the first affordable and widely available open source Wi-Fi solution on the market. But technology moves quickly, and our reach as a company has grown; we now have access to chips and tech that wasn&amp;#39;t previously available to us. We&amp;#39;re excited to bring that new tech to you in the form of the spiritual sequel to the Spark Core: the Photon, and its brain, the P0.&lt;/p&gt;

&lt;p&gt;If you take a look around, you&amp;#39;ll find that all of the best connected products on the market are built with the same chipset: Broadcom&amp;#39;s BCM43362. This chip powers the Nest Protect, LIFX, and more. Broadcom&amp;#39;s chips are in most of the Wi-Fi routers on the market as well, which means they can offer the best router compatibility, the most experience, and the most stable solution on the market.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/comparison.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;The Photon adapts the architecture we built around the CC3000 to our new Wi-Fi module, which we call the P0. The P0 pairs Broadcom&amp;#39;s BCM43362 Wi-Fi chip with an STM32F205 microcontroller. Besides being a major step forward in reliability, the Photon is more powerful than the Core; we&amp;#39;ve ramped up from 72Mhz to 120Mhz, from 128KB of flash to 1MB of flash, and from 20KB of RAM to 128KB of RAM. And it&amp;#39;s also a good deal cheaper; you can now pre-order a Photon for $19.&lt;/p&gt;

&lt;p&gt;The Photon is nearly 100% backwards compatible with the Spark Core, as well as having additional capabilities such as a Digital to Analog Converter (DAC) peripheral and an exposed wake-up pin for low power modes. Plus the software that you&amp;#39;ve written for the Spark Core should work seamlessly with the Photon, although we&amp;#39;ll need your help testing our firmware to get as close as possible to 100% compatibility. Furthermore, we&amp;#39;re rebuilding our firmware upon a Hardware Abstraction Layer (HAL) so that we can support a variety of hardware platforms in the future.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/P10.jpg&quot;&gt;&lt;/div&gt;

&lt;h2&gt;The P0: our $10 Wi-Fi module, with free cloud service&lt;/h2&gt;

&lt;p&gt;For many of you the Core and the Photon are not simply for building projects. If you want to scale, you need something that will help you transition from prototype to production, and we designed the Photon with that journey in mind.&lt;/p&gt;

&lt;p&gt;When you&amp;#39;re ready to build your Photon-based product at scale, you can transition from the Photon to the P0. The P0 is the same module that powers the Photon; it comes pre-loaded with our firmware, is affordable in small volumes ($10 each for 10 units), and can be purchased in 500-unit reels for manufacturing. Supply the P0 with a regulated 3.3V power source, add a button and an RGB LED, and connect an antenna and a half dozen small passive components, and you&amp;#39;re ready to go.&lt;/p&gt;

&lt;p&gt;For those who want nothing to do with antennas or RF or any of that nonsense, we&amp;#39;ll also be selling the P1, a larger version of the P0 that includes both a u.FL connector and an antenna on the board (as well as additional external flash), for $12 each.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re interested in purchasing larger volumes, please &lt;a href=&quot;mailto:sales@spark.io&quot;&gt;contact us&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/Screenshotkits copy.jpg&quot;&gt;&lt;/div&gt;

&lt;h2&gt;Accessories from our friends at IDEO, Adafruit, Seeed Studio, and Fritzing&lt;/h2&gt;

&lt;p&gt;The Photon is at its best when it teams up with others, so we called on a few friends to make sure it doesn&amp;#39;t get lonely.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ve invited along some of the top names in prototyping and development tools. Check this out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Adafruit Spark NeoPixel Ring Kit&lt;/strong&gt;:  This NeoPixel ring adds 24 individually addressable (and gorgeous!) LEDs to your Photon or Core. Upload the Neopixel library code and get started!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Grove Starter Kit for Spark Photon from Seeed Studio&lt;/strong&gt;: An easy to use plug-and-play kit for the Photon - one base shield lets you connect a variety of included modules&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fritzing Internet of Things Kit&lt;/strong&gt;: The ultimate IoT entry point for makers and students with easy to follow example projects themed around the &amp;quot;Smart Home&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Motion Shield in collaboration with IDEO&lt;/strong&gt;: This intelligent stackable stepper-motor shield (design and engineering by IDEO)  will add internet controlled motion to all of your projects - whether race car or robotic arm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;re also revamping all of our own shields; while any Spark Core shield will work with the Photon, they&amp;#39;ll all get a bit better. A couple are going through some major changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Programmer Shield&lt;/strong&gt;: A complete re-design of the JTAG Shield, incorporating an FTDI programmer chip to eliminate the need for a separate programmer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Power Shield&lt;/strong&gt;: Complete re-design of the Battery Shield, no longer shaped like a mustache, and designed for true low-power performance. We&amp;#39;ll also ship these for free to anyone who was dissatisfied with our previous mustache-shaped Battery Shield. Thanks for your patience!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Spark Dev: a professional IDE built on Github&amp;#39;s Atom&lt;/h2&gt;

&lt;p&gt;Our web IDE gave us the ability to provide an Arduino-like development experience in a web browser. When you start to grow beyond simple projects, however, the limitations of a simple web-based tool start to become more evident. For a little while now our community&amp;#39;s been asking for more.&lt;/p&gt;

&lt;p&gt;Introducing &lt;a href=&quot;http://www.github.com/spark/spark-dev&quot;&gt;Spark Dev&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;A couple of months back, one of our community members, @suda, started building a Spark plug-in for Github&amp;#39;s new open source &lt;a href=&quot;http://www.atom.io&quot;&gt;Atom project&lt;/a&gt;. We loved his work so much that we hired him onto the Spark team to continue his development, which has grown into a brand new open source IDE for Mac and Windows: Spark Dev!&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/IDE.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;At first glance, Spark Dev looks and feels much like our web IDE. In fact it has many of the same capabilities; you can compile and deploy firmware over the air, just like the web IDE. However, it can also do a lot more; besides pulling in a lot of the features of our command line tool, the &lt;a href=&quot;http://www.github.com/spark/spark-cli&quot;&gt;Spark CLI&lt;/a&gt;, Spark Dev is extensible. You can install any existing package for Atom, or create your own packages using JavaScript and Coffeescript. We&amp;#39;ve got our own additional features in mind, but we can&amp;#39;t wait to see yours!&lt;/p&gt;

&lt;h2&gt;Order a Photon today!&lt;/h2&gt;

&lt;p&gt;To pre-order your Photons, modules, and accessories, visit our new store:&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn&quot; href=https://store.spark.io/?utm_source=SparkBlog&amp;utm_medium=blog&amp;utm_term=PreOrder&amp;utm_content=Button&amp;utm_campaign=BlogButton&gt;Visit the Spark Store&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh yeah, we should mention that &lt;strong&gt;we&amp;#39;re offering free shipping on our first 1,000 domestic orders.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As always, we&amp;#39;d love to hear from you over on our &lt;a href=&quot;http://community.spark.io/&quot;&gt;community site&lt;/a&gt;! Your support and feedback are always appreciated.&lt;/p&gt;

&lt;p&gt;Much love,&lt;/p&gt;

&lt;p&gt;Zach and the Spark team&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Blink an LED with Javascript</title>
      <link>http://spark.github.io/staging-blog/2014/09/29/blink-an-led-with-javascript/</link>
      <pubDate>Mon, 29 Sep 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/09/29/blink-an-led-with-javascript</guid>
      <description>&lt;p&gt;Hello, friends! Christine here, newcomer to the Spark team. Despite being a javascript &lt;a href=&quot;http://en.wikipedia.org/wiki/Dilettante&quot;&gt;dilettante&lt;/a&gt;, I was pretty excited to start playing with SparkJS, our new javascript library. It&amp;#39;s easy to use, and if you&amp;#39;re even a little familiar with javascript the code writes itself.&lt;/p&gt;

&lt;p&gt;As an intro to SparkJS, I decided to go with the “Hello World” equivalent of the Spark universe: blinking an LED.&lt;/p&gt;

&lt;p&gt;I wired my LED to the D0 pin like so:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/javascript-led-fritzing.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The next thing for me to do (as always) was to connect my Spark Core to my Wi-Fi network. I connected with the Spark CLI. The basics of this are illustrated in the gif below (c/o Zach).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/setup.gif&quot;&gt;&lt;/p&gt;

&lt;p&gt;Connection success! (If you have trouble with this step, it’s good to go &lt;a href=&quot;http://docs.spark.io/connect/&quot;&gt;here&lt;/a&gt; for help.)&lt;/p&gt;

&lt;p&gt;Next, the Javascript. SparkJS can run &lt;a href=&quot;http://docs.spark.io/javascript/#installation-client-side&quot;&gt;in the browser&lt;/a&gt; or on a server using Node.js; I&amp;#39;ve chosen the latter. I can install SparkJS with a simple:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;npm install spark
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, I wrote a script to blink the LED in javascript, based off of the &lt;code&gt;callFunction()&lt;/code&gt; example in the SparkJS repository. In order to program using SparkJS, make sure you have the &lt;a href=&quot;http://docs.spark.io/javascript/&quot;&gt;spark module installed through node.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: This application assumes that you&amp;#39;re running the built-in Tinker firmware that is pre-programmed on the Spark Core. If you&amp;#39;re not, you can reinstall it with the Spark CLI by typing &lt;code&gt;spark flash {core_id} tinker&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Having installed all the things I needed, I wrote a the LED-blinking script below:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/cmsunu28/c20fa5bf6f524f128d64.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;This may be a little bit overkill in terms of asynchrony handling, but I just wanted to demonstrate that SparkJS lets you use callbacks, promises, events, or any combination thereof.&lt;/p&gt;

&lt;p&gt;I also employed &lt;code&gt;callFunction()&lt;/code&gt; in two different ways: &lt;code&gt;spark.callFunction(core_id, command, input, callback)&lt;/code&gt; before the device info is retrieved and &lt;code&gt;core.callFunction(command, input, callback)&lt;/code&gt; after. As you can see, either works -- it just depends on whether you want to use it before or after you retrieve the devices.&lt;/p&gt;

&lt;p&gt;This is fun and everything, but to really take advantage of SparkJS, I&amp;#39;d love to do something on the web with an HTTP request. I never check the weather, but I wanted to be reminded to take my umbrella in the case of rain. I decided to have my Core check it for me.&lt;/p&gt;

&lt;p&gt;Using the Open Weather Map API and the node request module, I wrote a quick script to check for rain, which I can call once a day using cron. (Weather codes are &lt;a href=&quot;http://openweathermap.org/weather-conditions&quot;&gt;here&lt;/a&gt; in case you want to write your own script to identify clouds or clear skies!)&lt;/p&gt;

&lt;p&gt;Video of result, and code below!&lt;/p&gt;

&lt;iframe class=&quot;full&quot; width=&quot;750&quot; height=&quot;422&quot; src=&quot;//www.youtube.com/embed/6nBO6RJOfME&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;script src=&quot;https://gist.github.com/cmsunu28/2eb3d875c1418255970c.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Documentation on SparkJS is available here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.spark.io/javascript&quot;&gt;http://docs.spark.io/javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us know what you think and share all your lovely projects on the &lt;a href=&quot;https://community.spark.io&quot;&gt;Spark Community&lt;/a&gt;. Have fun!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Controlling the connection</title>
      <link>http://spark.github.io/staging-blog/2014/08/06/control-the-connection/</link>
      <pubDate>Wed, 06 Aug 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/08/06/control-the-connection</guid>
      <description>&lt;p&gt;One of our goals with the Spark Core and Spark OS was to abstract away the connectivity layer. When you&amp;#39;re running a distributed OS where some of your software runs on the device and some of your software runs in the cloud, you want the connection between the two to &amp;quot;just work&amp;quot;.&lt;/p&gt;

&lt;p&gt;However, sometimes you don&amp;#39;t want everything to be automatic; you want to take control of the connection, so you can decide when the device should try to connect and when it shouldn&amp;#39;t. This is particularly helpful when you want your application code to start running immediately as soon as the device is powered, and the connectivity stuff can happen later on.&lt;/p&gt;

&lt;p&gt;As of today, the Spark Core has three modes: &lt;code&gt;AUTOMATIC&lt;/code&gt;, &lt;code&gt;SEMI_AUTOMATIC&lt;/code&gt;, and &lt;code&gt;MANUAL&lt;/code&gt;. Let&amp;#39;s go through each of them in turn.&lt;/p&gt;

&lt;h2&gt;Automatic mode&lt;/h2&gt;

&lt;p&gt;The default mode of the Spark Core is &amp;quot;automatic mode&amp;quot;. This means that the Core will attempt to connect to Wi-Fi automatically. If you don&amp;#39;t explicitly define the connection mode, the Core will be running in automatic mode. This is identical to how the Spark Core has always worked up until now.&lt;/p&gt;

&lt;p&gt;Behind the scenes, what&amp;#39;s running on the Spark Core looks something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// First, connect to the internet&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Then run the user-defined setup function&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Then alternate between processing messages to and from the Cloud...&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...and running the user-defined loop function&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But the whole point of the automatic mode is you don&amp;#39;t really need to know that. The Wi-Fi connection just works. So let&amp;#39;s say your code looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// You don&amp;#39;t have to add this, but if you want to be explicit:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SYSTEM_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AUTOMATIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What&amp;#39;s actually happening is that first we&amp;#39;re calling &lt;code&gt;Spark.connect()&lt;/code&gt;, which will connect the device to the Cloud. Once it&amp;#39;s connected, then your code will run, and your &lt;code&gt;loop()&lt;/code&gt; will alternate with &lt;code&gt;Spark.process()&lt;/code&gt; so that we can process incoming messages in something that resembles a background process. (Side note: &lt;code&gt;Spark.process()&lt;/code&gt; also runs during delays).&lt;/p&gt;

&lt;p&gt;Ok, that&amp;#39;s all well and good, but what if I don&amp;#39;t know whether my Spark Core will have an internet connection? I still want my LED to blink. So now we&amp;#39;ve got:&lt;/p&gt;

&lt;h2&gt;Semi-automatic mode&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Insert firearm metaphor here&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SYSTEM_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SEMI_AUTOMATIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;attachInterrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALLING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this version of the code, when the Spark Core is plugged in, the LED will immediately start blinking. When a button attached to D0 is depressed (bringing DO to &lt;code&gt;LOW&lt;/code&gt;), &lt;code&gt;Spark.connect()&lt;/code&gt; will be called. If the Spark Core already has Wi-Fi credentials in memory, it will attempt to connect; otherwise, it will enter listening mode, and wait for your network name and password through the Spark mobile app or over USB.&lt;/p&gt;

&lt;p&gt;The only main difference between &lt;code&gt;SEMI_AUTOMATIC&lt;/code&gt; mode and &lt;code&gt;AUTOMATIC&lt;/code&gt; mode is that &lt;code&gt;Spark.connect()&lt;/code&gt; is not called at the beginning of your code; you have to do that yourself. Let&amp;#39;s go deeper down the rabbit hole with:&lt;/p&gt;

&lt;h2&gt;Manual mode&lt;/h2&gt;

&lt;p&gt;The Spark Core&amp;#39;s manual mode puts everything in your hands. This mode gives you a lot of rope to hang yourself with, so tread cautiously.&lt;/p&gt;

&lt;p&gt;Like &lt;code&gt;SEMI_AUTOMATIC&lt;/code&gt; mode, in &lt;code&gt;MANUAL&lt;/code&gt; mode you need to connect to the Cloud using &lt;code&gt;Spark.connect()&lt;/code&gt; yourself. However, in manual mode, the Core will not call &lt;code&gt;Spark.process()&lt;/code&gt; automatically; you have to call it yourself. So your code might look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;n&quot;&gt;SYSTEM_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MANUAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;attachInterrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALLING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;You must call &lt;code&gt;Spark.process()&lt;/code&gt; as frequently as possible to process messages from the Wi-Fi module&lt;/em&gt;. If you do not do so, you will encounter erratic behavior, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Core losing its connection to the Cloud&lt;/li&gt;
&lt;li&gt;The Core breathing cyan when in fact it is not connected&lt;/li&gt;
&lt;li&gt;Long delays when a request is sent to the Core because the Core won&amp;#39;t respond until it&amp;#39;s processed the message&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sounds kinda terrible, right? Except this can be really useful when you&amp;#39;re writing code that is very sensitive to exact timing, and the &lt;code&gt;Spark.process()&lt;/code&gt; call might interrupt your sensitive code. By turning on &lt;code&gt;MANUAL&lt;/code&gt; mode, you can make sure that &lt;code&gt;Spark.process()&lt;/code&gt; is called when you want, and not when the processor is busy with a time-sensitive task.&lt;/p&gt;

&lt;p&gt;As Stan Lee once said: with great power comes great responsibility. Go forth and control the connection. Be careful. Good luck.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>A letter from the CEO</title>
      <link>http://spark.github.io/staging-blog/2014/07/22/letter-from-the-ceo/</link>
      <pubDate>Tue, 22 Jul 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/07/22/letter-from-the-ceo</guid>
      <description>&lt;p&gt;Ok guys, this one&amp;#39;s a doozy.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ve got some big announcements to share, and I thought it would be prudent to send you a letter. However, the letter has gotten quite long. So first, I present a summarized version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spark as a company is growing up, and that&amp;#39;s a good thing.&lt;/li&gt;
&lt;li&gt;We recently announced Spark OS, our open source operating system for the Internet of Things (IoT). Spark OS takes the foundation we built with the Spark Core and expands upon it. Over the course of the rest of the year we&amp;#39;ll be building out features for people deploying thousands of connected products or more.&lt;/li&gt;
&lt;li&gt;We recently released the &lt;a href=&quot;https://github.com/spark/spark-server&quot;&gt;Spark Server&lt;/a&gt;, our open source back-end for the Spark Core. You can now run Spark Cores on your own infrastructure! If you want a commercial solution for large-scale deployments (&amp;gt;1K units), come &lt;a href=&quot;mailto:sales@spark.io&quot;&gt;talk to us&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve just pushed out a major stability update called a &amp;quot;deep update&amp;quot;. This update will patch the CC3000 Wi-Fi module and make the connection to the Spark Cloud more consistent. To receive the update, simply plug in your Spark Core and get it online, and then visit the &lt;a href=&quot;https://www.spark.io/build&quot;&gt;Spark Build IDE&lt;/a&gt; for instructions.&lt;/li&gt;
&lt;li&gt;Some investors decided to give us some money, which means that we can grow and take on new challenges while growing our community and sticking to our roots. Hooray!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, for those who came for a story, let&amp;#39;s dig in a bit deeper:&lt;/p&gt;

&lt;h3&gt;State of the Company&lt;/h3&gt;

&lt;p&gt;On June 2, 2013, our Kickstarter campaign for the Spark Core campaign closed. Then the work really started.&lt;/p&gt;

&lt;p&gt;One year later, we&amp;#39;re a pretty different company. We&amp;#39;ve shipped more than 30,000 Spark Cores. We&amp;#39;ve grown from 4 employees to 12. Four companies have successfully launched products powered by Spark, and many more are in development. We have a manufacturing partner, distribution partners, logistics partners, and a handful of technology partners.&lt;/p&gt;

&lt;p&gt;In many ways, we&amp;#39;re growing up. We&amp;#39;re starting to look like a real company. We have meetings and conference calls; we&amp;#39;ve got lawyers and a PR firm. This is all kind of a funny feeling, given that two years ago Spark was just me and a soldering iron. But it does lead to the question — what do we want to be when we grow up?&lt;/p&gt;

&lt;p&gt;I&amp;#39;d like to share a page from my first pitch deck for Spark, created in February 2012. Here it is:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/pitchdeck.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;The big issue that I saw was that hardware manufacturers (outside of computers and smartphones) didn&amp;#39;t have a technology partner to help make their products better. Without an OS, hardware is limited to its capabilities when the product is shipped. An operating system provides a way for people to build applications for the hardware, which gives us Microsoft Office on the PC, and Angry Birds on the smartphone.&lt;/p&gt;

&lt;p&gt;This vision has remained pretty consistent, because we believe that connected devices and the Internet of Things is the next major frontier of technology, and in order for it to succeed, people need a great foundation upon which they can build amazing products. And that foundation needs to be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Easy&lt;/strong&gt;. Because the point of what we&amp;#39;re doing is to solve hard problems so that our customers don&amp;#39;t have to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Open&lt;/strong&gt;. Because if it&amp;#39;s not open, we&amp;#39;re just creating risk and anxiety for our customers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Affordable&lt;/strong&gt;. Because if it&amp;#39;s not, then this stuff won&amp;#39;t ever catch on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is what we&amp;#39;re shooting for. We want to take the foundation that we built for the Spark Core and expand upon it to provide a complete infrastructure for a connected product. We hope to solve as many technical challenges as we can so that we can lower the barrier to entry for connected products and help more engineers, start-ups, and corporations bring new products to market.&lt;/p&gt;

&lt;p&gt;And with that comes our first major announcement:&lt;/p&gt;

&lt;h3&gt;Spark OS&lt;/h3&gt;

&lt;p&gt;Two weeks ago &lt;a href=&quot;http://www.businessinsider.com/spark-raises-49-million-to-fuel-its-cloud-dreams-2014-7&quot;&gt;we announced&lt;/a&gt; a new initiative of sorts: Spark OS. A cloud-based operating system for connected products.&lt;/p&gt;

&lt;p&gt;Spark OS is not your typical operating system. Most people think of an operating system as a software stack that runs on their CPU, like Windows or Android. The OS handles communications with various peripherals (your trackpad, your monitor, etc.) and provides a standard interface for the user and an interface for software developers to build apps.&lt;/p&gt;

&lt;p&gt;Connected products also need an OS, because they need something to hook them together and provide an interface. However, the structure of the OS is different. Connected products have very limited memory (~20KB of RAM) and processing power, so they can&amp;#39;t necessarily run Android or even Linux. But they have an internet connection, which means they can hook into services with a lot more horsepower.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/cloud-and-things.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Spark OS is a distributed operating system. The OS covers three areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Device&lt;/strong&gt;: The Spark firmware libraries provide the connection to the Cloud. These firmware libraries are open source, and can provide an encrypted connection to a Cloud server on any system with a TCP/IP stack and 20KB of RAM.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloud&lt;/strong&gt;: Spark&amp;#39;s cloud back-end routes messages to devices, and provides an application layer through the REST API so that software developers can create apps for Spark-powered products.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interface&lt;/strong&gt;: Our mobile app templates and work-in-progress language wrappers act as SDKs for developing mobile and web interfaces for Spark-powered products.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, those of you who are familiar with us might say, &amp;quot;wait a second, isn&amp;#39;t this the same thing you&amp;#39;ve been doing this whole time?&amp;quot; To some extent, yes. We didn&amp;#39;t push out any major new features with this announcement; we&amp;#39;ve been steadily building features since we shipped late last year. So perhaps it&amp;#39;s best to think of this re-branding as a statement of intent. Framing our tech stack as an operating system means that, as we continue to build out its features, our goal is to provide a complete end-to-end technical solution for a connected product.&lt;/p&gt;

&lt;p&gt;Some features that you should expect to see us deploy over the rest of the year:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Workers&lt;/strong&gt;: The ability to create &amp;quot;workers&amp;quot;, Node.js applications in the Cloud that can communicate with your Spark Core so that you don&amp;#39;t have to serve your own web app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Management tools&lt;/strong&gt;: If you&amp;#39;ve shipped thousands of products to customer, you need an administrative interface to do things like register devices, see logs, and push out firmware updates.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data visualization&lt;/strong&gt;: Connected products produce a lot of data, so you need pretty charts!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New hardware&lt;/strong&gt;: Why should the Spark experience be limited to just Wi-Fi?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Spark Server&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s been a long time coming, but last week we pushed out our open source back-end solution, the &lt;a href=&quot;http://www.github.com/spark/spark-server&quot;&gt;Spark Server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Spark Server is a Node.js application that you can run on your local machine or on any hosted server that can act as a cloud back-end for your connected products. It&amp;#39;s designed to be lightweight and easy to deploy, and we&amp;#39;ve published &lt;a href=&quot;https://github.com/spark/spark-server/blob/master/doc/raspberryPi.md&quot;&gt;instructions&lt;/a&gt; on how to set up a Raspberry Pi to run the Spark Server.&lt;/p&gt;

&lt;p&gt;The Spark Server is open source, and published under an AGPL license. This license was chosen to deter others from creating proprietary clones of our platform; clones and spin-offs are welcome, but must also be open source.&lt;/p&gt;

&lt;p&gt;If you are running a proprietary service and would like to use some of our tech stack, you still can; the &lt;a href=&quot;https://github.com/spark/spark-protocol&quot;&gt;Spark protocol&lt;/a&gt; is also open source, and published under an LGPL license, so that you can build a proprietary application around it. It just has to be substantially different from our own cloud service (i.e. not a clone).&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re shipping a commercial product and are looking for either a highly scalable cloud infrastructure, or service and support from the Spark team, that&amp;#39;s where our hosted platform comes in; &lt;a href=&quot;mailto:sales@spark.io&quot;&gt;come talk to us!&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Major stability upgrade: the deep update&lt;/h3&gt;

&lt;p&gt;Some customers have been plagued with stability issues since we first shipped the Spark Core late last year. These stability issues stem from a flaw in the CC3000 firmware, which was recently patched by TI.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ve wrapped this firmware patch in something that we&amp;#39;re calling a &amp;quot;deep update&amp;quot;. This is, essentially, a firmware update that includes the CC3000 patch, and instructions for installing it. You can now automatically download this update over the air, after which the Spark Core will reboot and come back online with a patched module.&lt;/p&gt;

&lt;p&gt;If your Spark Core is black, you already have the firmware patch; however if you&amp;#39;ve got a white Spark Core and haven&amp;#39;t applied the patch yourself, it&amp;#39;s time to upgrade!&lt;/p&gt;

&lt;p&gt;The next time you log into the &lt;a href=&quot;https://www.spark.io/build&quot;&gt;Spark Build IDE&lt;/a&gt;, you&amp;#39;ll be presented with an alert:&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/alert.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Click the big blue button, and you&amp;#39;ll find that some or all of your Cores will have little arrows next to them. When your Core is online, click the arrow to upgrade! The process may take a few minutes; please visit the &lt;a href=&quot;http://docs.spark.io/troubleshooting#deep-update&quot;&gt;deep update documentation&lt;/a&gt; if you run into any problems.&lt;/p&gt;

&lt;h3&gt;Spark&amp;#39;s Series A&lt;/h3&gt;

&lt;p&gt;Our announcement of Spark OS a couple of weeks ago was paired with some other big news: &lt;a href=&quot;http://blogs.wsj.com/venturecapital/2014/07/08/spark-io-raises-4-9-million-to-help-engineers-make-their-devices-smart/&quot;&gt;Spark has raised $4.9 million from investors&lt;/a&gt;, including Lion Wells Capital, O&amp;#39;Reilly Alpha Tech Ventures, SOSventures, and Collaborative Fund.&lt;/p&gt;

&lt;p&gt;We couldn&amp;#39;t be happier with the investors we&amp;#39;ve brought on board. These are not your typical VCs; they all understand our vision and how important our community and our Kickstarter roots are to us. A quick intro of each investor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.lionwells.com&quot;&gt;&lt;strong&gt;Lion Wells Capital&lt;/strong&gt;&lt;/a&gt;: Run by Avidan Ross, self-proclaimed investor/Maker. I met Avidan when he showed up at our demo day more than a year ago with a Roving Networks RN-171 in one hand and an Electric Imp in the other, and said &amp;quot;you&amp;#39;re doing this right&amp;quot;. Avidan has been a huge supporter since we launched the Spark Core, and I couldn&amp;#39;t be happier to have him around.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oatv.com&quot;&gt;&lt;strong&gt;O&amp;#39;Reilly Alpha Tech Ventures&lt;/strong&gt;&lt;/a&gt;: OATV is a top-notch early-stage VC in San Francisco, with close ties to O&amp;#39;Reilly Media, famous for their technology books, conferences, and websites. The team at OATV believes strongly that &amp;quot;innovation starts with enthusiasts&amp;quot;, so they&amp;#39;re a perfect match for us.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sosventures.com&quot;&gt;&lt;strong&gt;SOSventures&lt;/strong&gt;&lt;/a&gt;: These guys have been with us since the beginning: they&amp;#39;re behind &lt;a href=&quot;http://www.haxlr8r.com&quot;&gt;HAXLR8R&lt;/a&gt;, the hardware incubator in Shenzhen that got us started. They made a bet on us early on when all we had was a vision and a prototype, and we&amp;#39;ll be forever grateful.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.collaborativefund.com&quot;&gt;&lt;strong&gt;Collaborative Fund&lt;/strong&gt;&lt;/a&gt;: Collaborative Fund is one of the few investors with a clear social mission, focusing on investments with some aspect of creativity, collaboration, and strong values. Their money comes from passionate individuals like Nicholas Negroponte, Tony Hseih, and Pharrell Williams.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This investment provides us the opportunity to grow and take on bigger challenges. We&amp;#39;re &lt;a href=&quot;http://jobs.lever.co/spark&quot;&gt;hiring voraciously&lt;/a&gt;, so if you like where we&amp;#39;re headed, come talk to us!&lt;/p&gt;

&lt;p&gt;That&amp;#39;s all for now; thanks for listening, and look forward to some great new features and products throughout the rest of the year!&lt;/p&gt;

&lt;p&gt;Much love,&lt;/p&gt;

&lt;p&gt;Zach (and the Spark team)&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Flashing Firmware with Spark Libraries</title>
      <link>http://spark.github.io/staging-blog/2014/05/27/flashing-firmware-with-spark-libraries/</link>
      <pubDate>Tue, 27 May 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/05/27/flashing-firmware-with-spark-libraries</guid>
      <description>&lt;p&gt;We are very excited to announce the beginnings a library system for the Spark ecosystem; inspired by &lt;a href=&quot;https://npmjs.org&quot;&gt;npm&lt;/a&gt;, powered by GitHub, and fully integrated with the &lt;a href=&quot;https://www.spark.io/build&quot;&gt;Build IDE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Spark Libraries make it easy to contribute useful code to the community and to build on the shoulders of giants, we can&amp;#39;t wait to see what you&amp;#39;ll do!&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s take a quick walkthrough of this feature to illustrate how to use a library.&lt;/p&gt;

&lt;iframe src=&quot;//player.vimeo.com/video/96646868&quot; width=&quot;500&quot; height=&quot;281&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;p&gt;Sweet!  An array of really bright NeoPixel&amp;#39;s beaming their blinding beauty without typing a single character of code in about a minute. Not too shabby.&lt;/p&gt;

&lt;p&gt;Get started by opening up the library drawer in the Spark build IDE:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/library-icon.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Please also checkout the &lt;a href=&quot;http://docs.spark.io/start/#flash-apps-with-spark-build-using-libraries&quot;&gt;Library Documentation&lt;/a&gt; and &lt;a href=&quot;https://community.spark.io/t/spark-libraries-available-in-ide/4652&quot;&gt;community announcement&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have fun and let us know what you think!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Spark and Pebble – BFFs in the IoT</title>
      <link>http://spark.github.io/staging-blog/2014/05/14/spark-and-pebble-bffs/</link>
      <pubDate>Wed, 14 May 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/05/14/spark-and-pebble-bffs</guid>
      <description>&lt;p&gt;The Spark team will be at &lt;a href=&quot;http://makerfaire.com/&quot;&gt;Maker Faire Bay Area&lt;/a&gt; on May 17 and 18 and we won’t be alone. Since our beginning, collaboration has always been at the heart of what Spark does, and in truth it’s at the heart of the entire Maker movement. It’s also extraordinarily important in the “Internet of Things”, where product creators have to work together to enable interconnectivity that makes each product better. &lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/spark-pebble-small.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;This weekend we’re joining forces with &lt;a href=&quot;https://getpebble.com/&quot;&gt;Pebble&lt;/a&gt;, the creators of one of the most exciting wearable products on the market, and we’ll be showcasing what the Internet of Things can look like when people collaborate.&lt;/p&gt;

&lt;p&gt;We’re perhaps most excited about what this collaboration, and thus compatibility, means for creators using the Spark tech stack; it will now be easier to connect your projects, prototypes and products to a Pebble smartwatch.&lt;/p&gt;

&lt;p&gt;Pebble has a talented and intelligent team and a wonderful developer program, and was born from the same Kickstarter world that we were. We’ve had a great time working with them and are excited to be able to share this vision of interconnectivity in San Mateo this weekend. Be sure to stop by our Pebble/Spark booth (#813), play with some very cool demos, and share your feedback with our team. Can’t wait to see you and hear what you’re working on yourself!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Spark.subscribe + spark.hackster.io</title>
      <link>http://spark.github.io/staging-blog/2014/05/12/subscribe-and-hackster/</link>
      <pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/05/12/subscribe-and-hackster</guid>
      <description>&lt;h2&gt;Spark.subscribe()&lt;/h2&gt;

&lt;p&gt;The Spark team is super proud to release in
&lt;a href=&quot;https://github.com/spark/core-firmware/releases/tag/spark_5&quot;&gt;v0.2.2&lt;/a&gt;
a much anticipated feature: &lt;code&gt;Spark.subscribe()&lt;/code&gt;.
Now it&amp;#39;s easier than ever to pass messages from one Core to another.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;ve worked with &lt;code&gt;Spark.function()&lt;/code&gt;, this will look very familiar.
Just write your own event handling function, and register it in &lt;code&gt;setup()&lt;/code&gt;.
Here&amp;#39;s an example where the event handler is called &lt;code&gt;ledOn()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;int onTime = -10000;

void ledOn(const char *event, const char *data) {
  onTime = millis();
}

void setup() {
  pinMode(D7, OUTPUT);
  Spark.subscribe(&amp;quot;light-up&amp;quot;, ledOn, MY_DEVICES);
}

void loop() {
  bool isOn = digitalRead(D7);
  if (millis() - onTime &amp;lt; 500) {
    if (!isOn) {
      digitalWrite(D7, HIGH);
    }
  } else {
    if (isOn) {
      digitalWrite(D7, LOW);
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In &lt;code&gt;setup()&lt;/code&gt; I subscribe to the &amp;quot;light-up&amp;quot; event.
By adding &lt;code&gt;MY_DEVICES&lt;/code&gt; to the subscription call,
I make sure other people&amp;#39;s Cores can&amp;#39;t turn on my LED.
Now whenever any of my Cores publishes &amp;quot;light-up&amp;quot;,
the Cloud will send that event to my Core, which will call &lt;code&gt;ledOn()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;loop()&lt;/code&gt; just checks whether we updated the variable &lt;code&gt;onTime&lt;/code&gt; within the last half second.
If so, and if the LED is off, we turn it on.
The else clause just turns the LED off half a second later.&lt;/p&gt;

&lt;p&gt;Now I install the following firmware on a different Core to publish the &amp;quot;light-up&amp;quot; event.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;int last;
bool ready;

void setup() {
  pinMode(D3, INPUT);
  last = millis();
  ready = true;
}

void loop() {
  if (millis() - last &amp;gt; 200) {
    if (digitalRead(D3)) {
      // button pressed
      if (ready) {
        ready = false;
        Spark.publish(&amp;quot;light-up&amp;quot;);
        last = millis();
      }
    } else {
      // button released
      ready = true;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I wire a button between 3V3 and D3 and add a pull-down resistor between D3 and GND.
That way, D3 stays low most of the time, but it goes high while the button is pressed.&lt;/p&gt;

&lt;p&gt;The code simply listens for D3 to go high and publishes &amp;quot;light-up&amp;quot; when it does.
The &lt;code&gt;last&lt;/code&gt; variable is used to debounce the button,
making sure we don&amp;#39;t rapidly publish lots of events on the rising edge.
The &lt;code&gt;ready&lt;/code&gt; variable ensures only one event per button press—you
have to release the button before &lt;code&gt;ready&lt;/code&gt; becomes true again.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s a video of it working.
The Spark Core on the right publishes; the one on the left subscribes.&lt;/p&gt;

&lt;iframe src=&quot;//player.vimeo.com/video/95062541&quot; width=&quot;500&quot; height=&quot;281&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://docs.spark.io/#/firmware/data-and-control-spark-subscribe&quot;&gt;full &lt;code&gt;Spark.subscribe()&lt;/code&gt; documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Spark Projects powered by hackster.io&lt;/h2&gt;

&lt;p&gt;We have partnered with the team over at hackster.io to create
&lt;a href=&quot;http://spark.hackster.io/&quot;&gt;the official place to post all your Spark Core projects&lt;/a&gt;.
The hackster team has been great to work with, and they have created a custom view specifically for us.
Check out &lt;a href=&quot;http://spark.hackster.io/&quot;&gt;spark.hackster.io&lt;/a&gt; now—it&amp;#39;s awesome!&lt;/p&gt;

&lt;p&gt;Some great ideas are already there, like the
&lt;a href=&quot;http://www.hackster.io/bdub/facebook-likes-alert&quot;&gt;BDub&amp;#39;s Facebook Likes Push-up Man&lt;/a&gt;,
&lt;a href=&quot;http://www.hackster.io/projects/e/ninedof/configurable-spark-core-connected-lcd&quot;&gt;ninedof&amp;#39;s LCD tutorial&lt;/a&gt;,
&lt;a href=&quot;http://www.hackster.io/projects/e/rudolf-wirz/twitter-torch&quot;&gt;Rudolf Wirz&amp;#39;s Twitter Torch&lt;/a&gt;,
and
&lt;a href=&quot;http://www.hackster.io/projects/e/dragonsshout/spark-door-access-control-system&quot;&gt;Dragonsshout&amp;#39;s Spark Door access control system&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Add yours and give some &amp;quot;respect&amp;quot;—hackster&amp;#39;s version of like/star/+1—to your favorite projects now!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Patch Planning + Heartbleed + v0.2.1</title>
      <link>http://spark.github.io/staging-blog/2014/04/24/patch-planning-heartbleed-and-v0.2.1/</link>
      <pubDate>Thu, 24 Apr 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/04/24/patch-planning-heartbleed-and-v0.2.1</guid>
      <description>&lt;h2&gt;CC3000 patch deployment planning&lt;/h2&gt;

&lt;p&gt;The cloud team went into the war room during sprint 9, grabbed dry erase markers,
and started scribbling on everything.
Texas Instruments is finishing the quality assurance testing on the CFOD patch,
and it should be released very soon.
We needed to figure out how to deploy it, safely and as seamlessly as possible,
to as many users as possible, including those who don&amp;#39;t even know what CFOD is.
Here&amp;#39;s what we figured out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We&amp;#39;ll create a new &amp;quot;deep update&amp;quot; feature in the web IDE that we can reuse for similar situations in the future.&lt;/li&gt;
&lt;li&gt;The update will be opt-in, with users specifically clicking a button in the web IDE to view instructions and perform the patch.&lt;/li&gt;
&lt;li&gt;For Cores that currently perform over-the-air updates reliably, the patch will happen wirelessly and seamlessly.
The process will require some patience, but it should be happily automagical.&lt;/li&gt;
&lt;li&gt;There will also be a download + local USB patching option using &lt;code&gt;dfu-util&lt;/code&gt; and the Spark CLI.&lt;/li&gt;
&lt;li&gt;We can&amp;#39;t yet boot the Core back into the previous firmware, so the &lt;em&gt;Core will be running Tinker&lt;/em&gt; after patching is finished.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To be clear, we don&amp;#39;t have a finalized patch from TI, but we&amp;#39;re getting ready anyway.
We hope to be ready to deploy a patch by the end of sprint 10 (May 2),
though the web IDE front end changes are complex enough that
they will probably bleed into sprint 11.
Speaking of blood...&lt;/p&gt;

&lt;h2&gt;Heartbleed mitigation&lt;/h2&gt;

&lt;p&gt;So, if you haven&amp;#39;t heard, it turns out there was an enormous, gaping hole in the
security systems of basically the entire internet for the past couple years,
&lt;a href=&quot;http://xkcd.com/1354/&quot;&gt;because bounds-checking&lt;/a&gt;.
Some smart people saw it, felt a moment of dread/wide-eyed panic, patched it,
gave it a catchy name, a nice icon, a
&lt;a href=&quot;http://heartbleed.com/&quot;&gt;pretty website&lt;/a&gt;,
and tried to spread the word as fast as they could.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/heartbleed.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;As soon as we heard on April 8, we started patching our systems,
and by that afternoon all Spark servers were no longer vulnerable.
During that part of the process, we upgraded OpenSSL to safe versions on all our servers,
especially the web-facing ones like api.spark.io and community.spark.io.&lt;/p&gt;

&lt;p&gt;Then began the certificate dance.
Since OpenSSL has been vulnerable for years, we have to assume our TLS certificate keys
are compromised even though we have no evidence of an attack.&lt;/p&gt;

&lt;p&gt;Many teams who manage servers, Spark included,
took this opportunity to try to level up the security standards.
On April 10th, we tried rotating the community certificate to one using an ECDSA key
for its cutting edge protections including mandatory forward secrecy.
However, we found many users&amp;#39; systems were incompatible with the new certificate,
so we quickly rolled back to the old certificate.
Lesson learned!&lt;/p&gt;

&lt;p&gt;After some painfully slow back and forth with Comodo, our certificate authority,
(during which process we helped them identify a bug in their automated certificate generation systems)
they finally issued us a working certificate on April 21.
The new certificate has now been deployed to all Spark web servers and load balancers,
and the old certificates have been revoked.&lt;/p&gt;

&lt;h2&gt;Firmware version 0.2.1&lt;/h2&gt;

&lt;p&gt;We deployed the latest and greatest firmware to the web IDE.
The tagged stable release is downloadable from the
&lt;a href=&quot;https://github.com/spark/core-firmware/releases&quot;&gt;core-firmware releases&lt;/a&gt;
page on GitHub.
You&amp;#39;ll see commit links in the settings drawer if you click to expand the version.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/v0.2.1.png&quot;/&gt;&lt;/div&gt;

&lt;p&gt;There were also some sweet features added to the Sparkulator itself.
My favorite? You can now download your compiled binaries and flash them over USB.
This complements the Spark CLI cloud compile feature to add an additional option
for those seeking a middle ground between coding, compiling, and flashing
&lt;em&gt;completely&lt;/em&gt; in the cloud versus &lt;em&gt;completely&lt;/em&gt; locally.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/download-firmware-binary.png&quot;/&gt;&lt;/div&gt;

&lt;p&gt;Highlighted changes from v0.2.0 to v0.2.1:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OTA reliability improvements
(&lt;a href=&quot;https://github.com/spark/core-firmware/pull/155&quot;&gt;core-firmware&lt;/a&gt;,
&lt;a href=&quot;https://github.com/spark/core-common-lib/pull/19&quot;&gt;core-common-lib&lt;/a&gt;,
&lt;a href=&quot;https://github.com/spark/core-communication-lib/pull/8&quot;&gt;core-communication-lib&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow Spark.publish inside Spark.function
(&lt;a href=&quot;https://github.com/spark/core-communication-lib/pull/13&quot;&gt;core-communication-lib&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add Network.ping() (&lt;a href=&quot;https://github.com/spark/core-firmware/pull/156&quot;&gt;core-firmware&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enable factory reset from firmware (only on new bootloader)
(&lt;a href=&quot;https://github.com/spark/core-common-lib/pull/21&quot;&gt;core-common-lib&lt;/a&gt;,
&lt;a href=&quot;https://github.com/spark/bootloader/pull/9&quot;&gt;bootloader&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Version 0.2.1 is being programmed on the current manufacturing run.&lt;/p&gt;

&lt;p&gt;And lastly, speaking of manufacturing...&lt;/p&gt;

&lt;h2&gt;The Stealth Core&lt;/h2&gt;

&lt;p&gt;Shhh... I&amp;#39;ve got a secret...&lt;/p&gt;

&lt;p&gt;Promise not to tell?&lt;/p&gt;

&lt;p&gt;So hawt...&lt;/p&gt;

&lt;p&gt;Are you ready?&lt;/p&gt;

&lt;p&gt;Check this out:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/stealth-core.jpg&quot;&gt;&lt;/div&gt;

&lt;h3&gt;BOOM.&lt;/h3&gt;

&lt;p&gt;Starting next week, we&amp;#39;ll be shipping out thousands of new Spark Cores to our anxiously awaiting customers! We&amp;#39;ll finally have Cores in stock, so hopefully you&amp;#39;ll never have to wait for a Core again!&lt;/p&gt;

&lt;p&gt;This time around, the Cores (codename: &lt;strong&gt;Stealth Core&lt;/strong&gt;) will be black. But don&amp;#39;t worry - &lt;em&gt;nothing has changed other than the color.&lt;/em&gt; The black Cores are identical to the previous white Cores, except they&amp;#39;re black.&lt;/p&gt;

&lt;p&gt;How come we changed the color? It&amp;#39;s a long complicated story that gets way into the bowels of the supply chain, but basically, it turns out that white boards are difficult to manufacture, and our PCB fab house didn&amp;#39;t want to make them anymore. For the near term, Spark Cores will be black - call it a Special Edition™ - and long term we&amp;#39;re exploring some new custom color options so that we can make our boards look truly distinctive.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ll let you know when Cores are shipping, and if you&amp;#39;ve got one on order, we hope you enjoy the new color!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Throwbackathon</title>
      <link>http://spark.github.io/staging-blog/2014/04/01/spark-telegraph/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/04/01/spark-telegraph</guid>
      <description>&lt;h2&gt;Inspiration and background&lt;/h2&gt;

&lt;p&gt;Earlier this week, my ritual skimming of news was going strong when I came upon a shocking summary of a headline of an article which claimed that people today are being overwhelmed with information. Although I didn&amp;#39;t have time to read it, the message resonated with me deeply: our beleaguered attention spans are increasingly under assault by a siege of ubiquitous media.  I stopped texting, paused the video I was watching, and walked straight out of the meeting I was in. I took a long slow sip from my coffee. And I began to wonder if the torrid pace of today&amp;#39;s consumer is the very reason we&amp;#39;ve begun to celebrate certain hallmarks of an era where time was spent more thoughtfully.  What else could explain our newfound demand for artisanal carved ice cubes and mindfully mason-jarred, home crafted pickles? &lt;/p&gt;

&lt;p&gt;I realized that we all have the same hunger for purposeful connection. We needed a new device to help cut through the entropy separating us from one another, something free from distractions, something deliberate and slow to help shape our most valuable thoughts.  Something that would capture the technological romanticism of the 1890s while meeting the accessibility standards of today.  &lt;/p&gt;

&lt;p&gt;It is with these goals in mind that I am proud to to share Spark&amp;#39;s exciting new development.&lt;/p&gt;

&lt;h1&gt;Introducing the Open Internet Telegraph&lt;/h1&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/ucq9jqyy-1s&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;h2&gt;Development update&lt;/h2&gt;

&lt;p&gt;Although this incredible project is still in early beta, we wanted to share some details.  We haven&amp;#39;t checked, but this could very well be the world&amp;#39;s first open Wi-Fi telegraph with end-to-end encryption and internet connectivity.  We believe in creating a connected ecosystem of devices, but also of people, so unlike the original Telegraph, we will not be charging by the word. In fact, if you own a Spark Core, we won&amp;#39;t be charging any monthly fees.  Take that text messages!&lt;/p&gt;

&lt;p&gt;And, recognizing that not all of our users have mastered the demands of morse code, we&amp;#39;ve also included an autocorrect feature that will help smooth over common mistakes. &lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;//s3.amazonaws.com/blog.spark.io/telegraph_web.jpg&quot;&gt;&lt;/div&gt;

&lt;h2&gt;Kickstarter?&lt;/h2&gt;

&lt;p&gt;You tell us!  If there is sufficient demand, we might consider introducing a new Kickstarter project for the Spark Telegraph with a limited run of beautiful wooden and brass Wi-Fi Telegraphs.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Publish events from your Spark Core</title>
      <link>http://spark.github.io/staging-blog/2014/03/11/spark-publish/</link>
      <pubDate>Tue, 11 Mar 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/03/11/spark-publish</guid>
      <description>&lt;p&gt;Last Friday, we wrapped up Sprint 7 on our team. We released a number of minor bug fixes and improvements, but the one major feature that we delivered is &lt;code&gt;Spark.publish()&lt;/code&gt;. Here are some examples:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/cazzo/9495585.js&quot;&gt;
&lt;/script&gt;

&lt;p&gt;Up until now, the only way to communicate with the Spark Core was to ask it something. You could remotely call a function using &lt;code&gt;Spark.function()&lt;/code&gt;, such as calling the &lt;code&gt;brew()&lt;/code&gt; function on a connected coffee-maker to brew a cup of coffee on the fly. Or you could store the temperature in a local variable &lt;code&gt;temp&lt;/code&gt;, and then check the temperature with &lt;code&gt;Spark.variable()&lt;/code&gt;, and ask for the temperature at any time.&lt;/p&gt;

&lt;p&gt;But what if you want the Spark Core to talk to you? Enter &lt;code&gt;Spark.publish()&lt;/code&gt;. This feature lets you publish events from the Spark Core, which can be subscribed to through the API. Events are published to a topic, and can be public or private.&lt;/p&gt;

&lt;p&gt;To showcase this feature, I&amp;#39;m going to build a Spark-powered motion detector, using an off-the-shelf &lt;a href=&quot;http://www.adafruit.com/products/189&quot;&gt;PIR sensor&lt;/a&gt;. Here&amp;#39;s the hardware:&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/core-and-pir-live.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;If you&amp;#39;re following along, here&amp;#39;s a Fritzing diagram showing how the components are wired.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/core-and-pir-fritzing.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;My goal is to have this motion detector inform me when it detects motion (natch). Perhaps it could even text me through Twilio? Hello, ad hoc security system.&lt;/p&gt;

&lt;p&gt;First, I&amp;#39;ll connect my Spark Core to my Wi-Fi network. I&amp;#39;m going to use the recently released Spark CLI. Once the CLI is installed through &lt;code&gt;npm install -g spark-cli&lt;/code&gt;, I can start to play.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/setup.gif&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now my Core is connected to the internet and to the Cloud, which I know because its little LED is breathing cyan. Breathing = happy and alive.&lt;/p&gt;

&lt;p&gt;Next, it&amp;#39;s time to develop my firmware. Adafruit has some &lt;a href=&quot;http://learn.adafruit.com/pir-passive-infrared-proximity-motion-sensor/&quot;&gt;great resources&lt;/a&gt; for using these sensors.&lt;/p&gt;

&lt;p&gt;I threw together a quick 50-line application that will publish to the Cloud every time motion is detected. I chose &lt;code&gt;spark-hq/motion&lt;/code&gt; as the topic; our team will use the top-level &lt;code&gt;spark-hq&lt;/code&gt; topic for data generated at our office.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/cazzo/9496462.js&quot;&gt;
&lt;/script&gt;

&lt;p&gt;Now I can subscribe to the stream of events using &lt;a href=&quot;http://en.wikipedia.org/wiki/Server-sent_events&quot;&gt;Server-Sent Events&lt;/a&gt;. Using &lt;code&gt;curl&lt;/code&gt; as an example, I type this in my terminal:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;curl -H &amp;quot;Authorization: Bearer {ACCESS_TOKEN_GOES_HERE}&amp;quot; \
         https://api.spark.io/v1/events/spark-hq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and now I&amp;#39;m listening to a stream of events from &lt;code&gt;spark-hq&lt;/code&gt;. Besides my own motion sensor, we&amp;#39;ve got a temperature sensor (69 degrees!), and will be adding more as we put together more prototypes. Since this data is public, anyone can subscribe; go to the &lt;a href=&quot;https://www.spark.io/build&quot;&gt;Spark Build IDE&lt;/a&gt; and get your access token from the &amp;quot;Settings&amp;quot; panel, and you can subscribe to this data too!&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;iframe width=&quot;720&quot; height=&quot;405&quot; src=&quot;//www.youtube.com/embed/V_z9AZYUk0w&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;
&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;Now I don&amp;#39;t just want to see a stream of data in my terminal; I want to &lt;em&gt;do&lt;/em&gt; something with it. Luckily, Server-Sent Events are part of the HTML5 protocol, and there are interfaces available in many programming languages. Check out &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/eventsource/basics/&quot;&gt;this tutorial from html5rocks&lt;/a&gt; for more information on using Server-Sent Events.&lt;/p&gt;

&lt;h3&gt;Coming soon: more features!&lt;/h3&gt;

&lt;p&gt;This is just the beginning for &lt;code&gt;Spark.publish()&lt;/code&gt;. A few weeks from now we&amp;#39;ll add even more functionality, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up webhooks for events to POST a message back to your server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spark.subscribe()&lt;/code&gt;, so that devices can talk with one another&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us know what you think and share your &lt;code&gt;Spark.publish()&lt;/code&gt; projects on the &lt;a href=&quot;https://community.spark.io&quot;&gt;Spark Community&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>We're on Maker Shed! Also, Will teaches you to Spark. Also, command line goodness. Also, more.</title>
      <link>http://spark.github.io/staging-blog/2014/02/24/sprint-six/</link>
      <pubDate>Mon, 24 Feb 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/02/24/sprint-six</guid>
      <description>&lt;p&gt;We&amp;#39;re all pretty big nerds at Spark HQ, so it was pretty cool to see this in my inbox on Thursday.&lt;/p&gt;

&lt;h3&gt;Spark Core on Maker Shed!&lt;/h3&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/maker-shed.jpg&quot;&gt;&lt;/div&gt;

&lt;p&gt;Maker Media is kind of a big deal in our little corner of the world, and they&amp;#39;ve been supporters of ours for a while. Behind the scenes we&amp;#39;ve been working with them for quite some time to get the Spark Core on their shelves.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re pleased to announce that the &lt;a href=&quot;http://www.makershed.com/Spark_Core_Chip_Antenna_p/mkspk01.htm&quot;&gt;Spark Core&lt;/a&gt; and &lt;a href=&quot;http://www.makershed.com/Maker_Kit_with_Chip_Antenna_Core_p/mkspk05.htm&quot;&gt;Spark Maker Kit&lt;/a&gt; are both available for purchase on Maker Shed!&lt;/p&gt;

&lt;p&gt;We hear they&amp;#39;re selling fast, and they will likely be sold out in the very near future --- so get yours now before that happens!&lt;/p&gt;

&lt;h3&gt;Getting started with Will&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/Bxda0hXtJz8&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;p&gt;Will, the tallest member of the Spark team, put together an amazing &amp;#39;Getting Started&amp;#39; video that walks through the set-up process of the Spark Core. This is the first of many video tutorials, as we&amp;#39;ve found that there&amp;#39;s no better way to learn than to follow along!&lt;/p&gt;

&lt;h3&gt;Spark Command Line Interface (CLI)&lt;/h3&gt;

&lt;p&gt;Speaking of big nerds, we love the command line. If you spend a lot of time writing code, you often find that graphics just get in the way of the pureness that is text.&lt;/p&gt;

&lt;p&gt;This week, we&amp;#39;re officially launching the Spark Command Line Interface, or CLI. The CLI is still in active development, so expect significant changes over the next few weeks. In the meantime, the CLI is now the fastest and easiest way to get started with your Spark Core.&lt;/p&gt;

&lt;p&gt;Before getting started with the CLI, you&amp;#39;ll need to have &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.org/&quot;&gt;npm&lt;/a&gt; installed. Go ahead, I&amp;#39;ll wait here.&lt;/p&gt;

&lt;p&gt;Ready? Try this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g spark-cli&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you&amp;#39;ve got the Spark CLI installed. Next:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spark&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;will tell you all the commands available. Here are some of my favorites:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spark cloud login&lt;/code&gt; to log in to your Spark account so that you can interact with your Cores.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spark cloud list&lt;/code&gt; returns a list of the Cores you own, and displays information about their status. statuses. statii?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spark cloud flash 0123456789ABCDEFGHI core-firmware.bin&lt;/code&gt; will flash your Core with a binary file of your choosing. Or you can flash &lt;code&gt;my_application.ino&lt;/code&gt; to send a single Arduino file, or &lt;code&gt;/projects/big_app/src&lt;/code&gt; to send an entire directory.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spark variable get all temperature&lt;/code&gt; returns the temperature variable from all available Cores.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spark serial wifi&lt;/code&gt; will help you connect your Core to your Wi-Fi network.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s lots more where that came from; for a full list of available commands, simply type &lt;code&gt;spark&lt;/code&gt; in your terminal, or visit the &lt;a href=&quot;https://github.com/spark/spark-cli&quot;&gt;Github repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And speaking of Github...&lt;/p&gt;

&lt;h3&gt;Our open source has a new home&lt;/h3&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/spark-source.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;As the volume of our open source content grows, it&amp;#39;s become a little unwieldy. Now if you&amp;#39;d like to browse our open source repositories, visit &lt;a href=&quot;http://spark.github.io&quot;&gt;spark.github.io&lt;/a&gt; to see an organized view of the open source tech stack for connected devices that we&amp;#39;ve been publishing over the last few months.&lt;/p&gt;

&lt;p&gt;Using the Github tools we&amp;#39;ve made available, you can star a repository to follow it for changes, create an issue to request a feature or share a bug, or track our workflow on &lt;a href=&quot;http://www.waffle.io&quot;&gt;waffle.io&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;full&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/waffle.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;Starting with the &lt;a href=&quot;https://www.github.com/spark/core-firmware&quot;&gt;core-firmware&lt;/a&gt; repository, we&amp;#39;re sharing our backlog with the community to get your feedback about our priorities and to get your help and input wherever you&amp;#39;re willing to provide it. Workflows for other repositories will go live over the next couple of weeks.&lt;/p&gt;

&lt;h3&gt;Other stuff&lt;/h3&gt;

&lt;p&gt;There were a few other things - improvements to the documentation, web IDE improvements to no longer send .cpp files through the Arduino pre-processor, API improvements, and bug fixes. But who can keep track?&lt;/p&gt;

&lt;p&gt;Enjoy the improvements, and if you have any feedback, please share it in &lt;a href=&quot;https://community.spark.io&quot;&gt;the community&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Multiple files in the IDE, open source Android app, and more</title>
      <link>http://spark.github.io/staging-blog/2014/02/10/sprint-five/</link>
      <pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/02/10/sprint-five</guid>
      <description>&lt;p&gt;As promised last time around, a major focus of Sprint 5 was to deliver &amp;quot;multiple files&amp;quot; in the web IDE. Consider it delivered!&lt;/p&gt;

&lt;h3&gt;Multiple files in the Spark IDE&lt;/h3&gt;

&lt;div class=&quot;full zoomable&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/multi-files.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;See that little + icon at the top of the screen? Give that the old clickety-click and you&amp;#39;ll find yourself with multiple files.&lt;/p&gt;

&lt;p&gt;The Spark Build IDE automatically adds two files to your project: a header file (.h) and a C++ file (.cpp). The IDE also automatically adds a &lt;code&gt;#include&lt;/code&gt; statement at the top of your main application that brings in the header file.&lt;/p&gt;

&lt;p&gt;This means that, as members of the community begin to create libraries for various components and accessories like sensors, LCD displays, etc., you can add them as separate files to keep your code clean. This can also help you keep yourself organized as your applications become more complex.&lt;/p&gt;

&lt;p&gt;This is the first step on a longer journey to make it easy to import and share libraries with the rest of the community. Most of our team is web guys, and we love tools like Node.js&amp;#39;s &lt;code&gt;npm&lt;/code&gt; and Ruby&amp;#39;s &lt;code&gt;gem&lt;/code&gt; that make it extremely easy to share libraries. This makes it possible for developers and engineers to stand on each others&amp;#39; shoulders. We hope to deliver the same simple solution through Spark&amp;#39;s in-process library system.&lt;/p&gt;

&lt;h3&gt;Android app: now open source!&lt;/h3&gt;

&lt;div class=&quot;full zoomable&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/android-app.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;The Spark Android app is now open source, ready to act as a template for your own mobile apps for your Spark-powered products.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/spark/android-app&quot;&gt;Spark Android app on Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We haven&amp;#39;t yet been able to secure permission to re-distribute TI&amp;#39;s Smart Config libraries, so they have been removed from the open source project, along with Gotham, the fonts we used to make it all pretty. If you&amp;#39;re building the Android app yourself, please follow the README to re-introduce these assets and make sure that the project will be able to build successfully.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t worry, iOS fans - the open source iOS app will be coming soon, too!&lt;/p&gt;

&lt;h3&gt;Next time: more documentation, a command line interface, Spark.publish(), and more!&lt;/h3&gt;

&lt;p&gt;We&amp;#39;ve got a lot on the docket for Sprint 6, including a number of features that we&amp;#39;ve been excited about for quite some time. Here&amp;#39;s what to expect over the next few weeks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We&amp;#39;ll be making lots of improvements and fixes to our documentation, including creating an oft-requested &amp;quot;getting started&amp;quot; screencast&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve got a Command Line Interface (CLI) in the works that will dramatically simplify the process of interacting with your Spark Core locally and through the Cloud.&lt;/li&gt;
&lt;li&gt;Perhaps our most-requested feature: &lt;code&gt;Spark.publish()&lt;/code&gt;, a mechanism to publish data from the Spark Core to your favorite web service (formerly known as &lt;code&gt;Spark.event()&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;We&amp;#39;re start on a mechanism for sharing community-generated libraries within the IDE&lt;/li&gt;
&lt;li&gt;Debugging CFOD, the &amp;quot;Cyan Flash of Death&amp;quot; - we&amp;#39;re getting closer to squashing it!&lt;/li&gt;
&lt;li&gt;Various IDE bug fixes&lt;/li&gt;
&lt;li&gt;Various Core firmware bug fixes (mostly relating to connectivity)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enjoy the improvements, and if you have any feedback, please share it in &lt;a href=&quot;https://community.spark.io&quot;&gt;the community&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Wow, much reliable, so better</title>
      <link>http://spark.github.io/staging-blog/2014/01/24/sprint-four/</link>
      <pubDate>Fri, 24 Jan 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/01/24/sprint-four</guid>
      <description>&lt;p&gt;We just completed our fourth sprint on the Spark platform, where our main focus was increasing the reliability and performance of the Cloud/Core combo. This involved improvements to a variety of areas, including the web IDE, the firmware, and our cross-compile service that builds binaries to be flashed onto the Core.&lt;/p&gt;

&lt;h3&gt;Example apps in the IDE&lt;/h3&gt;

&lt;p&gt;The most visible enhancement we put in place during this sprint was adding example Core apps to the IDE that can you can fork and edit. Check it out:&lt;/p&gt;

&lt;div class=&quot;full zoomable&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/example-apps.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;When you open an example app, you can fork it into your own apps in order to edit it and flash it onto a Core.&lt;/p&gt;

&lt;div class=&quot;full zoomable&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/fork.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;These apps are populated from a Github repository at &lt;a href=&quot;http://www.github.com/spark/examples&quot;&gt;github.com/spark/examples&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;full zoomable&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/github-examples.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;We are working on providing a mechanism to enable community contributions of example apps. In addition, this feature provides the first step toward libraries, a frequently requested feature; now that we have a linkage between the Spark IDE and Github, it opens up a lot of opportunities for collaborative coding through Spark.&lt;/p&gt;

&lt;h3&gt;Proper authentication for multiple clients&lt;/h3&gt;

&lt;p&gt;Previously the Spark API put in place basic authentication where each user has one API token, which can be used to securely access and control that user&amp;#39;s Spark Core.&lt;/p&gt;

&lt;div class=&quot;full zoomable&quot;&gt;&lt;img src=&quot;http://spark.github.io/staging-blog/images/access-token.png&quot;&gt;&lt;/div&gt;

&lt;p&gt;This feature, however, was limited to only one access token. This means that if multiple clients were to use the access token (for instance, the Spark iOS app and the user&amp;#39;s own webapp), either one could request a new access token, revoking the previous token, and causing a failure in the other app.&lt;/p&gt;

&lt;p&gt;This week, we implemented a feature allowing multiple clients. This means that two or more apps can request their own access token without revoking each others&amp;#39; access. Access tokens can be managed through the Spark API.&lt;/p&gt;

&lt;h5&gt;Generate a new access token&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;POST /oauth/token

# Using curl in your terminal
curl https://api.spark.io/oauth/token -u spark:spark \
     -d grant_type=password -d username=joe@example.com \
     -d password=SuperSecret

# A typical JSON response will look like this
{
    &amp;quot;access_token&amp;quot;: &amp;quot;254406f79c1999af65a7df4388971354f85cfee9&amp;quot;,
    &amp;quot;token_type&amp;quot;: &amp;quot;bearer&amp;quot;,
    &amp;quot;expires_in&amp;quot;: 7776000
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When creating a new access token, you need to specify several additional pieces of info.&lt;/p&gt;

&lt;p&gt;You must give a valid client ID and password in HTTP Basic Auth.
Any client ID will work right now, so we suggest &lt;code&gt;spark:spark&lt;/code&gt;.
In the POST body, you need three parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;grant_type=password&lt;/li&gt;
&lt;li&gt;username=YOUR_EMAIL@ADDRE.SS&lt;/li&gt;
&lt;li&gt;password=YOUR_PASSWORD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For now, Spark Build will list the single most recently created token.&lt;/p&gt;

&lt;h5&gt;List all your tokens&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;GET /v1/access_tokens

# Using curl in your terminal
curl https://api.spark.io/v1/access_tokens \
    -u joe@example.com:SuperSecret

# Example JSON response
[
    {
        &amp;quot;token&amp;quot;: &amp;quot;b5b901e8760164e134199bc2c3dd1d228acf2d98&amp;quot;,
        &amp;quot;expires_at&amp;quot;: &amp;quot;2014-04-27T02:20:36.177Z&amp;quot;,
        &amp;quot;client&amp;quot;: &amp;quot;spark&amp;quot;
    },
    {
        &amp;quot;token&amp;quot;: &amp;quot;ba54b6bb71a43b7612bdc7c972914604a078892b&amp;quot;,
        &amp;quot;expires_at&amp;quot;: &amp;quot;2014-04-27T06:31:08.991Z&amp;quot;,
        &amp;quot;client&amp;quot;: &amp;quot;spark&amp;quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can list all your access tokens by passing your email address and password
in an HTTP Basic Auth header to &lt;code&gt;/v1/access_tokens&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;Delete an access token&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;DELETE /v1/access_tokens/:token

# Using curl in your terminal
curl https://api.spark.io/v1/access_tokens/b5b901e8760164e134199bc2c3dd1d228acf2d98 \
     -u joe@example.com:SuperSecret -X DELETE

# Example JSON response
{
    &amp;quot;ok&amp;quot;: true
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a bunch of unused tokens and want to clean up, you can delete tokens.&lt;/p&gt;

&lt;p&gt;Just as for listing them, send your username and password in an HTTP Basic Auth header.&lt;/p&gt;

&lt;p&gt;Complete documentation for authentication on the Spark API can be found on &lt;a href=&quot;http://docs.spark.io/#/api/spark-cloud-api-authentication&quot;&gt;our docs site&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;More reliable firmware&lt;/h3&gt;

&lt;p&gt;Until this week, some users have been reporting an issue that has been referred to as the &amp;quot;Cyan Flash of Death&amp;quot;. Due to an internal failure in the CC3000, on some networks after anytime from a few minutes to a few hours, the Core would go mute, and would be unresponsive until manually reset.&lt;/p&gt;

&lt;p&gt;Because the underlying issue here is within the CC3000 where we do not have complete visibility, we are working with Texas Instruments to understand the root cause of the failure. In the meantime, we have issued a workaround; when the Core disconnects, it will now reset the Wi-Fi module so that it will recover. So while some users will still encounter occasional disconnects, they should now be temporary, and the Core will re-connect automatically within a minute or two.&lt;/p&gt;

&lt;p&gt;We will be continuing to debug this issue during our next Sprint.&lt;/p&gt;

&lt;h3&gt;Spark.disconnect() and Spark.connect()&lt;/h3&gt;

&lt;p&gt;In the Spark community, many users were requesting a mechanism to take control over the connection to the Spark Cloud. We have now implemented two functions, &lt;code&gt;Spark.disconnect()&lt;/code&gt; and &lt;code&gt;Spark.connect()&lt;/code&gt;, which will let users temporarily deactivate and re-activate the connection to the Spark Cloud.&lt;/p&gt;

&lt;h3&gt;Better code parsing&lt;/h3&gt;

&lt;p&gt;Like the Arduino IDE, the Spark IDE has a pre-processor that adds a little magic to your code. The pre-processor automatically includes the Spark libraries and generates function prototypes that declare functions at the beginning of your code so that they can be used anywhere.&lt;/p&gt;

&lt;p&gt;The pre-processor uses a bunch of regular expressions (regex), and previously had a few bugs, such as parsing functions within multi-line comments.&lt;/p&gt;

&lt;p&gt;This week, the pre-processor went through an overhaul, so more of your code will compile successfully.&lt;/p&gt;

&lt;h3&gt;Miscellaneous tweaks and improvements&lt;/h3&gt;

&lt;p&gt;In addition to the larger features and bugfixes above, we made a number of minor improvements, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Spark Build IDE should now show a &amp;#39;log in&amp;#39; screen rather than a &amp;#39;sign up&amp;#39; screen if you&amp;#39;ve already been to the site and created an account/logged in before.&lt;/li&gt;
&lt;li&gt;We purchased a wildcard certificate so that we can register more domains. Now, &lt;a href=&quot;http://community.sparkdevices.com&quot;&gt;community.sparkdevices.com&lt;/a&gt; is &lt;a href=&quot;http://community.spark.io&quot;&gt;community.spark.io&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;We improved our staging environment for the Cloud, Core, and IDE. This won&amp;#39;t have any direct effect on Spark users, since it is for internal development, but it does mean that we can better test changes internally before pushing them out.&lt;/li&gt;
&lt;li&gt;We merged a number of pull requests from the community, including &lt;a href=&quot;https://community.spark.io/t/important-7-bit-i2c-addresses-are-now-working-01-24-2014/2376?u=zach&quot;&gt;a fix to I2C addressing&lt;/a&gt;. Some of our best features and bug fixes are generated by the community; we happily accept pull requests to our firmware and other open source software!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Next up: Multiple files and further robustness improvements&lt;/h3&gt;

&lt;p&gt;As mentioned above, one of our most frequent feature requests is adding a capability for creating and sharing libraries for the Spark Core. While our example apps feature above was the first step, the next major step forward will be creating the capability for apps that include multiple files. This feature will be one of our top priorities during Sprint 5. Once this is complete, we will be able to link in community-generated libraries, most likely during Sprint 6.&lt;/p&gt;

&lt;p&gt;In addition, while we have made a number of changes improving the robustness of the Spark Core, there&amp;#39;s still work to do. During Sprint 5, we hope to squash the &amp;quot;Cyan Flash of Death&amp;quot; for good, and make other changes to ensure that the Spark Core stays connected and running your code consistently.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Building an open source Nest</title>
      <link>http://spark.github.io/staging-blog/2014/01/17/open-source-thermostat/</link>
      <pubDate>Fri, 17 Jan 2014 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2014/01/17/open-source-thermostat</guid>
      <description>&lt;p&gt;Earlier this week, Google bought Nest, a connected devices company, for $3.2 billion. This might seem like an ungodly sum for a company that makes thermostats and smoke detectors, but it makes absolute sense. Nest&amp;#39;s products are beautifully designed, their team is overflowing with talent, and they were the first company to figure out what the &amp;quot;Internet of Things&amp;quot; means to consumers and deliver products that people actually &lt;em&gt;want&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But in order to do this, Nest had to spend millions of dollars on R&amp;amp;D to build the basic infrastructure behind the product. The high cost made it impossible for anyone but the extremely well-capitalized to enter the market and create connected things.&lt;/p&gt;

&lt;p&gt;Well, we want to change that. At Spark, we&amp;#39;re making it easier to bring connected devices to market with the Spark Core, our Wi-Fi development kit, and the Spark Cloud, our cloud service for connected devices. And to prove it, we built our own approximation of the Nest Learning Thermostat in one day — and we&amp;#39;ve open sourced everything. In this process, we&amp;#39;ve come to respect the incredible technical challenges that Nest has solved while also coming to understand how much the game has changed since they first started.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot; muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/finalproduct.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/finalproduct.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Fair warning - we&amp;#39;re not claiming to have matched the Nest thermostat in a day; far from it. But remember — every polished product starts as a rough prototype.
As Alexis Ohanian
&lt;a href=&quot;https://twitter.com/towynlin/status/421456323138441216&quot;&gt;said&lt;/a&gt;
last week, &amp;quot;The first version of everything you love is janky!&amp;quot;&lt;/p&gt;

&lt;h2&gt;Hardware&lt;/h2&gt;

&lt;p&gt;First, you need hardware. In our case, that means sensors for temperature and humidity, plus a motion sensor to figure out whether you&amp;#39;re home, and relays to control the furnace and the fan. We also need a display so you can see the current temperature, and an enclosure to protect the messy bits.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot;  muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/breadboarded.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/breadboarded.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;The first thing we did this morning (after whiteboarding our attack plan) was to breadboard the hardware. Breadboarding is a non-permanent way to create an early hardware prototype. We chose a number of components for this product:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.spark.io&quot;&gt;Spark Core&lt;/a&gt; served as our connected brain.&lt;/li&gt;
&lt;li&gt;We display the temperature on a few &lt;a href=&quot;http://www.adafruit.com/products/870&quot;&gt;Adafruit 8x8 LED matrices&lt;/a&gt;. The interface for the displays is a common I2C bus.&lt;/li&gt;
&lt;li&gt;The primary sensor is a &lt;a href=&quot;http://www.digikey.com/product-detail/en/HIH6131-021-001/480-3652-6-ND/2704706&quot;&gt;Honeywell HumidIcon&lt;/a&gt;
temperature and humidity sensor, which shares the I2C bus with the displays.&lt;/li&gt;
&lt;li&gt;For our MVP, we decided a couple LEDs could represent whether the heat and fan were on. In the end the same pins would be connected to relays instead of the LEDs.&lt;/li&gt;
&lt;li&gt;If you want to save energy when a person&amp;#39;s not home, then you need a way to know when they are home so you can err on the side of comfort again. We added a &lt;a href=&quot;http://pewa.panasonic.com/assets/pcsd/catalog/napion-catalog.pdf&quot;&gt;Panasonic PIR motion detector&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all, it took about an hour to throw together this breadboarded prototype, although we had to order the components a couple of days beforehand. It took another couple of hours to pull together working firmware (see the software section below).&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot;  muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/cncmilled.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/cncmilled.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;The next step is to build an enclosure. The Nest enclosure is glass and aluminum, which are both very pretty but not very handy for prototyping. Instead, we chose acrylic and wood.&lt;/p&gt;

&lt;p&gt;First, we CNC milled two wooden rings: one to act as a stationary base, and other to spin freely as a temperature controller (turn the ring clockwise to increase the temperature, and counterclockwise to decrease the temperature).&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot;  muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/lasercut.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/lasercut.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Next, we laser cut three acrylic disks: one to act as the faceplate (which we later sanded to make it frosty), a second to act as the wall mounting plate, and a third connects the spinning wooden ring to a potentiometer.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot;  muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/enclosure.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/enclosure.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Once we completed the enclosure, we converted our breadboarded circuit into a more permanent design by permanently soldering the components.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot; muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/mohitsoldering.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/mohitsoldering.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;h2&gt;Software&lt;/h2&gt;

&lt;p&gt;Next, you need software. Some of this software runs on the thermostat (often called &amp;#39;firmware&amp;#39;), reading data from the sensors, controlling the relays, and displaying data on the screen. But since this is a connected thermostat, we also want a web interface so that it can be controlled from your smartphone or computer. And since it&amp;#39;s a learning thermostat, we also want to do some machine learning so that we can over time improve your comfort and energy efficiency. This software will run in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot; muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/workingproto.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/workingproto.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;&amp;#39;Firmware&amp;#39; is called &lt;em&gt;firm&lt;/em&gt; because it&amp;#39;s traditionally more locked down than software, since it runs on a little chip that usually is never accessed again after the product is delivered to the customer. But adding an internet connection changes things pretty significantly. Firmware is no longer &lt;em&gt;firm&lt;/em&gt; when you can update it from anywhere with the click of a button. With a Spark Core, you can flash new code onto your chip using our web IDE.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot; muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/joescode.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/joescode.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Our thermostat is complemented with a cloud-based web app that handles all of the complex logic of the thermostat. By doing this in the cloud, we can iterate faster using high-level programming languages and frameworks like Ruby on Rails rather than low-level embedded C.&lt;/p&gt;

&lt;p&gt;The Spark Cloud exposes your connected device through a REST API. That means that you can interact with it from any language that can generate HTTP requests, which is basically anything.&lt;/p&gt;

&lt;p&gt;The beauty of a connected device is that it can be constantly improving, whether it&amp;#39;s by updating the firmware, updating the cloud software, or by using machine learning to optimize and improve the logic of the device.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot; muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/softwareinaction.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/softwareinaction.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;Our user interface is a simple web app with a javascript knob that lets you select the desired temperature. The UI also includes a graph of historical temperatures, because data.&lt;/p&gt;

&lt;h2&gt;Connectivity&lt;/h2&gt;

&lt;p&gt;Once you&amp;#39;ve got your hardware and your software, it&amp;#39;s time to link the two worlds.&lt;/p&gt;

&lt;p&gt;Somehow you&amp;#39;ve got to get your thing online, and there are dozens of ways to do this. The simplest method is by adding a Wi-Fi module, so your product can act as a client on your local Wi-Fi network.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.spark.io&quot;&gt;Spark Core&lt;/a&gt; has a Wi-Fi module built in, and because it&amp;#39;s integrated with the micro-controller, &amp;#39;connectivity&amp;#39; is made easy. The Core automatically connects to the Spark Cloud through an encrypted tunnel, so you&amp;#39;ve got a secure connection to a cloud gateway out of the box. No programming the Wi-Fi module, and no finding or building communications protocols.&lt;/p&gt;

&lt;h2&gt;Putting it all together&lt;/h2&gt;

&lt;p&gt;Once our thermostat was complete, it was time to assemble it all together into the final package and mount it on the wall.&lt;/p&gt;

&lt;p&gt;&lt;video width=&quot;820&quot;  muted=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/underthecovers.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://s3.amazonaws.com/blog.spark.io/underthecovers.webm&quot; type=&quot;video/webm&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;All in, we spent about $70 on components to put this together (including $39 for the Spark Core); the wood and acrylic were free. We started working at 10am and finished at 3am, with 3.5 engineers involved (one went to bed early), and the only work we did in advance was order the electronic components.&lt;/p&gt;

&lt;h2&gt;Get excited, crazy things are possible.&lt;/h2&gt;

&lt;p&gt;We&amp;#39;re not saying that you can build a $3.2 billion company in a day. But we &lt;em&gt;are&lt;/em&gt; saying that you can build a $3.2 billion company, and it&amp;#39;s easier now than it&amp;#39;s ever been before.&lt;/p&gt;

&lt;p&gt;Connected devices/Internet of Things/M2M/Industrial Internet is a certified &lt;strong&gt;big deal&lt;/strong&gt;, and the Nest acquisition proves it. It doesn&amp;#39;t matter whether you&amp;#39;re a software developer with no hardware experience, an embedded designer with no web experience, or a psych major with no experience whatsoever. This is the next frontier, and it&amp;#39;s time to check it out.&lt;/p&gt;

&lt;p&gt;Your billion dollar company starts with a million dollar product, and your million dollar product starts with a hundred dollar prototype. So what are you waiting for?&lt;/p&gt;

&lt;p&gt;To download the open source files for the Spark thermostat, visit our &lt;a href=&quot;http://www.github.com/spark/thermostat&quot;&gt;Github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Follow us on &lt;a href=&quot;http://www.twitter.com/sparkdevices&quot;&gt;Twitter&lt;/a&gt;, discuss at &lt;a href=&quot;https://news.ycombinator.com/item?id=7075626&quot;&gt;Hacker News&lt;/a&gt;, and get a Spark Core at &lt;a href=&quot;http://www.spark.io&quot;&gt;spark.io&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>So many new features!</title>
      <link>http://spark.github.io/staging-blog/2013/12/21/sprint-two/</link>
      <pubDate>Sat, 21 Dec 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://spark.github.io/staging-blog/2013/12/21/sprint-two</guid>
      <description>&lt;p&gt;So much to share from this sprint!
The last two weeks have been a whirlwind.
First of all, we have a new blog!  Welcome.&lt;/p&gt;

&lt;h2&gt;Web IDE&lt;/h2&gt;

&lt;p&gt;Three new features: you can now claim, unclaim, and rename Cores through Spark Build.
Other improvements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clearer error messages on Flash/Verify&lt;/li&gt;
&lt;li&gt;Case insensitive usernames&lt;/li&gt;
&lt;li&gt;Flash automatically saves&lt;/li&gt;
&lt;li&gt;Verify and Flash are ten times faster!

&lt;ul&gt;
&lt;li&gt;We incorporated the winning makefile &lt;a href=&quot;https://community.sparkdevices.com/t/feature-bounty-improve-our-makefile/567&quot;&gt;feature bounty&lt;/a&gt; pull request from &lt;a href=&quot;https://community.sparkdevices.com/users/mattande/activity&quot;&gt;Matt Anderson&lt;/a&gt; into the compile server.&lt;/li&gt;
&lt;li&gt;We don&amp;#39;t recompile your firmware if you haven&amp;#39;t edited the code. First hitting Verify, then hitting Flash now only results in one compile cycle.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Documentation&lt;/h2&gt;

&lt;p&gt;We added some great docs to help users better
understand the colors of the RGB LED on the Core.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On the &amp;quot;Connecting your Core&amp;quot; page,
there&amp;#39;s a new, highly detailed section called
&lt;a href=&quot;http://docs.spark.io/#/connect/troubleshooting-by-color&quot;&gt;Troubleshooting by Color&lt;/a&gt;
that helps you understand exactly what&amp;#39;s happening.&lt;/li&gt;
&lt;li&gt;On the &amp;quot;Getting Started&amp;quot; page, in
&lt;a href=&quot;http://docs.spark.io/#/start/step-3-connect-the-core-to-wi-fi&quot;&gt;Step 3&lt;/a&gt;,
we added a click-through animation of the Core&amp;#39;s flashing/breathing LED
to show all the steps one sees when setting up a Core the first time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There&amp;#39;s also a
&lt;a href=&quot;http://docs.spark.io/#/examples/local-communication&quot;&gt;new annotated example&lt;/a&gt;
showing how to do local communicaton with your Core.
Simple &lt;a href=&quot;https://github.com/spark/local-communication-example&quot;&gt;example servers&lt;/a&gt;
are on GitHub in ruby and node.js.&lt;/p&gt;

&lt;p&gt;Two big forum posts in case you missed them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://community.sparkdevices.com/t/spark-core-troubleshooting-guide-spark-team/696&quot;&gt;Troubleshooting Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://community.sparkdevices.com/t/sparkbot-spark-core-roomba/625&quot;&gt;SparkBot = Spark Core + Roomba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Firmware Improvements&lt;/h2&gt;

&lt;p&gt;You now have control over the RGB LED on the Core!
To stop breathing cyan and turn it red for half a second:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;RGB.control(true);
RGB.color(255, 0, 0);
delay(500);
RGB.control(false);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We&amp;#39;ll add this to the docs soon, but the arguments
to &lt;code&gt;RGB.color()&lt;/code&gt; are red, green, and blue values 0–255.&lt;/p&gt;

&lt;p&gt;We also improved the USB Serial Wi-Fi credentials tool;
it now supports WPA2, WPA, WEP and unsecured networks.&lt;/p&gt;

&lt;p&gt;Newly implemented Arduino/Wiring functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;delayMicroseconds()&lt;/li&gt;
&lt;li&gt;micros()&lt;/li&gt;
&lt;li&gt;shiftIn()&lt;/li&gt;
&lt;li&gt;shiftOut()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, you can now easily get your Core ID in firmware with &lt;code&gt;Spark.deviceID()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We released an open source patch programmer for upgrading the CC3000 firmware.&lt;/p&gt;

&lt;p&gt;We improved the stability of over-the-air firmware updates in the face of lossy networks.&lt;/p&gt;

&lt;h2&gt;Cloud&lt;/h2&gt;

&lt;p&gt;You can check the health status of the Spark Cloud at
&lt;a href=&quot;http://status.spark.io/&quot;&gt;status.spark.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We squashed some memory leaks in the Device Service
so your Core connection is now stable for longer.&lt;/p&gt;

&lt;h2&gt;Mobile Apps&lt;/h2&gt;

&lt;p&gt;The Android app can now handle unsecured Wi-Fi networks.&lt;/p&gt;

&lt;p&gt;Open sourcing the mobile apps is high on the priority list,
but we&amp;#39;re blocked by licensing issues right now.
More info in January, but we will likely release
the Android app first and the iOS app later.&lt;/p&gt;
</description>
    </item>
    
    

  </channel> 
</rss>